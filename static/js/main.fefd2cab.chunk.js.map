{"version":3,"sources":["../node_modules/jspdf/dist sync","common/Header.js","common/Sidebar.js","pages/Login.js","common/Table.js","pages/CheckInOut.js","pages/Users.js","pages/Inventory.js","pages/Staff.js","pages/Transactions.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","trigger","Icon","name","Header","props","state","curTime","Date","toLocaleString","weekday","month","day","hour","minute","hour12","split","join","this","setState","clockIntervalId","setInterval","clearInterval","Row","className","style","display","flexDirection","Col","Nav","Link","href","xs","span","offset","Dropdown","icon","direction","Menu","Item","text","as","to","Component","Sidebar","Navbar","variant","active","location","pathname","Divider","withRouter","Login","visble","axios","get","then","user","onUpdateActiveUser","catch","err","console","log","Form","onSubmit","submitLogin","Field","Input","onChange","email","target","value","placeholder","Button","basic","content","backgroundColor","color","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","size","SortArrow","ThirdStateCheck","ViewColumn","Table","flexGrow","components","Toolbar","toolbarComponents","icons","title","columns","data","localization","toolbar","nRowsSelected","itemType","options","search","paging","rowStyle","rowData","tableData","searchFieldStyle","onRowClick","onSelectionChange","CheckInOut","handleSearchResult","bind","handleTransactionsChanges","handleDataChanges","error","userFound","onUpdateData","page","onDoneClick","selectedUser","users","onSuccessfulSearchResult","Container","handleChange","searchInput","handleSearchButtonClick","filter","uid","length","handleKeyDown","key","isError","onKeyPress","fluid","iconPosition","positive","animated","onClick","Content","visible","hidden","React","CheckInOutViewUser","getTransactionsToShow","preSetTransactions","transactions","Array","from","item","checkedInDate","forEach","transaction","result","fname","lname","items","iid","category","dueDate","getTime","getItemsToShow","preSetItems","atid","courses","some","course","includes","handleDoneClick","handleOpSelectClick","op","checked","isCheckoutModalOpen","close","selectedItemId","userProp","val","prevState","selectedItem","Object","assign","handleRowItemClick","rowClick","index","indexOf","find","tid","handleReturnSelectedItemsClick","map","handleCheckOutCartButtonClick","itemsToCheckOut","newTransactions","newAtid","Math","max","concat","t","toString","push","checkedOutDate","handleConfirmCheckOutButtonClick","formatDate","dateString","date","getMonth","getDate","getFullYear","selectedItemsToReturn","isCheckoutModalAllDateSelectorOpen","currentlyHeldColumnSet","field","render","itemsColumnSet","cartColumnSet","checkOutColumnSet","autoOk","inputVariant","label","format","InputAdornmentProps","position","handleDateChange","itemPanes","menuItem","event","selection","Set","sort","cartPanes","JSON","parse","stringify","Tab","panes","Modal","centered","selectedUserId","show","onHide","bsPrefix","Title","Body","IconButton","DatePicker","open","onClose","handleAllCheckoutDateChange","Footer","closeButton","nameError","defaultValue","readOnly","categoryError","notesError","notes","serialError","serial","Users","phone","creationDate","firstNameError","lastNameError","idError","emailError","editable","submitName","submitIcon","isChangesMadeToModal","showImportExcelModal","importedExcelData","importEmailErrors","handleUserEditClick","handleUserSelectClick","handleAddUserClick","tranactions","handleImportSpreadsheetClick","refs","fileUploader","click","handleClearAllCoursesClick","window","confirm","checkErrorUpdateDataSet","handleSubmitClick","handleSaveImportStudents","every","newUsers","undefined","nuser","handleDropdownChange","formatUserDate","hours","getHours","daynnite","getMinutes","getSeconds","updateImportEmail","test","handleItemClick","activeItem","headerStyleGrey","fontSize","columnSet","defaultSort","headerStyle","reduce","fileObj","files","reader","FileReader","rABS","readAsBinaryString","onload","wb","XLSX","read","type","bookVBA","utils","sheet_to_json","Sheets","SheetNames","repeat","existingUser","readAsArrayBuffer","formTablePanes","courseOptions","apply","importColumns","TextField","helperText","onChangeFile","clearing","multiple","allowAdditions","Group","widths","disabled","toggle","compact","Inventory","isItemIdUnavailable","handleItemIdVerify","handleItemSelectClick","handleItemAddClick","generateInitialNextItemId","expected","handleItemEditClick","iidError","formatDateForSearchBar","formatItemDate","toLocaleDateString","year","handleCourseDropdownChange","handleBrandDropdownChange","brand","handleCategoryDropdownChange","isNaN","fullID","i","ids","parseInt","a","b","newId","getList","returnData","element","elCopy","customFilterAndSearch","term","inventoryTablePanes","tempItems","brandOptions","categoryOptions","maxLength","clearable","Staff","dataSet","roles","handleDropdownAdditionRoles","roleOptions","handleDropdownAdditionCourses","handleDropdownChangeCourses","handleDropdownChangeRoles","onAddItem","Transactions","handleDropdownAddition","App","handleDataUpdate","handleActiveUserUpdate","loggedIn","activeUser","DateFnsUtils","exact","path","md","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.fefd2cab.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 507;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Col, Nav } from \"react-bootstrap\";\r\nimport { Dropdown, Icon } from \"semantic-ui-react\";\r\n\r\n// const sampleUser = { firstName: \"User\", lastName: \"Name\" };\r\n\r\nconst trigger = (\r\n  <h3>\r\n    User Name <Icon name=\"chevron down\" />\r\n  </h3>\r\n);\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      curTime: new Date()\r\n        .toLocaleString(\r\n          [],\r\n          (\"en-US\",\r\n          {\r\n            weekday: \"short\",\r\n            month: \"short\",\r\n            day: \"numeric\",\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n            hour12: true,\r\n          })\r\n        )\r\n        .split(\",\")\r\n        .join(\"\\t\"),\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      clockIntervalId: setInterval(() => {\r\n        this.setState({\r\n          curTime: new Date()\r\n            .toLocaleString(\r\n              [],\r\n              (\"en-US\",\r\n              {\r\n                weekday: \"short\",\r\n                month: \"short\",\r\n                day: \"numeric\",\r\n                hour: \"2-digit\",\r\n                minute: \"2-digit\",\r\n                hour12: true,\r\n              })\r\n            )\r\n            .split(\",\")\r\n            .join(\"\\t\"),\r\n        });\r\n      }, 1000),\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.state.clockIntervalId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Row\r\n        className=\"header align-items-center\"\r\n        style={{ display: \"flex\", flexDirection: \"row\" }}\r\n      >\r\n        <Col>\r\n          <Nav.Link href=\"#/\">\r\n            <h2>\r\n              <Icon name=\"camera\" />\r\n              CageIMS\r\n            </h2>\r\n          </Nav.Link>\r\n        </Col>\r\n        <Col xs={{ span: 3, offset: 3 }}>\r\n          <div>\r\n            <h5>{this.state.curTime}</h5>\r\n          </div>\r\n        </Col>\r\n        <Col>\r\n          <Dropdown\r\n            className=\"header-dropdown\"\r\n            trigger={trigger}\r\n            icon={null}\r\n            direction=\"left\"\r\n          >\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item icon=\"settings\" text=\"Settings\" />\r\n              <Dropdown.Item\r\n                icon=\"sign-out\"\r\n                text=\"Sign Out\"\r\n                as={Link}\r\n                to=\"/login\"\r\n              />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { Nav, Navbar, Dropdown } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass Sidebar extends Component {\r\n  render() {\r\n    return (\r\n      <Navbar variant=\"light\" className=\"sidebar flex-column\">\r\n        <Nav variant=\"pills\" className=\"flex-column\">\r\n          <Nav.Item>\r\n            <Nav.Link href=\"#/\" active={this.props.location.pathname === \"/\"}>\r\n              <h5>\r\n                <Icon name=\"handshake\" />\r\n                Check In/Out\r\n              </h5>\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link\r\n              href=\"#/users\"\r\n              active={this.props.location.pathname === \"/users\"}\r\n            >\r\n              <h5>\r\n                <Icon name=\"users\" />\r\n                Users\r\n              </h5>\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link\r\n              href=\"#/inventory\"\r\n              active={this.props.location.pathname === \"/inventory\"}\r\n            >\r\n              <h5>\r\n                <Icon name=\"camera\" />\r\n                Inventory\r\n              </h5>\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link\r\n              href=\"#/transactions\"\r\n              active={this.props.location.pathname === \"/transactions\"}\r\n            >\r\n              <h5>\r\n                <Icon name=\"book\" />\r\n                History\r\n              </h5>\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link\r\n              href=\"#/staff\"\r\n              active={this.props.location.pathname === \"/staff\"}\r\n            >\r\n              <h5>\r\n                <Icon name=\"briefcase\" />\r\n                Staff\r\n              </h5>\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Dropdown.Divider />\r\n        </Nav>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Sidebar);\r\n","import React, { Component } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { Button, Form } from \"semantic-ui-react\";\nimport axios from \"axios\";\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    //this.handleLogin = this.handleLogin.bind(this);\n    this.state = {\n      visble: true,\n      curTime: new Date()\n        .toLocaleString(\n          [],\n          (\"en-US\",\n          {\n            weekday: \"short\",\n            month: \"short\",\n            day: \"numeric\",\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n        )\n        .split(\",\")\n        .join(\"\\t\"),\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      clockIntervalId: setInterval(() => {\n        this.setState({\n          curTime: new Date()\n            .toLocaleString(\n              [],\n              (\"en-US\",\n              {\n                weekday: \"short\",\n                month: \"short\",\n                day: \"numeric\",\n                hour: \"2-digit\",\n                minute: \"2-digit\",\n                hour12: true,\n              })\n            )\n            .split(\",\")\n            .join(\"\\t\"),\n        });\n      }, 1000),\n    });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.clockIntervalId);\n  }\n\n  submitLogin() {\n    axios\n      .get(\"/api/users/login\")\n      .then((user) => this.props.onUpdateActiveUser(user))\n      .catch((err) => console.log(err));\n  }\n\n  render() {\n    return (\n      <Row className=\"stretch-h\">\n        <Col className=\"login-page-left \">\n          <div className=\"vertical-center\">\n            <h1>{this.state.curTime}</h1>\n          </div>\n        </Col>\n        <Col className=\"login-page-right\">\n          <div>\n            <Form onSubmit={this.submitLogin}>\n              <h1>Login</h1>\n              <Form.Field>\n                <label>Email</label>\n                <Form.Input\n                  onChange={(e) => {this.setState({ email: e.target.value })}}\n                  placeholder=\"Email\"\n                  className=\"drop-shadow\"\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Password</label>\n                <Form.Input placeholder=\"Email\" className=\"drop-shadow\" />\n              </Form.Field>\n              <Form.Field>\n                <Button basic>Forgot Password</Button>\n              </Form.Field>\n              <Form.Button content=\"Submit\" />\n              <Button\n                style={{ backgroundColor: \"#46C88C\", color: \"white\" }}\n                // href=\"#/\"\n              >\n                Login\n              </Button>\n            </Form>\n          </div>\n        </Col>\n      </Row>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { Icon } from \"semantic-ui-react\";\nimport { forwardRef } from \"react\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => (\n    <Clear style={{ color: \"#12558f\" }} {...props} ref={ref} />\n  )),\n  Search: forwardRef((props, ref) => (\n    <Icon\n      name=\"search\"\n      size=\"large\"\n      style={{ color: \"#12558f\" }}\n      {...props}\n      ref={ref}\n    />\n  )),\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\nclass Table extends Component {\n  render() {\n    return (\n      <MaterialTable\n        style={{ flexGrow: 1 }}\n        components={{\n          Toolbar: (props) => (\n            <div>\n              <div className=\"table-header MuiPaper-rounded MuiPaper-elevation2\">\n                <MTableToolbar {...props} />\n              </div>\n              {this.props.toolbarComponents}\n            </div>\n          ),\n        }}\n        icons={tableIcons}\n        title={this.props.title}\n        columns={this.props.columns}\n        data={this.props.data}\n        localization={{\n          toolbar: {\n            nRowsSelected:\n              \"{0} \" +\n              (this.props.itemType ? this.props.itemType : \"row\") +\n              \"(s) selected\",\n          },\n        }}\n        options={{\n          ...{\n            search: true,\n            paging: false,\n            rowStyle: (rowData) => ({\n              backgroundColor: rowData.backgroundColor\n                ? rowData.backgroundColor\n                : rowData.tableData.id % 2 === 0\n                ? \"#FAFAFA\"\n                : \"#FFFFFF\",\n            }),\n            searchFieldStyle: { backgroundColor: \"white\", color: \"black\" },\n          },\n          ...this.props.options,\n        }}\n        onRowClick={this.props.onRowClick}\n        onSelectionChange={this.props.onSelectionChange}\n      ></MaterialTable>\n    );\n  }\n}\n\nexport default Table;\n","import React, { Component } from \"react\";\r\nimport { Input, Button, Icon, Form, Tab } from \"semantic-ui-react\";\r\nimport { Container, Col, Row, Modal } from \"react-bootstrap\";\r\nimport Table from \"../common/Table\";\r\nimport { KeyboardDatePicker, DatePicker } from \"@material-ui/pickers\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DateRange from \"@material-ui/icons/DateRange\";\r\n\r\nclass CheckInOut extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSearchResult = this.handleSearchResult.bind(this);\r\n    this.handleTransactionsChanges = this.handleDataChanges.bind(this);\r\n    this.state = {\r\n      error: false,\r\n      userFound: \"\",\r\n      // {\r\n      //     fname: \"Greg\",\r\n      //     lname: \"Smelkov\",\r\n      //     uid: \"12345\",\r\n      //     courses: [\"Photography I\", \"Photography II\"],\r\n      // },\r\n    };\r\n  }\r\n\r\n  handleSearchResult(userFound) {\r\n    // console.log(userFound);\r\n    this.setState({ userFound });\r\n  }\r\n\r\n  handleDataChanges(data) {\r\n    this.props.onUpdateData(data);\r\n  }\r\n\r\n  render() {\r\n    const userFound = this.state.userFound;\r\n    let page;\r\n    if (!userFound)\r\n      page = (\r\n        <Search\r\n          users={this.props.data.users}\r\n          onSuccessfulSearchResult={this.handleSearchResult}\r\n        />\r\n      );\r\n    else\r\n      page = (\r\n        <CheckInOutViewUser\r\n          data={this.props.data}\r\n          onDoneClick={this.handleSearchResult}\r\n          selectedUser={this.state.userFound}\r\n          onUpdateData={this.handleTransactionsChanges}\r\n        />\r\n      );\r\n    return <Container className=\"checkinout\">{page}</Container>;\r\n  }\r\n}\r\n\r\nexport default CheckInOut;\r\n\r\nclass Search extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: false,\r\n    };\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ searchInput: e.target.value });\r\n  };\r\n\r\n  handleSearchButtonClick = () => {\r\n    const users = this.props.users.filter(\r\n      (user) => user.uid === this.state.searchInput\r\n    );\r\n    if (users.length > 0) {\r\n      this.props.onSuccessfulSearchResult(users[0]);\r\n    } else {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      this.handleSearchButtonClick();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const isError = this.state.error;\r\n    return (\r\n      <div className=\"checkinout-search\">\r\n        <h1>Check In / Out</h1>\r\n        <Input\r\n          error={this.state.error}\r\n          onChange={this.handleChange}\r\n          onKeyPress={this.handleKeyDown}\r\n          size=\"huge\"\r\n          fluid\r\n          icon=\"users\"\r\n          iconPosition=\"left\"\r\n          placeholder=\"Search by exact ID...\"\r\n          className=\"drop-shadow\"\r\n        />\r\n        {isError && (\r\n          <div className=\"error-text\">\r\n            <p>Error: ID is invalid.</p>\r\n          </div>\r\n        )}\r\n        <Button\r\n          size=\"big\"\r\n          positive\r\n          basic\r\n          animated\r\n          onClick={this.handleSearchButtonClick}\r\n        >\r\n          <Button.Content visible>Search</Button.Content>\r\n          <Button.Content hidden>\r\n            <Icon name=\"search\" />\r\n          </Button.Content>\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass CheckInOutViewUser extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      op: \"\",\r\n\r\n      selectedItemId: null,\r\n      selectedItem: {},\r\n\r\n      selectedItemsToReturn: [],\r\n\r\n      transactions: [],\r\n      items: [],\r\n\r\n      newTransactions: [],\r\n\r\n      isCheckoutModalOpen: false,\r\n      isCheckoutModalAllDateSelectorOpen: false,\r\n    };\r\n  }\r\n\r\n  getTransactionsToShow = (preSetTransactions) => {\r\n    let transactions = Array.from(\r\n      (preSetTransactions\r\n        ? preSetTransactions\r\n        : this.props.data.transactions\r\n      ).filter(\r\n        (item) =>\r\n          item.uid === this.props.selectedUser.uid && !item.checkedInDate\r\n      )\r\n    );\r\n    transactions.forEach((transaction) => {\r\n      let result = this.props.data.users.filter(\r\n        (user) => transaction.uid === user.uid\r\n      );\r\n      transaction.fname = result[0] ? result[0].fname : \"\";\r\n      transaction.lname = result[0] ? result[0].lname : \"\";\r\n      result = this.props.data.items.filter(\r\n        (item) => transaction.iid === item.iid\r\n      );\r\n      transaction.name = result[0] ? result[0].name : \"\";\r\n      transaction.category = result[0] ? result[0].category : \"\";\r\n\r\n      transaction.backgroundColor =\r\n        !transaction.checkedInDate &&\r\n        new Date(transaction.dueDate).getTime() < new Date().getTime()\r\n          ? \"mistyrose\"\r\n          : \"\";\r\n    });\r\n    return transactions;\r\n  };\r\n\r\n  getItemsToShow = (preSetItems) => {\r\n    let items = Array.from(\r\n      (preSetItems ? preSetItems : this.props.data.items).filter(\r\n        (item) =>\r\n          !item.atid &&\r\n          this.props.selectedUser.courses.some((course) =>\r\n            item.courses.includes(course)\r\n          )\r\n      )\r\n    );\r\n    return items;\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      transactions: this.getTransactionsToShow(),\r\n      items: this.getItemsToShow(),\r\n    });\r\n  }\r\n\r\n  handleDoneClick = () => {\r\n    this.props.onDoneClick(\"\");\r\n  };\r\n\r\n  handleOpSelectClick = (e, op) => {\r\n    this.state.transactions.forEach((transaction) => {\r\n      if (transaction.tableData) transaction.tableData.checked = false;\r\n    });\r\n    this.state.items.forEach((item) => {\r\n      if (item.tableData) item.tableData.checked = false;\r\n    });\r\n    this.setState({ op, isCheckoutModalOpen: false });\r\n  };\r\n\r\n  close = () =>\r\n    this.setState({\r\n      selectedItemId: null,\r\n      isCheckoutModalOpen: false,\r\n    });\r\n\r\n  handleChange = (e, userProp) => {\r\n    const val = e.target.value;\r\n    this.setState((prevState) => {\r\n      let selectedItem = Object.assign({}, prevState.selectedItem);\r\n      selectedItem[userProp] = val;\r\n      return { selectedItem };\r\n    });\r\n  };\r\n\r\n  handleRowItemClick = (e, rowData, rowClick = true) => {\r\n    if (this.state.op === \"checkin\") {\r\n      let transactions = this.state.transactions;\r\n      const index = transactions.indexOf(rowData);\r\n      transactions[index].tableData.checked = !transactions[index].tableData\r\n        .checked;\r\n      this.setState({ transactions });\r\n    } else if (this.state.op === \"checkout\") {\r\n      let items = this.state.items;\r\n      const item = items.find((item) => item.iid === rowData.iid);\r\n      if (rowClick) item.tableData.checked = !item.tableData.checked;\r\n      this.setState({ items });\r\n    } else {\r\n      this.setState({\r\n        selectedItemId: rowData.tid,\r\n        selectedItem: rowData,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleReturnSelectedItemsClick = (e) => {\r\n    let data = Object.assign({}, this.props.data);\r\n    const completedTransactionIds = this.state.transactions\r\n      .filter((transaction) => transaction.tableData?.checked)\r\n      .map((transaction) => transaction.tid);\r\n    completedTransactionIds.forEach((id) => {\r\n      let transaction = data.transactions.find(\r\n        (transaction) => transaction.tid === id\r\n      );\r\n      transaction.checkedInDate = new Date().getTime();\r\n      let item = data.items.find((item) => item.iid === transaction.iid);\r\n      item.atid = \"\";\r\n    });\r\n\r\n    this.props.onUpdateData(data);\r\n\r\n    this.setState(\r\n      {\r\n        transactions: this.getTransactionsToShow(),\r\n        items: this.getItemsToShow(),\r\n      },\r\n      this.handleOpSelectClick(e, \"\")\r\n    );\r\n  };\r\n\r\n  handleCheckOutCartButtonClick = (e) => {\r\n    let data = Object.assign({}, this.props.data);\r\n    const itemsToCheckOut = this.state.items.filter(\r\n      (item) => item.tableData?.checked\r\n    );\r\n    let newTransactions = [];\r\n    itemsToCheckOut.forEach((item) => {\r\n      let newAtid = (\r\n        Math.max(\r\n          ...data.transactions.concat(newTransactions).map((t) => t.tid)\r\n        ) + 1\r\n      ).toString();\r\n      newTransactions.push({\r\n        tid: newAtid,\r\n        uid: this.props.selectedUser.uid,\r\n        iid: item.iid,\r\n        checkedOutDate: new Date().getTime(),\r\n        dueDate: null,\r\n        checkedInDate: \"\",\r\n      });\r\n    });\r\n\r\n    this.setState({ newTransactions, isCheckoutModalOpen: true });\r\n  };\r\n\r\n  handleConfirmCheckOutButtonClick = (e) => {\r\n    if (this.state.newTransactions.some((transaction) => !transaction.dueDate))\r\n      return;\r\n\r\n    let data = Object.assign({}, this.props.data);\r\n    data.transactions = data.transactions.concat(this.state.newTransactions);\r\n    this.state.newTransactions.forEach(\r\n      (transaction) =>\r\n        (data.items.find((item) => item.iid === transaction.iid).atid =\r\n          transaction.tid)\r\n    );\r\n\r\n    this.props.onUpdateData(data);\r\n    this.setState(\r\n      {\r\n        transactions: this.getTransactionsToShow(data.transactions),\r\n        items: this.getItemsToShow(),\r\n      },\r\n      this.handleOpSelectClick(e, \"\")\r\n    );\r\n  };\r\n\r\n  formatDate = (dateString) => {\r\n    if (!dateString) return \"\";\r\n    const date = new Date(dateString);\r\n    return (\r\n      date.getMonth() + 1 + \"/\" + date.getDate() + \"/\" + date.getFullYear()\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const selectedItemId = this.state.selectedItemId;\r\n    const selectedItem = this.state.selectedItem;\r\n\r\n    const handleDateChange = (date, iid) => {\r\n      let newTransactions = Array.from(this.state.newTransactions);\r\n      newTransactions.find(\r\n        (transaction) => transaction.iid === iid\r\n      ).dueDate = date.getTime();\r\n      this.setState({ newTransactions });\r\n    };\r\n\r\n    const handleAllCheckoutDateChange = (date) => {\r\n      let newTransactions = Array.from(this.state.newTransactions);\r\n      newTransactions.forEach(\r\n        (transaction) => (transaction.dueDate = date.getTime())\r\n      );\r\n      this.setState({\r\n        newTransactions,\r\n        isCheckoutModalAllDateSelectorOpen: false,\r\n      });\r\n    };\r\n\r\n    const currentlyHeldColumnSet = [\r\n      { title: \"Item Name\", field: \"name\" },\r\n      { title: \"Category\", field: \"category\" },\r\n      { title: \"Transaction Notes\", field: \"notes\" },\r\n      {\r\n        title: \"Checked Out\",\r\n        field: \"checkedOutDate\",\r\n        render: (rowData) => this.formatDate(rowData.checkedOutDate),\r\n      },\r\n      {\r\n        title: \"Due Date\",\r\n        field: \"dueDate\",\r\n        render: (rowData) => this.formatDate(rowData.dueDate),\r\n      },\r\n    ];\r\n\r\n    const itemsColumnSet = [\r\n      { title: \"Item Name\", field: \"name\" },\r\n      { title: \"Category\", field: \"category\" },\r\n      { title: \"Notes\", field: \"notes\" },\r\n    ];\r\n\r\n    const cartColumnSet = [\r\n      { title: \"Item Name\", field: \"name\" },\r\n      { title: \"Category\", field: \"category\" },\r\n    ];\r\n\r\n    const checkOutColumnSet = [\r\n      { title: \"Item Name\", field: \"name\" },\r\n      { title: \"Category\", field: \"category\" },\r\n      {\r\n        title: \"Due Date\",\r\n        field: \"dueDate\",\r\n        render: (rowData) => (\r\n          <KeyboardDatePicker\r\n            autoOk\r\n            error={\r\n              !this.state.newTransactions.find(\r\n                (transaction) => rowData.iid === transaction.iid\r\n              ).dueDate\r\n            }\r\n            variant=\"inline\"\r\n            inputVariant=\"outlined\"\r\n            label=\"Select due date\"\r\n            format=\"MM/dd/yyyy\"\r\n            value={\r\n              this.state.newTransactions.find(\r\n                (transaction) => rowData.iid === transaction.iid\r\n              ).dueDate\r\n                ? new Date(\r\n                    this.state.newTransactions.find(\r\n                      (transaction) => rowData.iid === transaction.iid\r\n                    ).dueDate\r\n                  )\r\n                : null\r\n            }\r\n            InputAdornmentProps={{ position: \"end\" }}\r\n            onChange={(date) => handleDateChange(date, rowData.iid)}\r\n          />\r\n        ),\r\n      },\r\n    ];\r\n\r\n    let itemPanes = [\r\n      {\r\n        menuItem: \"All\",\r\n        render: () => (\r\n          <Table\r\n            data={this.state.items}\r\n            itemType={\"item\"}\r\n            columns={itemsColumnSet}\r\n            title={<h3>All</h3>}\r\n            onRowClick={(event, rowData) => {\r\n              this.handleRowItemClick(event, rowData);\r\n            }}\r\n            onSelectionChange={(rowData, event) => {\r\n              this.handleRowItemClick(event, rowData, false);\r\n            }}\r\n            options={{ selection: true }}\r\n          />\r\n        ),\r\n      },\r\n    ];\r\n\r\n    const categories = [\r\n      ...new Set(this.state.items.map((item) => item.category)),\r\n    ].sort();\r\n    categories.forEach((category) => {\r\n      itemPanes.push({\r\n        menuItem: category,\r\n        render: () => (\r\n          <Table\r\n            data={this.state.items.filter((item) => item.category === category)}\r\n            itemType={\"item\"}\r\n            columns={itemsColumnSet}\r\n            title={<h3>{category}</h3>}\r\n            onRowClick={(event, rowData) =>\r\n              this.handleRowItemClick(event, rowData)\r\n            }\r\n            onSelectionChange={(rowData, event) => {\r\n              this.handleRowItemClick(event, rowData, false);\r\n            }}\r\n            options={{ selection: true }}\r\n          />\r\n        ),\r\n      });\r\n    });\r\n\r\n    const cartPanes = [\r\n      {\r\n        menuItem: \"\",\r\n        render: () => (\r\n          <Table\r\n            data={JSON.parse(\r\n              JSON.stringify(\r\n                this.state.items.filter((item) => item.tableData?.checked)\r\n              )\r\n            )}\r\n            itemType={\"item\"}\r\n            columns={cartColumnSet}\r\n            title={<h3>Cart</h3>}\r\n            onRowClick={(event, rowData) =>\r\n              this.handleRowItemClick(event, rowData)\r\n            }\r\n            onSelectionChange={(event, rowData) => {\r\n              this.handleRowItemClick(event, rowData, false);\r\n            }}\r\n            options={{ selection: true, search: false }}\r\n          />\r\n        ),\r\n      },\r\n    ];\r\n\r\n    let pageOp;\r\n    if (this.state.op === \"checkin\") {\r\n      pageOp = (\r\n        <div className=\"checkinout-viewuser\">\r\n          <Row className=\"page-menu\">\r\n            <h1>\r\n              {this.props.selectedUser.fname +\r\n                \" \" +\r\n                this.props.selectedUser.lname}{\" \"}\r\n              -- Check In/Return\r\n            </h1>\r\n            <Button\r\n              onClick={(e) => {\r\n                this.handleOpSelectClick(e, \"\");\r\n              }}\r\n              size=\"big\"\r\n              animated\r\n              color=\"green\"\r\n            >\r\n              <Button.Content visible>Back</Button.Content>\r\n              <Button.Content hidden>\r\n                <Icon name=\"arrow circle left\" />\r\n              </Button.Content>\r\n            </Button>\r\n          </Row>\r\n          <Row>\r\n            <div className=\"current-table-container\">\r\n              <Table\r\n                data={this.state.transactions}\r\n                itemType={\"item\"}\r\n                columns={currentlyHeldColumnSet}\r\n                title={<h3>Currently held items:</h3>}\r\n                onRowClick={(event, rowData) =>\r\n                  this.handleRowItemClick(event, rowData)\r\n                }\r\n                options={{ selection: true }}\r\n              />\r\n            </div>\r\n          </Row>\r\n          <Row className=\"flex-end\">\r\n            <Button\r\n              onClick={(e) => {\r\n                this.handleOpSelectClick(e, \"\");\r\n              }}\r\n              color=\"red\"\r\n              size=\"big\"\r\n            >\r\n              <Button.Content visible>Cancel</Button.Content>\r\n            </Button>\r\n            <Button\r\n              onClick={(e) => {\r\n                this.handleReturnSelectedItemsClick(e);\r\n              }}\r\n              color=\"orange\"\r\n              size=\"big\"\r\n            >\r\n              <Button.Content visible>Return Selected Items</Button.Content>\r\n            </Button>\r\n          </Row>\r\n        </div>\r\n      );\r\n    } else if (this.state.op === \"checkout\") {\r\n      pageOp = (\r\n        <div className=\"checkinout-viewuser\">\r\n          <Row className=\"page-menu\">\r\n            <h1>\r\n              {this.props.selectedUser.fname +\r\n                \" \" +\r\n                this.props.selectedUser.lname}{\" \"}\r\n              -- Check Out/Borrow\r\n            </h1>\r\n            <Button\r\n              onClick={(e) => {\r\n                this.handleOpSelectClick(e, \"\");\r\n              }}\r\n              size=\"big\"\r\n              animated\r\n              color=\"green\"\r\n            >\r\n              <Button.Content visible>Back</Button.Content>\r\n              <Button.Content hidden>\r\n                <Icon name=\"arrow circle left\" />\r\n              </Button.Content>\r\n            </Button>\r\n          </Row>\r\n          <Row>\r\n            <div className=\"checkout-table-wrapper\">\r\n              <Tab className=\"checkout-inv-table\" panes={itemPanes} />\r\n              <Tab className=\"checkout-cart-table\" panes={cartPanes} />\r\n              <Modal\r\n                centered\r\n                size={this.state.selectedUserId >= 0 ? \"xl\" : \"lg\"}\r\n                show={this.state.isCheckoutModalOpen}\r\n                onHide={this.close}\r\n              >\r\n                <Modal.Header bsPrefix=\"modal-header\">\r\n                  <Modal.Title>Check Out</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                  <Row>\r\n                    <Col>\r\n                      <Table\r\n                        data={JSON.parse(\r\n                          JSON.stringify(\r\n                            this.state.items.filter(\r\n                              (item) => item.tableData?.checked\r\n                            )\r\n                          )\r\n                        )}\r\n                        itemType={\"item\"}\r\n                        columns={checkOutColumnSet}\r\n                        title={<h3>Cart</h3>}\r\n                        options={{ selection: false, search: false }}\r\n                        toolbarComponents={\r\n                          <div className=\"toolbarSetAllDate\">\r\n                            <div>\r\n                              Set all due dates:\r\n                              <IconButton\r\n                                onClick={() =>\r\n                                  this.setState({\r\n                                    isCheckoutModalAllDateSelectorOpen: true,\r\n                                  })\r\n                                }\r\n                              >\r\n                                <DateRange />\r\n                              </IconButton>\r\n                              <DatePicker\r\n                                autoOk\r\n                                variant=\"inline\"\r\n                                // ERROR: issue with open not finding correct render location,\r\n                                //   seems like it might be resolved in next datepicker update\r\n                                //   update plugin when possible\r\n                                //   otherwise will work temporarily\r\n                                open={\r\n                                  this.state.isCheckoutModalAllDateSelectorOpen\r\n                                }\r\n                                onClose={() =>\r\n                                  this.setState({\r\n                                    isCheckoutModalAllDateSelectorOpen: false,\r\n                                  })\r\n                                }\r\n                                format=\"MM/dd/yyyy\"\r\n                                onChange={(date) =>\r\n                                  handleAllCheckoutDateChange(date)\r\n                                }\r\n                                value={null}\r\n                                style={{ display: \"none\" }}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        }\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                  <Button\r\n                    onClick={(e) => {\r\n                      this.close();\r\n                    }}\r\n                    color=\"red\"\r\n                    size=\"big\"\r\n                  >\r\n                    <Button.Content visible>Cancel</Button.Content>\r\n                  </Button>\r\n                  <Button\r\n                    onClick={(e) => {\r\n                      this.handleConfirmCheckOutButtonClick(e);\r\n                    }}\r\n                    color=\"blue\"\r\n                    size=\"big\"\r\n                  >\r\n                    <Button.Content visible>Confirm Check Out</Button.Content>\r\n                  </Button>\r\n                </Modal.Footer>\r\n              </Modal>\r\n            </div>\r\n          </Row>\r\n          <Row className=\"flex-end\">\r\n            <Button\r\n              onClick={(e) => {\r\n                this.handleOpSelectClick(e, \"\");\r\n              }}\r\n              color=\"red\"\r\n              size=\"big\"\r\n            >\r\n              <Button.Content visible>Cancel</Button.Content>\r\n            </Button>\r\n            <Button\r\n              onClick={(e) => {\r\n                this.handleCheckOutCartButtonClick(e);\r\n              }}\r\n              color=\"blue\"\r\n              size=\"big\"\r\n            >\r\n              <Button.Content visible>Check Out Selected Items</Button.Content>\r\n            </Button>\r\n          </Row>\r\n        </div>\r\n      );\r\n    } else {\r\n      pageOp = (\r\n        <div className=\"checkinout-viewuser\">\r\n          <Row className=\"page-menu\">\r\n            <h1>\r\n              {this.props.selectedUser.fname +\r\n                \" \" +\r\n                this.props.selectedUser.lname}\r\n            </h1>\r\n            <Button\r\n              onClick={this.handleDoneClick}\r\n              size=\"big\"\r\n              animated\r\n              color=\"green\"\r\n            >\r\n              <Button.Content visible>Complete Transactions</Button.Content>\r\n              <Button.Content hidden>\r\n                <Icon name=\"check\" />\r\n              </Button.Content>\r\n            </Button>\r\n          </Row>\r\n          <Row>\r\n            <div className=\"current-table-container\">\r\n              <Table\r\n                data={this.state.transactions}\r\n                itemType={\"item\"}\r\n                columns={currentlyHeldColumnSet}\r\n                title={<h3>Currently held items:</h3>}\r\n                onRowClick={(event, rowData) =>\r\n                  this.handleRowItemClick(event, rowData)\r\n                }\r\n              />\r\n              <Modal\r\n                centered\r\n                size={this.state.selectedItemId >= 0 ? \"lg\" : \"lg\"}\r\n                show={selectedItemId != null}\r\n                onHide={this.close}\r\n              >\r\n                <Modal.Header closeButton bsPrefix=\"modal-header\">\r\n                  <Modal.Title>Item</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                  <Row>\r\n                    <Col>\r\n                      <Form>\r\n                        <Form.Field>\r\n                          <label>\r\n                            First Name:\r\n                            {this.state.nameError && (\r\n                              <span className=\"error-text modal-label-error-text\">\r\n                                Error: Field cannot be empty.\r\n                              </span>\r\n                            )}\r\n                          </label>\r\n                          <Form.Input\r\n                            error={this.state.nameError}\r\n                            name=\"fname\"\r\n                            placeholder=\"First Name\"\r\n                            defaultValue={selectedItem.fname}\r\n                            readOnly\r\n                          ></Form.Input>\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                          <label>\r\n                            Last Name:\r\n                            {this.state.nameError && (\r\n                              <span className=\"error-text modal-label-error-text\">\r\n                                Error: Field cannot be empty.\r\n                              </span>\r\n                            )}\r\n                          </label>\r\n                          <Form.Input\r\n                            error={this.state.nameError}\r\n                            name=\"lname\"\r\n                            placeholder=\"Last Name\"\r\n                            defaultValue={selectedItem.lname}\r\n                            readOnly\r\n                          ></Form.Input>\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                          <label>\r\n                            Item Name:\r\n                            {this.state.categoryError && (\r\n                              <span className=\"error-text modal-label-error-text\">\r\n                                Error: Field cannot be empty.\r\n                              </span>\r\n                            )}\r\n                          </label>\r\n                          <Form.Input\r\n                            error={this.state.categoryError}\r\n                            name=\"name\"\r\n                            placeholder=\"name\"\r\n                            defaultValue={selectedItem.category}\r\n                            readOnly\r\n                          ></Form.Input>\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                          <label>\r\n                            Category:\r\n                            {this.state.notesError && (\r\n                              <span className=\"error-text modal-label-error-text\">\r\n                                Error: Field cannot be empty.\r\n                              </span>\r\n                            )}\r\n                          </label>\r\n                          <Form.Input\r\n                            name=\"category\"\r\n                            error={this.state.notesError}\r\n                            placeholder=\"Category\"\r\n                            defaultValue={selectedItem.notes}\r\n                            readOnly\r\n                          ></Form.Input>\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                          <label>\r\n                            Serial:\r\n                            {this.state.serialError && (\r\n                              <span className=\"error-text modal-label-error-text\">\r\n                                Error: Field cannot be empty.\r\n                              </span>\r\n                            )}\r\n                          </label>\r\n                          <Form.Input\r\n                            name=\"serial\"\r\n                            error={this.state.serialError}\r\n                            placeholder=\"Serial\"\r\n                            defaultValue={selectedItem.serial}\r\n                            onChange={(e) => {\r\n                              this.handleChange(e, \"serial\");\r\n                            }}\r\n                            readOnly\r\n                          ></Form.Input>\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                          <label>\r\n                            Notes:\r\n                            {this.state.notesError && (\r\n                              <span className=\"error-text modal-label-error-text\">\r\n                                Error: Field cannot be empty.\r\n                              </span>\r\n                            )}\r\n                          </label>\r\n                          <Form.Input\r\n                            name=\"notes\"\r\n                            error={this.state.notesError}\r\n                            placeholder=\"Notes\"\r\n                            defaultValue={selectedItem.notes}\r\n                            onChange={(e) => {\r\n                              this.handleChange(e, \"notes\");\r\n                            }}\r\n                            readOnly\r\n                          ></Form.Input>\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                          <label>Checked Out:</label>\r\n                          <Form.Input\r\n                            name=\"checkedOut\"\r\n                            placeholder=\"Checked Out\"\r\n                            defaultValue={this.formatDate(\r\n                              selectedItem.checkedOutDate\r\n                            )}\r\n                            onChange={(e) => {\r\n                              this.handleChange(e, \"checkedOutDate\");\r\n                            }}\r\n                            readOnly\r\n                          ></Form.Input>\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                          <label>Checked In:</label>\r\n                          <Form.Input\r\n                            name=\"checkedIn\"\r\n                            placeholder=\"Checked In\"\r\n                            error={!selectedItem.checkedInDate}\r\n                            defaultValue={this.formatDate(\r\n                              selectedItem.checkedInDate\r\n                            )}\r\n                            onChange={(e) => {\r\n                              this.handleChange(e, \"checkedInDate\");\r\n                            }}\r\n                            readOnly\r\n                          ></Form.Input>\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                          <label>Due Date:</label>\r\n                          <Form.Input\r\n                            name=\"due\"\r\n                            placeholder=\"Due Date\"\r\n                            defaultValue={this.formatDate(selectedItem.dueDate)}\r\n                            onChange={(e) => {\r\n                              this.handleChange(e, \"dueDate\");\r\n                            }}\r\n                            readOnly\r\n                          ></Form.Input>\r\n                        </Form.Field>\r\n                      </Form>\r\n                    </Col>\r\n                  </Row>\r\n                </Modal.Body>\r\n                <Modal.Footer></Modal.Footer>\r\n              </Modal>\r\n            </div>\r\n          </Row>\r\n          <Row className=\"checkinout-buttons\">\r\n            <Button\r\n              onClick={(e) => {\r\n                this.handleOpSelectClick(e, \"checkin\");\r\n              }}\r\n              color=\"orange\"\r\n              size=\"big\"\r\n            >\r\n              <Button.Content visible>Return Items</Button.Content>\r\n            </Button>\r\n            <Button\r\n              onClick={(e) => {\r\n                this.handleOpSelectClick(e, \"checkout\");\r\n              }}\r\n              color=\"blue\"\r\n              size=\"big\"\r\n            >\r\n              <Button.Content visible>Check Out Items</Button.Content>\r\n            </Button>\r\n          </Row>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return pageOp;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Divider,\r\n  Button,\r\n  Form,\r\n  Dropdown,\r\n  Tab,\r\n  Icon,\r\n  Menu,\r\n} from \"semantic-ui-react\";\r\nimport { Col, Row, Modal } from \"react-bootstrap\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport XLSX from \"xlsx\";\r\nimport Table from \"../common/Table\";\r\n\r\nclass Users extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    const headerStyleGrey = {\r\n      backgroundColor: \"#E2E2E2\",\r\n      color: \"black\",\r\n      fontSize: \"24\",\r\n    };\r\n    this.handleImportSpreadsheetClick = this.handleImportSpreadsheetClick.bind(\r\n      this\r\n    );\r\n    this.state = {\r\n      columnSet: [\r\n        {\r\n          title: \"Last Name\",\r\n          field: \"lname\",\r\n          defaultSort: \"asc\",\r\n          headerStyle: headerStyleGrey,\r\n        },\r\n        { title: \"First Name\", field: \"fname\", headerStyle: headerStyleGrey },\r\n        {\r\n          title: \"Courses\",\r\n          field: \"courses\",\r\n          headerStyle: headerStyleGrey,\r\n          render: (rowData) => {\r\n            return rowData.courses.length > 0\r\n              ? rowData.courses.reduce((result, item) => (\r\n                  <>\r\n                    {result}\r\n                    {\", \"}\r\n                    {item}\r\n                  </>\r\n                ))\r\n              : \"\";\r\n          },\r\n        },\r\n      ],\r\n\r\n      activeItem: \"user\",\r\n      firstNameError: false,\r\n      lastNameError: false,\r\n      idError: false,\r\n      emailError: false,\r\n      editable: true,\r\n      isChangesMadeToModal: false,\r\n\r\n      showImportExcelModal: false,\r\n      importedExcelData: [],\r\n      importEmailErrors: {},\r\n\r\n      selectedUserId: null,\r\n      selectedUser: {\r\n        fname: \"\",\r\n        lname: \"\",\r\n        courses: [],\r\n        uid: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        notes: \"\",\r\n        transactions: [],\r\n        creationDate: \"\",\r\n      },\r\n    };\r\n  }\r\n\r\n  close = () =>\r\n    this.setState({\r\n      selectedUserId: null,\r\n      selectedUser: {\r\n        fname: \"\",\r\n        lname: \"\",\r\n        courses: [],\r\n        uid: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        notes: \"\",\r\n        transactions: [],\r\n        creationDate: \"\",\r\n      },\r\n      firstNameError: false,\r\n      lastNameError: false,\r\n      idError: false,\r\n      emailError: false,\r\n      editable: true,\r\n      submitName: \"Close\",\r\n      submitIcon: null,\r\n      isChangesMadeToModal: false,\r\n      showImportExcelModal: false,\r\n      importedExcelData: [],\r\n      importEmailErrors: {},\r\n    });\r\n\r\n  handleChange = (e, userProp) => {\r\n    const val = e.target.value;\r\n    this.setState((prevState) => {\r\n      let selectedUser = Object.assign({}, prevState.selectedUser);\r\n      selectedUser[userProp] = val;\r\n      return { selectedUser, isChangesMadeToModal: true };\r\n    });\r\n  };\r\n\r\n  handleUserEditClick = () => {\r\n    !this.state.isChangesMadeToModal &&\r\n      this.setState({\r\n        editable: !this.state.editable,\r\n      });\r\n  };\r\n\r\n  handleUserSelectClick = (e, rowData) => {\r\n    this.setState({\r\n      selectedUserId: rowData.tableData.id,\r\n      selectedUser: this.props.data.users[rowData.tableData.id],\r\n    });\r\n    this.setState((prevState) => {\r\n      let selectedUser = Object.assign({}, prevState.selectedUser);\r\n      let transactions = Array.from(\r\n        this.props.data.transactions.filter(\r\n          (name) => name.uid === selectedUser.uid\r\n        )\r\n      );\r\n      transactions.forEach((transaction) => {\r\n        transaction.backgroundColor =\r\n          !transaction.checkedInDate &&\r\n          new Date(transaction.dueDate).getTime() < new Date().getTime()\r\n            ? \"mistyrose\"\r\n            : \"\";\r\n      });\r\n      selectedUser[\"transactions\"] = transactions;\r\n      return { selectedUser };\r\n    });\r\n  };\r\n\r\n  handleAddUserClick = () => {\r\n    this.setState({\r\n      selectedUserId: -1,\r\n      selectedUser: {\r\n        fname: \"\",\r\n        lname: \"\",\r\n        courses: [],\r\n        uid: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        notes: \"\",\r\n        creationDate: new Date().getTime(),\r\n        tranactions: [],\r\n      },\r\n      editable: false,\r\n    });\r\n  };\r\n\r\n  handleImportSpreadsheetClick = () => {\r\n    this.refs.fileUploader.click();\r\n  };\r\n\r\n  handleClearAllCoursesClick = () => {\r\n    if (\r\n      window.confirm(\r\n        \"Are you sure you want to clear every user's courses? This process is irreversible.\"\r\n      )\r\n    ) {\r\n      let data = Object.assign({}, this.props.data);\r\n      data.users.forEach((user) => (user.courses = []));\r\n      this.props.onUpdateData(data);\r\n    }\r\n  };\r\n\r\n  onChangeFile(event) {\r\n    const fileObj = event.target.files[0];\r\n    const reader = new FileReader();\r\n    const rABS = !!reader.readAsBinaryString;\r\n\r\n    reader.onload = (e) => {\r\n      const wb = XLSX.read(e.target.result, {\r\n        type: rABS ? \"binary\" : \"array\",\r\n        bookVBA: true,\r\n      });\r\n      const data = XLSX.utils\r\n        .sheet_to_json(wb.Sheets[wb.SheetNames[0]])\r\n        .map((user) => ({\r\n          fname: user[\"Preferred Name\"].split(/[\\s, ]+/)[1],\r\n          lname: user[\"Preferred Name\"].split(/[\\s, ]+/)[0],\r\n          courses: [],\r\n          uid:\r\n            \"0\".repeat(8 - user[\"ID\"].toString().length) +\r\n            user[\"ID\"].toString(),\r\n          email:\r\n            user[\"Preferred Name\"].split(/[\\s, ]+/)[1] +\r\n            \"_\" +\r\n            user[\"Preferred Name\"].split(/[\\s, ]+/)[0],\r\n          creationDate: new Date().getTime(),\r\n        }))\r\n        .map((nuser) => {\r\n          const existingUser = this.props.data.users.find(\r\n            (user) => user.uid === nuser.uid\r\n          );\r\n          if (existingUser === undefined) return nuser;\r\n          this.setState({\r\n            [\"importEmailValid\" +\r\n            existingUser.uid]: /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(\r\n              existingUser.email\r\n            ),\r\n          });\r\n          return existingUser;\r\n        });\r\n\r\n      //TODO: check ids aren't duplicate\r\n\r\n      this.setState({ importedExcelData: data, showImportExcelModal: true });\r\n    };\r\n\r\n    if (rABS) {\r\n      reader.readAsBinaryString(fileObj);\r\n    } else {\r\n      reader.readAsArrayBuffer(fileObj);\r\n    }\r\n  }\r\n\r\n  checkErrorUpdateDataSet = () => {\r\n    if (\r\n      !this.state.firstNameError &&\r\n      !this.state.lastNameError &&\r\n      !this.state.idError &&\r\n      !this.state.emailError\r\n    ) {\r\n      let data = Object.assign({}, this.props.data);\r\n      if (this.state.selectedUserId >= 0) {\r\n        data.users[this.state.selectedUserId] = this.state.selectedUser;\r\n      } else {\r\n        data.users.push(this.state.selectedUser);\r\n      }\r\n      this.props.onUpdateData(data);\r\n      this.close();\r\n    }\r\n  };\r\n\r\n  handleSubmitClick = () => {\r\n    if (this.state.isChangesMadeToModal) {\r\n      this.setState(\r\n        {\r\n          firstNameError: this.state.selectedUser.fname === \"\",\r\n          lastNameError: this.state.selectedUser.lname === \"\",\r\n          idError: this.state.selectedUser.uid === \"\",\r\n          emailError: this.state.selectedUser.email === \"\",\r\n        },\r\n        this.checkErrorUpdateDataSet\r\n      );\r\n    } else {\r\n      this.close();\r\n    }\r\n  };\r\n\r\n  handleSaveImportStudents = () => {\r\n    if (!this.state.isChangesMadeToModal) {\r\n      this.close();\r\n    }\r\n\r\n    if (\r\n      this.state.importedExcelData.every(\r\n        (user) => this.state[\"importEmailValid\" + user.uid]\r\n      )\r\n    ) {\r\n      let newUsers = Array.from(this.state.importedExcelData);\r\n      newUsers.forEach(\r\n        (user) =>\r\n          (user.courses = user.courses.concat(this.state.selectedUser.courses))\r\n      );\r\n      let users = [\r\n        ...newUsers,\r\n        ...this.props.data.users.filter(\r\n          (user) =>\r\n            this.state.importedExcelData.find(\r\n              (nuser) => nuser.uid === user.uid\r\n            ) === undefined\r\n        ),\r\n      ];\r\n\r\n      let data = Object.assign({}, this.props.data);\r\n      data.users = users;\r\n      this.props.onUpdateData(data);\r\n      this.close();\r\n    }\r\n  };\r\n\r\n  handleDropdownChange = (e, { value }) => {\r\n    const val = value;\r\n    this.setState((prevState) => {\r\n      let selectedUser = Object.assign({}, prevState.selectedUser);\r\n      selectedUser.courses = val;\r\n      return { selectedUser, isChangesMadeToModal: true };\r\n    });\r\n  };\r\n\r\n  formatDate = (dateString) => {\r\n    if (!dateString) return \"\";\r\n    const date = new Date(dateString);\r\n    return (\r\n      date.getMonth() + 1 + \"/\" + date.getDate() + \"/\" + date.getFullYear()\r\n    );\r\n  };\r\n\r\n  formatUserDate = (dateString) => {\r\n    if (!dateString) return \"\";\r\n    const date = new Date(dateString);\r\n    let hours = date.getHours();\r\n    let daynnite = \"\";\r\n    if (hours > 12) {\r\n      hours = hours - 12;\r\n      daynnite = \"PM\";\r\n    } else if (hours === 0) {\r\n      hours = 12;\r\n      daynnite = \"AM\";\r\n    } else if (hours < 12) {\r\n      daynnite = \"AM\";\r\n    }\r\n    return (\r\n      date.getMonth() +\r\n      1 +\r\n      \"/\" +\r\n      date.getDate() +\r\n      \"/\" +\r\n      date.getFullYear() +\r\n      \" \" +\r\n      hours +\r\n      \":\" +\r\n      (date.getMinutes() < 10 ? \"0\" + date.getMinutes() : date.getMinutes()) +\r\n      \":\" +\r\n      (date.getSeconds() < 10 ? \"0\" + date.getSeconds() : date.getSeconds()) +\r\n      \" \" +\r\n      daynnite\r\n    );\r\n  };\r\n\r\n  updateImportEmail = (e, uid) => {\r\n    const val = e.target.value;\r\n    this.setState((prevState) => {\r\n      let importedExcelData = Array.from(prevState.importedExcelData);\r\n      importedExcelData.find((user) => user.uid === uid).email = val;\r\n      return {\r\n        [\"importEmailValid\" +\r\n        uid]: /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(val),\r\n        isChangesMadeToModal: true,\r\n        importedExcelData,\r\n      };\r\n    });\r\n  };\r\n\r\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name });\r\n\r\n  render() {\r\n    const selectedUserId = this.state.selectedUserId;\r\n    const selectedUser = this.state.selectedUser;\r\n    let formTablePanes = [];\r\n    if (this.state.selectedUserId != null && this.state.selectedUserId >= 0) {\r\n      formTablePanes = [\r\n        {\r\n          menuItem: \"Due Items\",\r\n          render: () => (\r\n            <Table\r\n              title={\r\n                this.state.selectedUser.fname +\r\n                \" \" +\r\n                this.state.selectedUser.lname\r\n              }\r\n              columns={[\r\n                { title: \"Item ID\", field: \"iid\" },\r\n                { title: \"Transaction ID\", field: \"tid\" },\r\n                {\r\n                  title: \"Checked Out Date\",\r\n                  field: \"checkedOutDate\",\r\n                  render: (rowData) => this.formatDate(rowData.checkedOutDate),\r\n                },\r\n                {\r\n                  title: \"Due Date\",\r\n                  field: \"dueDate\",\r\n                  render: (rowData) => this.formatDate(rowData.dueDate),\r\n                },\r\n              ]}\r\n              data={Array.from(\r\n                this.state.selectedUser.transactions.filter(\r\n                  (name) => name.checkedInDate === \"\"\r\n                )\r\n              )}\r\n            ></Table>\r\n          ),\r\n        },\r\n        {\r\n          menuItem: \"Completed Transactions\",\r\n          render: () => (\r\n            <Table\r\n              title={\r\n                this.state.selectedUser.fname +\r\n                \" \" +\r\n                this.state.selectedUser.lname\r\n              }\r\n              columns={[\r\n                { title: \"Item ID\", field: \"iid\" },\r\n                { title: \"Transaction ID\", field: \"tid\" },\r\n                {\r\n                  title: \"Checked Out Date\",\r\n                  field: \"checkedOutDate\",\r\n                  render: (rowData) => this.formatDate(rowData.checkedOutDate),\r\n                },\r\n                {\r\n                  title: \"Checked In Date\",\r\n                  field: \"checkedInDate\",\r\n                  render: (rowData) => this.formatDate(rowData.checkedInDate),\r\n                },\r\n              ]}\r\n              data={Array.from(\r\n                this.state.selectedUser.transactions.filter(\r\n                  (name) => !(name.checkedInDate === \"\")\r\n                )\r\n              )}\r\n            ></Table>\r\n          ),\r\n        },\r\n      ];\r\n    }\r\n\r\n    const courseOptions = Array.from(\r\n      new Set(\r\n        [].concat.apply(\r\n          [],\r\n          [\r\n            this.state.selectedUser,\r\n            ...this.props.data.items,\r\n            ...this.props.data.users,\r\n          ]\r\n            .filter((item) => item.courses)\r\n            .map((item) => item.courses)\r\n        )\r\n      )\r\n    )\r\n      .sort()\r\n      .map((item) => ({ text: item, value: item }));\r\n\r\n    const importColumns = [\r\n      { title: \"Last Name\", field: \"lname\", defaultSort: \"asc\" },\r\n      { title: \"First Name\", field: \"fname\" },\r\n      { title: \"Student ID\", field: \"uid\" },\r\n      {\r\n        title: \"Email\",\r\n        field: \"email\",\r\n        render: (rowData) => (\r\n          <TextField\r\n            defaultValue={rowData.email}\r\n            error={!this.state[\"importEmailValid\" + rowData.uid]}\r\n            helperText={\r\n              !this.state[\"importEmailValid\" + rowData.uid]\r\n                ? \"Enter a valid email.\"\r\n                : \"\"\r\n            }\r\n            onChange={(e) => {\r\n              this.updateImportEmail(e, rowData.uid);\r\n            }}\r\n          />\r\n        ),\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <Col className=\"stretch-h flex-col\">\r\n        <div className=\"top-bar\">\r\n          <Row>\r\n            <Col>\r\n              <Button\r\n                className=\"float-down\"\r\n                size=\"medium\"\r\n                style={{ backgroundColor: \"#46C88C\", color: \"white\" }}\r\n                onClick={this.handleAddUserClick}\r\n              >\r\n                Create New User\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <h1>User List</h1>\r\n            </Col>\r\n            <Col>\r\n              <div className=\"float-down right-buttons\">\r\n                <Button\r\n                  basic\r\n                  size=\"medium\"\r\n                  onClick={this.handleImportSpreadsheetClick}\r\n                >\r\n                  Import from Excel\r\n                </Button>\r\n                <input\r\n                  type=\"file\"\r\n                  ref=\"fileUploader\"\r\n                  style={{ display: \"none\" }}\r\n                  onChange={this.onChangeFile.bind(this)}\r\n                />\r\n                <Button\r\n                  basic\r\n                  size=\"medium\"\r\n                  onClick={this.handleClearAllCoursesClick}\r\n                >\r\n                  Clear All Courses\r\n                </Button>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Divider clearing />\r\n        </div>\r\n        <div className=\"page-content stretch-h\">\r\n          <Col className=\"stretch-h flex-col\">\r\n            <Table\r\n              data={Array.from(this.props.data.users)}\r\n              columns={this.state.columnSet}\r\n              title={<h2>Users</h2>}\r\n              onRowClick={(event, rowData) =>\r\n                this.handleUserSelectClick(event, rowData)\r\n              }\r\n            />\r\n            <Modal\r\n              centered\r\n              size={\"xl\"}\r\n              show={this.state.showImportExcelModal}\r\n              onHide={this.close}\r\n            >\r\n              <Modal.Header closeButton bsPrefix=\"modal-header\">\r\n                <Modal.Title>Import from Excel file</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <Row>\r\n                  <Col>\r\n                    <Table\r\n                      data={this.state.importedExcelData}\r\n                      columns={importColumns}\r\n                    />\r\n                    <Form>\r\n                      <Form.Field>\r\n                        <label>Courses:</label>\r\n                        <Dropdown\r\n                          placeholder=\"Courses\"\r\n                          name=\"courses\"\r\n                          fluid\r\n                          multiple\r\n                          search\r\n                          selection\r\n                          allowAdditions\r\n                          options={courseOptions}\r\n                          value={selectedUser.courses}\r\n                          onChange={this.handleDropdownChange}\r\n                        />\r\n                      </Form.Field>\r\n                    </Form>\r\n                  </Col>\r\n                </Row>\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button\r\n                  id=\"add-icon-handler\"\r\n                  variant=\"primary\"\r\n                  onClick={this.handleSaveImportStudents}\r\n                >\r\n                  {this.state.isChangesMadeToModal ? (\r\n                    <Icon name=\"save\"></Icon>\r\n                  ) : null}\r\n                  {this.state.isChangesMadeToModal ? \"Save\" : \"Cancel\"}\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n            <Modal centered show={selectedUserId != null} onHide={this.close}>\r\n              <Modal.Header bsPrefix=\"modal-header\">\r\n                <Modal.Title>User</Modal.Title>\r\n                <IconButton onClick={this.close} size=\"small\" color=\"inherit\">\r\n                  <ClearIcon />\r\n                </IconButton>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                {this.state.activeItem === \"user\" &&\r\n                  this.state.selectedUser !== null && (\r\n                    <Form>\r\n                      <Form.Group widths={2}>\r\n                        <Form.Field>\r\n                          <label>\r\n                            First Name:\r\n                            {this.state.firstNameError && (\r\n                              <span className=\"error-text modal-label-error-text\">\r\n                                Error: Field is empty.\r\n                              </span>\r\n                            )}\r\n                          </label>\r\n                          <Form.Input\r\n                            error={this.state.firstNameError}\r\n                            name=\"fname\"\r\n                            placeholder=\"First Name\"\r\n                            defaultValue={selectedUser.fname}\r\n                            onChange={(e) => {\r\n                              this.handleChange(e, \"fname\");\r\n                            }}\r\n                            readOnly={this.state.editable}\r\n                          ></Form.Input>\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                          <label>\r\n                            Last Name:\r\n                            {this.state.lastNameError && (\r\n                              <span className=\"error-text modal-label-error-text\">\r\n                                Error: Field is empty.\r\n                              </span>\r\n                            )}\r\n                          </label>\r\n                          <Form.Input\r\n                            error={this.state.lastNameError}\r\n                            name=\"lname\"\r\n                            placeholder=\"Last Name\"\r\n                            defaultValue={selectedUser.lname}\r\n                            onChange={(e) => {\r\n                              this.handleChange(e, \"lname\");\r\n                            }}\r\n                            readOnly={this.state.editable}\r\n                          ></Form.Input>\r\n                        </Form.Field>\r\n                      </Form.Group>\r\n                      <Form.Field>\r\n                        <label>Courses:</label>\r\n                        <Dropdown\r\n                          placeholder=\"Courses\"\r\n                          name=\"courses\"\r\n                          fluid\r\n                          multiple\r\n                          search\r\n                          selection\r\n                          allowAdditions\r\n                          options={courseOptions}\r\n                          value={selectedUser.courses}\r\n                          onChange={this.handleDropdownChange}\r\n                          disabled={this.state.editable}\r\n                        />\r\n                      </Form.Field>\r\n                      <Form.Field>\r\n                        <label>\r\n                          UML ID:\r\n                          {this.state.idError && (\r\n                            <span className=\"error-text modal-label-error-text\">\r\n                              Error: Field is empty.\r\n                            </span>\r\n                          )}\r\n                        </label>\r\n                        <Form.Input\r\n                          name=\"id\"\r\n                          error={this.state.idError}\r\n                          placeholder=\"UML ID\"\r\n                          defaultValue={selectedUser.uid}\r\n                          onChange={(e) => {\r\n                            this.handleChange(e, \"uid\");\r\n                          }}\r\n                          readOnly={this.state.editable}\r\n                        ></Form.Input>\r\n                      </Form.Field>\r\n                      <Form.Group widths={2}>\r\n                        <Form.Field>\r\n                          <label>\r\n                            Email:\r\n                            {this.state.emailError && (\r\n                              <span className=\"error-text modal-label-error-text\">\r\n                                Error: Field is empty.\r\n                              </span>\r\n                            )}\r\n                          </label>\r\n                          <Form.Input\r\n                            name=\"email\"\r\n                            error={this.state.emailError}\r\n                            placeholder=\"Email\"\r\n                            defaultValue={selectedUser.email}\r\n                            onChange={(e) => {\r\n                              this.handleChange(e, \"email\");\r\n                            }}\r\n                            readOnly={this.state.editable}\r\n                          ></Form.Input>\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                          <label>Phone Number:</label>\r\n                          <Form.Input\r\n                            name=\"phone\"\r\n                            placeholder=\"Phone Number\"\r\n                            defaultValue={selectedUser.phone}\r\n                            onChange={(e) => {\r\n                              this.handleChange(e, \"phone\");\r\n                            }}\r\n                            readOnly={this.state.editable}\r\n                          ></Form.Input>\r\n                        </Form.Field>\r\n                      </Form.Group>\r\n                      <Form.Field>\r\n                        <label>Notes:</label>\r\n                        <Form.Input\r\n                          name=\"notes\"\r\n                          placeholder=\"Notes\"\r\n                          defaultValue={selectedUser.notes}\r\n                          onChange={(e) => {\r\n                            this.handleChange(e, \"notes\");\r\n                          }}\r\n                          readOnly={this.state.editable}\r\n                        ></Form.Input>\r\n                      </Form.Field>\r\n                      {selectedUserId >= 0 ? (\r\n                        <Form.Field>\r\n                          <label>Date Created:</label>\r\n                          <Form.Input\r\n                            name=\"creationDate\"\r\n                            placeholder=\"creationDate\"\r\n                            defaultValue={this.formatUserDate(\r\n                              selectedUser.creationDate\r\n                            )}\r\n                            readOnly\r\n                          ></Form.Input>\r\n                        </Form.Field>\r\n                      ) : null}\r\n                    </Form>\r\n                  )}\r\n                {this.state.activeItem === \"table\" &&\r\n                  this.state.selectedUserId >= 0 && (\r\n                    <Tab\r\n                      panes={formTablePanes}\r\n                      className=\"stretch-h flex-col\"\r\n                    />\r\n                  )}\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                {this.state.selectedUserId >= 0 ? (\r\n                  <Button\r\n                    className=\"btn btn-primary mr-auto\"\r\n                    toggle\r\n                    active={!this.state.editable}\r\n                    onClick={this.handleUserEditClick}\r\n                  >\r\n                    <Icon name=\"pencil\" />\r\n                    Edit\r\n                  </Button>\r\n                ) : null}\r\n                {this.state.selectedUserId >= 0 && (\r\n                  <Menu compact className=\"mr-auto\">\r\n                    <Menu.Item\r\n                      name=\"user\"\r\n                      active={this.state.activeItem === \"user\"}\r\n                      onClick={this.handleItemClick}\r\n                    >\r\n                      <Icon name=\"clipboard list\" />\r\n                      User Form\r\n                    </Menu.Item>\r\n                    <Menu.Item\r\n                      name=\"table\"\r\n                      active={this.state.activeItem === \"table\"}\r\n                      onClick={this.handleItemClick}\r\n                    >\r\n                      <Icon name=\"book\" />\r\n                      Transactions\r\n                    </Menu.Item>\r\n                  </Menu>\r\n                )}\r\n                <Button\r\n                  id=\"add-icon-handler\"\r\n                  variant=\"primary\"\r\n                  onClick={this.handleSubmitClick}\r\n                >\r\n                  {this.state.isChangesMadeToModal ? (\r\n                    <Icon name=\"save\"></Icon>\r\n                  ) : null}\r\n                  {this.state.isChangesMadeToModal ? \"Save\" : \"Close\"}\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n          </Col>\r\n        </div>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Users;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Divider,\r\n  Button,\r\n  Form,\r\n  Dropdown,\r\n  Icon,\r\n  Tab,\r\n  Menu,\r\n} from \"semantic-ui-react\";\r\nimport { Col, Modal, Row } from \"react-bootstrap\";\r\nimport Table from \"../common/Table\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\n\r\nclass Inventory extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    const headerStyleGrey = {\r\n      backgroundColor: \"#E2E2E2\",\r\n      color: \"black\",\r\n      fontSize: \"24\",\r\n    };\r\n    this.state = {\r\n      columnSet: [\r\n        {\r\n          title: \"Item Name\",\r\n          field: \"name\",\r\n          headerStyle: headerStyleGrey,\r\n        },\r\n        {\r\n          title: \"Brand\",\r\n          field: \"brand\",\r\n          headerStyle: headerStyleGrey,\r\n        },\r\n        {\r\n          title: \"Category\",\r\n          field: \"category\",\r\n          headerStyle: headerStyleGrey,\r\n        },\r\n        {\r\n          title: \"Item ID\",\r\n          field: \"iid\",\r\n          defaultSort: \"asc\",\r\n          headerStyle: headerStyleGrey,\r\n        },\r\n        {\r\n          title: \"Serial\",\r\n          field: \"serial\",\r\n          headerStyle: headerStyleGrey,\r\n        },\r\n        {\r\n          title: \"Notes\",\r\n          field: \"notes\",\r\n          headerStyle: headerStyleGrey,\r\n          render: (rowData) => {\r\n            return rowData.notes ? (\r\n              <Icon\r\n                size=\"large\"\r\n                name=\"check circle\"\r\n                className=\"notes-icon\"\r\n              ></Icon>\r\n            ) : null;\r\n          },\r\n        },\r\n        {\r\n          title: \"Courses\",\r\n          field: \"courses\",\r\n          headerStyle: headerStyleGrey,\r\n          render: (rowData) => {\r\n            return rowData.courses.length > 0\r\n              ? rowData.courses.reduce((result, item) => (\r\n                  <>\r\n                    {result}\r\n                    {\", \"}\r\n                    {item}\r\n                  </>\r\n                ))\r\n              : \"\";\r\n          },\r\n        },\r\n        {\r\n          title: \"Expected Return Date\",\r\n          field: \"expected\",\r\n          headerStyle: headerStyleGrey,\r\n          render: (rowData) =>\r\n            rowData.expected ? this.formatDate(rowData.expected) : \"Available\",\r\n          customFilterAndSearch: (term, rowData) =>\r\n            this.formatDateForSearchBar(rowData.expected).indexOf(term) !==\r\n              -1 || this.formatDate(rowData.expected).indexOf(term) !== -1,\r\n        },\r\n      ],\r\n\r\n      activeItem: \"item\",\r\n      open: false,\r\n\r\n      nameError: false,\r\n      categoryError: false,\r\n      iidError: false,\r\n      serialError: false,\r\n      editable: true,\r\n      isChangesMadeToModal: false,\r\n      isItemIdUnavailable: false,\r\n\r\n      selectedItemId: null,\r\n      selectedItem: {\r\n        name: \"\",\r\n        iid: \"\",\r\n        serial: \"\",\r\n        category: \"\",\r\n        notes: \"\",\r\n        atid: \"\",\r\n        courses: [],\r\n        expected: \"\",\r\n        creationDate: \"\",\r\n        transactions: [],\r\n      },\r\n    };\r\n  }\r\n\r\n  close = () =>\r\n    this.setState({\r\n      selectedItemId: null,\r\n      nameError: false,\r\n      categoryError: false,\r\n      serialError: false,\r\n      editable: true,\r\n      submitName: \"Close\",\r\n      submitIcon: null,\r\n      isChangesMadeToModal: false,\r\n      isItemIdUnavailable: false,\r\n    });\r\n\r\n  handleChange = (e, userProp) => {\r\n    let val = e.target.value;\r\n    if (userProp === \"iid\") {\r\n      val = this.handleItemIdVerify(val);\r\n    }\r\n    this.setState((prevState) => {\r\n      let selectedItem = Object.assign({}, prevState.selectedItem);\r\n      selectedItem[userProp] = val;\r\n      return { selectedItem, isChangesMadeToModal: true };\r\n    });\r\n  };\r\n\r\n  handleItemSelectClick = (e, rowData) => {\r\n    let selectedItemId = rowData.tableData.id;\r\n    let selectedItem = Object.assign(\r\n      {},\r\n      this.props.data.items.find((item) => item.iid === rowData.iid)\r\n    );\r\n    let transactions = Array.from(\r\n      this.props.data.transactions.filter(\r\n        (transaction) => transaction.iid === selectedItem.iid\r\n      )\r\n    );\r\n    transactions.forEach((transaction) => {\r\n      transaction.backgroundColor =\r\n        !transaction.checkedInDate &&\r\n        new Date(transaction.dueDate).getTime() < new Date().getTime()\r\n          ? \"mistyrose\"\r\n          : \"\";\r\n    });\r\n    selectedItem[\"transactions\"] = transactions;\r\n    this.setState({\r\n      selectedItemId,\r\n      selectedItem,\r\n    });\r\n  };\r\n\r\n  handleItemAddClick = () => {\r\n    this.setState({\r\n      selectedItemId: -1,\r\n      selectedItem: {\r\n        name: \"\",\r\n        iid: this.generateInitialNextItemId(),\r\n        serial: \"\",\r\n        category: \"\",\r\n        notes: \"\",\r\n        atid: \"\",\r\n        courses: [],\r\n        creationDate: new Date().getTime(),\r\n        expected: \"\",\r\n        transactions: [],\r\n      },\r\n      editable: false,\r\n      isChangesMadeToModal: false,\r\n    });\r\n  };\r\n\r\n  handleItemEditClick = () => {\r\n    !this.state.isChangesMadeToModal &&\r\n      this.setState({\r\n        editable: !this.state.editable,\r\n      });\r\n  };\r\n\r\n  checkErrorUpdateDataSet = () => {\r\n    if (\r\n      !this.state.nameError &&\r\n      !this.state.categoryError &&\r\n      !this.state.serialError &&\r\n      !this.state.isItemIdUnavailable &&\r\n      !this.state.iidError\r\n    ) {\r\n      let data = Object.assign({}, this.props.data);\r\n      if (this.state.selectedItemId >= 0) {\r\n        data.items[this.state.selectedItemId] = this.state.selectedItem;\r\n      } else {\r\n        data.items.push(this.state.selectedItem);\r\n      }\r\n      this.props.onUpdateData(data);\r\n      this.close();\r\n    }\r\n  };\r\n\r\n  handleSubmitClick = () => {\r\n    if (this.state.isChangesMadeToModal) {\r\n      this.setState(\r\n        {\r\n          nameError: this.state.selectedItem.name === \"\",\r\n          categoryError: this.state.selectedItem.category === \"\",\r\n          iidError: this.state.selectedItem.iid === \"\",\r\n          serialError: this.state.selectedItem.serial === \"\",\r\n        },\r\n        this.checkErrorUpdateDataSet\r\n      );\r\n    } else {\r\n      this.close();\r\n    }\r\n  };\r\n\r\n  formatDate = (dateString) => {\r\n    if (!dateString) return \"\";\r\n    const date = new Date(dateString);\r\n    return (\r\n      date.getMonth() + 1 + \"/\" + date.getDate() + \"/\" + date.getFullYear()\r\n    );\r\n  };\r\n\r\n  formatDateForSearchBar = (dateString) => {\r\n    let monthNames = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n    if (!dateString) return \"\";\r\n    const date = new Date(dateString);\r\n    return (\r\n      monthNames[date.getMonth()] +\r\n      \" \" +\r\n      date.getDate() +\r\n      \" \" +\r\n      date.getFullYear()\r\n    );\r\n  };\r\n\r\n  formatItemDate = (dateString) => {\r\n    if (!dateString) return \"\";\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString(\r\n      [],\r\n      (\"en-US\",\r\n      {\r\n        month: \"short\",\r\n        day: \"numeric\",\r\n        year: \"numeric\",\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\",\r\n        hour12: true,\r\n      })\r\n    );\r\n  };\r\n\r\n  handleCourseDropdownChange = (e, { value }) => {\r\n    const val = value;\r\n    this.setState((prevState) => {\r\n      let selectedItem = Object.assign({}, prevState.selectedItem);\r\n      selectedItem.courses = val;\r\n      return { selectedItem, isChangesMadeToModal: true };\r\n    });\r\n  };\r\n\r\n  handleBrandDropdownChange = (e, { value }) => {\r\n    const val = value;\r\n    this.setState((prevState) => {\r\n      let selectedItem = Object.assign({}, prevState.selectedItem);\r\n      selectedItem.brand = val;\r\n      return { selectedItem, isChangesMadeToModal: true };\r\n    });\r\n  };\r\n\r\n  handleCategoryDropdownChange = (e, { value }) => {\r\n    const val = value;\r\n    this.setState((prevState) => {\r\n      let selectedItem = Object.assign({}, prevState.selectedItem);\r\n      selectedItem.category = val;\r\n      return { selectedItem, isChangesMadeToModal: true };\r\n    });\r\n  };\r\n\r\n  handleItemIdVerify = (iid) => {\r\n    if (iid === \"\") return \"\";\r\n    if (isNaN(iid)) {\r\n      this.setState({ isItemIdUnavailable: true });\r\n      return iid;\r\n    }\r\n    let fullID = \"0\".repeat(4 - iid.length) + iid;\r\n    this.setState({\r\n      isItemIdUnavailable: this.props.data.items.some(\r\n        (item, i) => item.iid === fullID && this.state.selectedItemId !== i\r\n      ),\r\n    });\r\n    return fullID;\r\n  };\r\n\r\n  generateInitialNextItemId = () => {\r\n    if (this.props.data.items.length === 0) return \"0001\";\r\n    const ids = this.props.data.items\r\n      .map((item) => parseInt(item.iid))\r\n      .sort((a, b) => a - b);\r\n    const newId = (ids.find((id) => !ids.includes(id + 1)) + 1).toString();\r\n    return \"0\".repeat(4 - newId.length) + newId;\r\n  };\r\n\r\n  //Function to clear lifted state items of tableData\r\n  //\r\n  //returns: lifted state item data without tableData\r\n  getList = (items) => {\r\n    var returnData = [];\r\n    items.forEach((element) => {\r\n      var elCopy = Object.assign({}, element);\r\n      delete elCopy[\"tableData\"];\r\n      returnData.push(elCopy);\r\n    });\r\n    return returnData;\r\n  };\r\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name });\r\n\r\n  render() {\r\n    const selectedItemId = this.state.selectedItemId;\r\n    const selectedItem = this.state.selectedItem;\r\n    let formTablePanes = [];\r\n\r\n    let items = Array.from(this.props.data.items);\r\n    items.forEach((items) => {\r\n      let result = this.props.data.transactions.filter(\r\n        (transaction) => items.atid === transaction.tid\r\n      );\r\n      items.expected = !(items.atid === \"\") ? result[0].dueDate : \"\";\r\n      items.backgroundColor = !(items.atid === \"\") ? \"mistyrose\" : \"\";\r\n    });\r\n\r\n    if (this.state.selectedItem != null && this.state.selectedItemId >= 0) {\r\n      formTablePanes = [\r\n        {\r\n          menuItem: \"Active\",\r\n          render: () => (\r\n            <Table\r\n              title={<h5>{this.state.selectedItem.name}</h5>}\r\n              columns={[\r\n                { title: \"User ID\", field: \"uid\" },\r\n                { title: \"Transaction ID\", field: \"tid\" },\r\n                {\r\n                  title: \"Checked Out Date\",\r\n                  field: \"checkedOutDate\",\r\n                  render: (rowData) => this.formatDate(rowData.checkedOutDate),\r\n                },\r\n                {\r\n                  title: \"Due Date\",\r\n                  field: \"dueDate\",\r\n                  render: (rowData) => this.formatDate(rowData.dueDate),\r\n                },\r\n              ]}\r\n              data={Array.from(\r\n                this.state.selectedItem.transactions.filter(\r\n                  (name) => name.checkedInDate === \"\"\r\n                )\r\n              )}\r\n            ></Table>\r\n          ),\r\n        },\r\n        {\r\n          menuItem: \"Completed\",\r\n          render: () => (\r\n            <Table\r\n              title={<h5>{this.state.selectedItem.name}</h5>}\r\n              columns={[\r\n                { title: \"User ID\", field: \"uid\" },\r\n                { title: \"Transaction ID\", field: \"tid\" },\r\n                {\r\n                  title: \"Checked Out Date\",\r\n                  field: \"checkedOutDate\",\r\n                  render: (rowData) => this.formatDate(rowData.checkedOutDate),\r\n                },\r\n                {\r\n                  title: \"Checked In Date\",\r\n                  field: \"checkedInDate\",\r\n                  render: (rowData) => this.formatDate(rowData.checkedInDate),\r\n                },\r\n              ]}\r\n              data={Array.from(\r\n                this.state.selectedItem.transactions.filter(\r\n                  (name) => !(name.checkedInDate === \"\")\r\n                )\r\n              )}\r\n            ></Table>\r\n          ),\r\n        },\r\n      ];\r\n    }\r\n    const inventoryTablePanes = [\r\n      {\r\n        menuItem: \"All\",\r\n        render: () => (\r\n          <Table\r\n            data={this.getList(this.props.data.items)}\r\n            columns={this.state.columnSet}\r\n            title={<h2>All</h2>}\r\n            onRowClick={(event, rowData) =>\r\n              this.handleItemSelectClick(event, rowData)\r\n            }\r\n          />\r\n        ),\r\n      },\r\n      {\r\n        menuItem: \"Available\",\r\n        render: () => (\r\n          <Table\r\n            data={this.getList(\r\n              this.props.data.items.filter(\r\n                (name) => name.backgroundColor !== \"mistyrose\"\r\n              )\r\n            )}\r\n            columns={this.state.columnSet}\r\n            title={<h2>Available</h2>}\r\n            onRowClick={(event, rowData) =>\r\n              this.handleItemSelectClick(event, rowData)\r\n            }\r\n          />\r\n        ),\r\n      },\r\n      {\r\n        menuItem: \"Unavailable\",\r\n        render: () => (\r\n          <Table\r\n            data={this.getList(\r\n              this.props.data.items.filter(\r\n                (name) => name.backgroundColor === \"mistyrose\"\r\n              )\r\n            )}\r\n            columns={this.state.columnSet}\r\n            title={<h2>Unavailable</h2>}\r\n            onRowClick={(event, rowData) =>\r\n              this.handleItemSelectClick(event, rowData)\r\n            }\r\n          />\r\n        ),\r\n      },\r\n    ];\r\n\r\n    const tempItems = this.props.data.items;\r\n    const categories = [\r\n      ...new Set(tempItems.map((item) => item.category)),\r\n    ].sort();\r\n\r\n    categories.forEach((category) => {\r\n      inventoryTablePanes.push({\r\n        menuItem: category,\r\n        render: () => (\r\n          <Table\r\n            data={tempItems.filter((item) => item.category === category)}\r\n            itemType={\"item\"}\r\n            columns={this.state.columnSet}\r\n            title={<h3>{category}</h3>}\r\n            onRowClick={(event, rowData) =>\r\n              this.handleItemSelectClick(event, rowData)\r\n            }\r\n          />\r\n        ),\r\n      });\r\n    });\r\n\r\n    const courseOptions = Array.from(\r\n      new Set(\r\n        [].concat.apply(\r\n          [],\r\n          [\r\n            this.state.selectedItem,\r\n            ...this.props.data.items,\r\n            ...this.props.data.users,\r\n          ]\r\n            .filter((item) => item.courses)\r\n            .map((item) => item.courses)\r\n        )\r\n      )\r\n    )\r\n      .sort()\r\n      .map((item) => ({ text: item, value: item }));\r\n    const brandOptions = Array.from(\r\n      new Set(\r\n        [this.state.selectedItem, ...this.props.data.items]\r\n          .filter((item) => item.brand)\r\n          .map((item) => item.brand)\r\n      )\r\n    )\r\n      .sort()\r\n      .map((item) => ({ text: item, value: item }));\r\n    const categoryOptions = Array.from(\r\n      new Set(\r\n        [this.state.selectedItem, ...this.props.data.items]\r\n          .filter((item) => item.category)\r\n          .map((item) => item.category)\r\n      )\r\n    )\r\n      .sort()\r\n      .map((item) => ({ text: item, value: item }));\r\n\r\n    return (\r\n      <Col className=\"stretch-h flex-col\">\r\n        <div className=\"top-bar\">\r\n          <Row>\r\n            <Col>\r\n              <Button\r\n                className=\"float-down\"\r\n                style={{ backgroundColor: \"#46C88C\", color: \"white\" }}\r\n                onClick={this.handleItemAddClick}\r\n              >\r\n                Create New Item\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <h1>Inventory</h1>\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Divider clearing />\r\n        </div>\r\n        <div className=\"page-content stretch-h\">\r\n          <Col className=\"stretch-h flex-shrink flex-col\">\r\n            <Tab panes={inventoryTablePanes} className=\"stretch-h flex-col\" />\r\n            <Modal centered show={selectedItemId != null} onHide={this.close}>\r\n              <Modal.Header bsPrefix=\"modal-header\">\r\n                <Modal.Title>Item</Modal.Title>\r\n                <IconButton onClick={this.close} size=\"small\" color=\"inherit\">\r\n                  <ClearIcon />\r\n                </IconButton>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                {this.state.activeItem === \"item\" && (\r\n                  <Form>\r\n                    <Form.Field>\r\n                      <label>\r\n                        Name:\r\n                        {this.state.nameError && (\r\n                          <span className=\"error-text modal-label-error-text\">\r\n                            Error: Field is empty.\r\n                          </span>\r\n                        )}\r\n                      </label>\r\n                      <Form.Input\r\n                        error={this.state.nameError}\r\n                        name=\"name\"\r\n                        placeholder=\"Name\"\r\n                        defaultValue={selectedItem.name}\r\n                        onChange={(e) => {\r\n                          this.handleChange(e, \"name\");\r\n                        }}\r\n                        readOnly={this.state.editable}\r\n                      ></Form.Input>\r\n                    </Form.Field>\r\n                    <Form.Group widths=\"equal\">\r\n                      <Form.Field>\r\n                        <label>\r\n                          Item ID:\r\n                          {(this.state.iidError && (\r\n                            <span className=\"error-text modal-label-error-text\">\r\n                              Error: Field is empty.\r\n                            </span>\r\n                          )) ||\r\n                            (this.state.isItemIdUnavailable && (\r\n                              <span className=\"error-text modal-label-error-text\">\r\n                                Error: Item ID is Taken\r\n                              </span>\r\n                            ))}\r\n                          {}\r\n                        </label>\r\n                        <Form.Input\r\n                          name=\"iid\"\r\n                          error={\r\n                            this.state.iidError ||\r\n                            this.state.isItemIdUnavailable\r\n                          }\r\n                          maxLength=\"4\"\r\n                          placeholder=\"Item ID\"\r\n                          defaultValue={selectedItem.iid}\r\n                          onChange={(e) => {\r\n                            this.handleChange(e, \"iid\");\r\n                          }}\r\n                          readOnly={this.state.editable}\r\n                        ></Form.Input>\r\n                      </Form.Field>\r\n                      <Form.Field>\r\n                        <label>\r\n                          Serial ID:\r\n                          {this.state.serialError && (\r\n                            <span className=\"error-text modal-label-error-text\">\r\n                              Error: Field is empty.\r\n                            </span>\r\n                          )}\r\n                        </label>\r\n                        <Form.Input\r\n                          name=\"serial\"\r\n                          error={this.state.serialError}\r\n                          placeholder=\"Serial\"\r\n                          defaultValue={selectedItem.serial}\r\n                          onChange={(e) => {\r\n                            this.handleChange(e, \"serial\");\r\n                          }}\r\n                          readOnly={this.state.editable}\r\n                        ></Form.Input>\r\n                      </Form.Field>\r\n                    </Form.Group>\r\n                    <Form.Group widths=\"equal\">\r\n                      <Form.Field>\r\n                        <label>Brand:</label>\r\n                        <Dropdown\r\n                          placeholder=\"Brand\"\r\n                          name=\"brand\"\r\n                          fluid\r\n                          search\r\n                          selection\r\n                          allowAdditions\r\n                          clearable\r\n                          options={brandOptions}\r\n                          value={selectedItem.brand}\r\n                          onChange={this.handleBrandDropdownChange}\r\n                          disabled={this.state.editable}\r\n                        />\r\n                      </Form.Field>\r\n                      <Form.Field>\r\n                        <label>\r\n                          Category:\r\n                          {this.state.categoryError && (\r\n                            <span className=\"error-text modal-label-error-text\">\r\n                              Error: Field cannot be empty.\r\n                            </span>\r\n                          )}\r\n                        </label>\r\n                        <Dropdown\r\n                          placeholder=\"Category\"\r\n                          name=\"category\"\r\n                          fluid\r\n                          error={this.state.categoryError}\r\n                          search\r\n                          selection\r\n                          allowAdditions\r\n                          options={categoryOptions}\r\n                          value={selectedItem.category}\r\n                          onChange={this.handleCategoryDropdownChange}\r\n                          disabled={this.state.editable}\r\n                        />\r\n                      </Form.Field>\r\n                    </Form.Group>\r\n                    <Form.Field>\r\n                      <label>Courses:</label>\r\n                      <Dropdown\r\n                        placeholder=\"Courses\"\r\n                        name=\"courses\"\r\n                        fluid\r\n                        multiple\r\n                        search\r\n                        selection\r\n                        allowAdditions\r\n                        options={courseOptions}\r\n                        value={selectedItem.courses}\r\n                        onChange={this.handleCourseDropdownChange}\r\n                        disabled={this.state.editable}\r\n                      />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                      <label>Notes:</label>\r\n                      <Form.Input\r\n                        name=\"notes\"\r\n                        error={this.state.notesError}\r\n                        placeholder=\"Notes\"\r\n                        defaultValue={selectedItem.notes}\r\n                        onChange={(e) => {\r\n                          this.handleChange(e, \"notes\");\r\n                        }}\r\n                        readOnly={this.state.editable}\r\n                      ></Form.Input>\r\n                    </Form.Field>\r\n                    <Form.Group widths=\"equal\">\r\n                      {this.state.selectedItemId >= 0 ? (\r\n                        <Form.Field>\r\n                          <label>Date Created:</label>\r\n                          <Form.Input\r\n                            name=\"creationDate\"\r\n                            placeholder=\"creationDate\"\r\n                            defaultValue={this.formatItemDate(\r\n                              selectedItem.creationDate\r\n                            )}\r\n                            readOnly\r\n                          ></Form.Input>\r\n                        </Form.Field>\r\n                      ) : null}\r\n                      {this.state.selectedItem.expected && (\r\n                        <Form.Field>\r\n                          <label>Expected Return Date:</label>\r\n                          <Form.Input\r\n                            name=\"expected\"\r\n                            placeholder=\"Expected\"\r\n                            defaultValue={this.formatDate(\r\n                              selectedItem.expected\r\n                            )}\r\n                            readOnly\r\n                          ></Form.Input>\r\n                        </Form.Field>\r\n                      )}\r\n                    </Form.Group>\r\n                  </Form>\r\n                )}\r\n                {this.state.activeItem === \"table\" &&\r\n                  this.state.selectedItemId >= 0 && (\r\n                    <Tab\r\n                      panes={formTablePanes}\r\n                      className=\"stretch-h flex-col\"\r\n                    />\r\n                  )}\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                {this.state.selectedItemId >= 0 ? (\r\n                  <Button\r\n                    className=\"btn btn-primary mr-auto\"\r\n                    toggle\r\n                    active={!this.state.editable}\r\n                    onClick={this.handleItemEditClick}\r\n                  >\r\n                    <Icon name=\"pencil\" />\r\n                    Edit\r\n                  </Button>\r\n                ) : null}\r\n                {this.state.selectedItemId >= 0 && (\r\n                  <Menu compact className=\"mr-auto\">\r\n                    <Menu.Item\r\n                      name=\"item\"\r\n                      active={this.state.activeItem === \"item\"}\r\n                      onClick={this.handleItemClick}\r\n                    >\r\n                      <Icon name=\"clipboard list\" />\r\n                      Item Form\r\n                    </Menu.Item>\r\n                    <Menu.Item\r\n                      name=\"table\"\r\n                      active={this.state.activeItem === \"table\"}\r\n                      onClick={this.handleItemClick}\r\n                    >\r\n                      <Icon name=\"book\" />\r\n                      Transactions\r\n                    </Menu.Item>\r\n                  </Menu>\r\n                )}\r\n                <Button\r\n                  id=\"add-icon-handler ml-auto\"\r\n                  variant=\"primary\"\r\n                  onClick={this.handleSubmitClick}\r\n                >\r\n                  {this.state.isChangesMadeToModal ? (\r\n                    <Icon name=\"save\"></Icon>\r\n                  ) : null}\r\n                  {this.state.isChangesMadeToModal ? \"Save\" : \"Close\"}\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n          </Col>\r\n        </div>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Inventory;\r\n","import React, { Component } from \"react\";\nimport { Divider, Button, Form, Dropdown } from \"semantic-ui-react\";\nimport { Col, Row, Modal } from \"react-bootstrap\";\nimport Table from \"../common/Table\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\n\nclass Staff extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      dataSet: [\n        {\n          fname: \"Seamus\",\n          lname: \"Rioux\",\n          courses: [\"Photography I\", \"Photography II\"],\n          roles: [\"Admin\", \"Staff\"],\n          id: \"54321\",\n          email: \"seamus.rioux3@gmail.com\",\n          phone: \"123-456-7890\",\n        },\n        {\n          fname: \"Greg\",\n          lname: \"Smelkov\",\n          courses: [\"Photography I\"],\n          roles: [\"Admin\"],\n          id: \"12345\",\n          email: \"greg@gmail.com\",\n          phone: \"123-456-7890\",\n        },\n      ],\n      columnSet: [\n        { title: \"First Name\", field: \"fname\" },\n        { title: \"Last Name\", field: \"lname\" },\n        {\n          title: \"Courses\",\n          field: \"courses\",\n          render: (rowData) => {\n            return rowData.courses.length > 0\n              ? rowData.courses.reduce((result, item) => (\n                  <>\n                    {result}\n                    {\", \"}\n                    {item}\n                  </>\n                ))\n              : \"\";\n          },\n        },\n        {\n          title: \"Roles\",\n          field: \"roles\",\n          render: (rowData) => {\n            return rowData.roles.length > 0\n              ? rowData.roles.reduce((result, item) => (\n                  <>\n                    {result}\n                    {\", \"}\n                    {item}\n                  </>\n                ))\n              : \"\";\n          },\n        },\n      ],\n      open: false,\n\n      firstNameError: false,\n      lastNameError: false,\n      idError: false,\n      emailError: false,\n\n      selectedUserId: null,\n      selectedUser: {\n        fname: \"\",\n        lname: \"\",\n        courses: [],\n        roles: [],\n        id: \"\",\n        email: \"\",\n        phone: \"\",\n      },\n      courseOptions: [\n        { text: \"Photography I\", value: \"Photography I\" },\n        { text: \"Photography II\", value: \"Photography II\" },\n        { text: \"Documentary Image\", value: \"Documentary Image\" },\n      ],\n      roleOptions: [\n        { text: \"Admin\", value: \"Admin\" },\n        { text: \"Staff\", value: \"Staff\" },\n      ],\n    };\n  }\n\n  close = () =>\n    this.setState({\n      selectedUserId: null,\n      firstNameError: false,\n      lastNameError: false,\n      idError: false,\n      emailError: false,\n    });\n\n  handleChange = (e, userProp) => {\n    const val = e.target.value;\n    this.setState((prevState) => {\n      let selectedUser = Object.assign({}, prevState.selectedUser);\n      selectedUser[userProp] = val;\n      return { selectedUser };\n    });\n  };\n\n  handleUserSelectClick = (e, rowData) => {\n    this.setState({\n      selectedUserId: rowData.tableData.id,\n      selectedUser: this.state.dataSet[rowData.tableData.id],\n    });\n  };\n\n  handleAddUserClick = () => {\n    this.setState({\n      selectedUserId: -1,\n      selectedUser: {\n        fname: \"\",\n        lname: \"\",\n        courses: [],\n        roles: [],\n        id: \"\",\n        email: \"\",\n        phone: \"\",\n      },\n    });\n  };\n\n  checkErrorUpdateDataSet = () => {\n    if (\n      !this.state.firstNameError &&\n      !this.state.lastNameError &&\n      !this.state.idError &&\n      !this.state.emailError\n    ) {\n      this.setState((prevState) => {\n        let dataSet = Array.from(prevState.dataSet);\n        if (this.state.selectedUserId >= 0) {\n          dataSet[this.state.selectedUserId] = this.state.selectedUser;\n        } else {\n          dataSet.push(this.state.selectedUser);\n        }\n        return { dataSet };\n      }, this.close);\n    }\n  };\n\n  handleSubmitClick = () => {\n    this.setState(\n      {\n        firstNameError: this.state.selectedUser.fname === \"\",\n        lastNameError: this.state.selectedUser.lname === \"\",\n        idError: this.state.selectedUser.id === \"\",\n        emailError: this.state.selectedUser.email === \"\",\n      },\n      this.checkErrorUpdateDataSet\n    );\n  };\n\n  handleDropdownAdditionRoles = (e, { value }) => {\n    this.setState((prevState) => ({\n      roleOptions: [{ text: value, value }, ...prevState.roleOptions],\n    }));\n  };\n\n  handleDropdownAdditionCourses = (e, { value }) => {\n    this.setState((prevState) => ({\n      courseOptions: [{ text: value, value }, ...prevState.courseOptions],\n    }));\n  };\n\n  handleDropdownChangeCourses = (e, { value }) => {\n    const val = value;\n    this.setState((prevState) => {\n      let selectedUser = Object.assign({}, prevState.selectedUser);\n      selectedUser.courses = val;\n      return { selectedUser };\n    });\n  };\n\n  handleDropdownChangeRoles = (e, { value }) => {\n    const val = value;\n    this.setState((prevState) => {\n      let selectedUser = Object.assign({}, prevState.selectedUser);\n      selectedUser.roles = val;\n      return { selectedUser };\n    });\n  };\n\n  render() {\n    const selectedUserId = this.state.selectedUserId;\n    const selectedUser = this.state.selectedUser;\n    const courseOptions = this.state.courseOptions;\n    const roleOptions = this.state.roleOptions;\n    return (\n      <Col className=\"stretch-h flex-col\">\n        <div className=\"top-bar\">\n          <Button basic onClick={this.handleAddUserClick}>\n            Create New Staff\n          </Button>\n          <Divider clearing />\n        </div>\n        <div className=\"page-content stretch-h\">\n          <Col className=\"stretch-h flex-col\">\n            <Table\n              data={Array.from(this.state.dataSet)}\n              columns={this.state.columnSet}\n              title={<h2>Staff</h2>}\n              onRowClick={(event, rowData) =>\n                this.handleUserSelectClick(event, rowData)\n              }\n            />\n            <Modal\n              centered\n              size={\"lg\"}\n              show={selectedUserId != null}\n              onHide={this.close}\n            >\n              <Modal.Header bsPrefix=\"modal-header\">\n                <Modal.Title>Staff</Modal.Title>\n                <IconButton onClick={this.close} size=\"small\" color=\"inherit\">\n                  <ClearIcon />\n                </IconButton>\n              </Modal.Header>\n              <Modal.Body>\n                <Row>\n                  <Col>\n                    <Form>\n                      <Form.Field>\n                        <label>\n                          First Name:\n                          {this.state.firstNameError && (\n                            <span className=\"error-text modal-label-error-text\">\n                              Error: Field cannot be empty.\n                            </span>\n                          )}\n                        </label>\n                        <Form.Input\n                          error={this.state.firstNameError}\n                          name=\"fname\"\n                          placeholder=\"First Name\"\n                          defaultValue={selectedUser.fname}\n                          onChange={(e) => {\n                            this.handleChange(e, \"fname\");\n                          }}\n                        ></Form.Input>\n                      </Form.Field>\n                      <Form.Field>\n                        <label>\n                          Last Name:\n                          {this.state.lastNameError && (\n                            <span className=\"error-text modal-label-error-text\">\n                              Error: Field cannot be empty.\n                            </span>\n                          )}\n                        </label>\n                        <Form.Input\n                          error={this.state.lastNameError}\n                          name=\"lname\"\n                          placeholder=\"Last Name\"\n                          defaultValue={selectedUser.lname}\n                          onChange={(e) => {\n                            this.handleChange(e, \"lname\");\n                          }}\n                        ></Form.Input>\n                      </Form.Field>\n                      <Form.Field>\n                        <label>Courses:</label>\n                        <Dropdown\n                          placeholder=\"Courses\"\n                          name=\"courses\"\n                          fluid\n                          multiple\n                          search\n                          selection\n                          allowAdditions\n                          options={courseOptions}\n                          value={selectedUser.courses}\n                          onAddItem={this.handleDropdownAdditionCourses}\n                          onChange={this.handleDropdownChangeCourses}\n                        />\n                      </Form.Field>\n                      <Form.Field>\n                        <label>Roles:</label>\n                        <Dropdown\n                          placeholder=\"Roles\"\n                          name=\"roles\"\n                          fluid\n                          multiple\n                          search\n                          selection\n                          allowAdditions\n                          options={roleOptions}\n                          value={selectedUser.roles}\n                          onAddItem={this.handleDropdownAdditionRoles}\n                          onChange={this.handleDropdownChangeRoles}\n                        />\n                      </Form.Field>\n                      <Form.Field>\n                        <label>\n                          UML ID:\n                          {this.state.idError && (\n                            <span className=\"error-text modal-label-error-text\">\n                              Error: Field cannot be empty.\n                            </span>\n                          )}\n                        </label>\n                        <Form.Input\n                          name=\"id\"\n                          error={this.state.idError}\n                          placeholder=\"UML ID\"\n                          defaultValue={selectedUser.id}\n                          onChange={(e) => {\n                            this.handleChange(e, \"id\");\n                          }}\n                        ></Form.Input>\n                      </Form.Field>\n                      <Form.Field>\n                        <label>\n                          Email:\n                          {this.state.emailError && (\n                            <span className=\"error-text modal-label-error-text\">\n                              Error: Field cannot be empty.\n                            </span>\n                          )}\n                        </label>\n                        <Form.Input\n                          name=\"email\"\n                          error={this.state.emailError}\n                          placeholder=\"Email\"\n                          defaultValue={selectedUser.email}\n                          onChange={(e) => {\n                            this.handleChange(e, \"email\");\n                          }}\n                        ></Form.Input>\n                      </Form.Field>\n                      <Form.Field>\n                        <label>Phone Number:</label>\n                        <Form.Input\n                          type=\"phone\"\n                          placeholder=\"Phone Number\"\n                          defaultValue={selectedUser.phone}\n                          onChange={(e) => {\n                            this.handleChange(e, \"phone\");\n                          }}\n                        ></Form.Input>\n                      </Form.Field>\n                    </Form>\n                  </Col>\n                </Row>\n              </Modal.Body>\n              <Modal.Footer>\n                <Button\n                  id=\"add-icon-handler\"\n                  variant=\"primary\"\n                  onClick={this.handleSubmitClick}\n                >\n                  Submit\n                </Button>\n              </Modal.Footer>\n            </Modal>\n          </Col>\n        </div>\n      </Col>\n    );\n  }\n}\n\nexport default Staff;\n","import React, { Component } from \"react\";\r\nimport { Form, Divider, Button, Icon } from \"semantic-ui-react\";\r\nimport { Col, Row, Modal } from \"react-bootstrap\";\r\nimport Table from \"../common/Table\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\n\r\nclass Transactions extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    const headerStyleGrey = {\r\n      backgroundColor: \"#E2E2E2\",\r\n      color: \"black\",\r\n      fontSize: \"24\",\r\n    };\r\n    this.state = {\r\n      columnSet: [\r\n        { title: \"First Name\", field: \"fname\", headerStyle: headerStyleGrey },\r\n        { title: \"Last Name\", field: \"lname\", headerStyle: headerStyleGrey },\r\n        { title: \"Item Name\", field: \"name\", headerStyle: headerStyleGrey },\r\n        { title: \"Item ID\", field: \"iid\", headerStyle: headerStyleGrey },\r\n        { title: \"Category\", field: \"category\", headerStyle: headerStyleGrey },\r\n        {\r\n          title: \"Notes\",\r\n          field: \"notes\",\r\n          headerStyle: headerStyleGrey,\r\n          render: (rowData) => {\r\n            return (\r\n              rowData.notes && (\r\n                <Icon size=\"large\" className=\"notes-icon\" name=\"check circle\" />\r\n              )\r\n            );\r\n          },\r\n        },\r\n        {\r\n          title: \"Checked Out\",\r\n          field: \"checkedOutDate\",\r\n          defaultSort: \"desc\",\r\n          headerStyle: headerStyleGrey,\r\n          render: (rowData) => this.formatDate(rowData.checkedOutDate),\r\n          customFilterAndSearch: (term, rowData) =>\r\n            this.formatDateForSearchBar(rowData.checkedOutDate).indexOf(\r\n              term\r\n            ) !== -1 ||\r\n            this.formatDate(rowData.checkedOutDate).indexOf(term) !== -1,\r\n        },\r\n        {\r\n          title: \"Due Date\",\r\n          field: \"dueDate\",\r\n          headerStyle: headerStyleGrey,\r\n          render: (rowData) => this.formatDate(rowData.dueDate),\r\n          customFilterAndSearch: (term, rowData) =>\r\n            this.formatDateForSearchBar(rowData.dueDate).indexOf(term) !== -1 ||\r\n            this.formatDate(rowData.dueDate).indexOf(term) !== -1,\r\n        },\r\n        {\r\n          title: \"Checked In\",\r\n          field: \"checkedInDate\",\r\n          headerStyle: headerStyleGrey,\r\n          render: (rowData) => this.formatDate(rowData.checkedInDate),\r\n          customFilterAndSearch: (term, rowData) =>\r\n            this.formatDateForSearchBar(rowData.checkedInDate).indexOf(term) !==\r\n              -1 || this.formatDate(rowData.checkedInDate).indexOf(term) !== -1,\r\n        },\r\n      ],\r\n      selectedItemId: null,\r\n      selectedItem: {\r\n        fname: \"\",\r\n        lname: \"\",\r\n        name: \"\",\r\n        iid: \"\",\r\n        category: \"\",\r\n        notes: \"\",\r\n        checkedOutDate: \"\",\r\n        checkedInDate: \"\",\r\n        dueDate: \"\",\r\n      },\r\n    };\r\n  }\r\n\r\n  close = () =>\r\n    this.setState({\r\n      selectedItemId: null,\r\n    });\r\n\r\n  handleChange = (e, userProp) => {\r\n    const val = e.target.value;\r\n    this.setState((prevState) => {\r\n      let selectedItem = Object.assign({}, prevState.selectedItem);\r\n      selectedItem[userProp] = val;\r\n      return { selectedItem };\r\n    });\r\n  };\r\n\r\n  handleUserSelectClick = (e, rowData) => {\r\n    this.setState({\r\n      selectedItemId: rowData.tid,\r\n      selectedItem: rowData,\r\n    });\r\n  };\r\n\r\n  handleDropdownAddition = (e, { value }) => {\r\n    this.setState((prevState) => ({\r\n      courseOptions: [{ text: value, value }, ...prevState.courseOptions],\r\n    }));\r\n  };\r\n\r\n  handleDropdownChange = (e, { value }) => {\r\n    const val = value;\r\n    this.setState((prevState) => {\r\n      let selectedItem = Object.assign({}, prevState.selectedItem);\r\n      selectedItem.courses = val;\r\n      return { selectedItem };\r\n    });\r\n  };\r\n\r\n  formatDate = (dateString) => {\r\n    if (!dateString) return \"\";\r\n    const date = new Date(dateString);\r\n    return (\r\n      date.getMonth() + 1 + \"/\" + date.getDate() + \"/\" + date.getFullYear()\r\n    );\r\n  };\r\n\r\n  formatDateForSearchBar = (dateString) => {\r\n    let monthNames = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n    if (!dateString) return \"\";\r\n    const date = new Date(dateString);\r\n    console.log(date.getMonth());\r\n    return (\r\n      monthNames[date.getMonth()] +\r\n      \" \" +\r\n      date.getDate() +\r\n      \" \" +\r\n      date.getFullYear()\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const selectedItemId = this.state.selectedItemId;\r\n    const selectedItem = this.state.selectedItem;\r\n\r\n    let transactions = Array.from(this.props.data.transactions);\r\n    transactions.forEach((transaction) => {\r\n      let result = this.props.data.users.filter(\r\n        (user) => transaction.uid === user.uid\r\n      );\r\n      transaction.fname = result[0] ? result[0].fname : \"\";\r\n      transaction.lname = result[0] ? result[0].lname : \"\";\r\n      result = this.props.data.items.filter(\r\n        (item) => transaction.iid === item.iid\r\n      );\r\n      transaction.name = result[0] ? result[0].name : \"\";\r\n      transaction.iid = result[0] ? result[0].iid : \"\";\r\n      transaction.category = result[0] ? result[0].category : \"\";\r\n\r\n      transaction.backgroundColor =\r\n        !transaction.checkedInDate &&\r\n        new Date(transaction.dueDate).getTime() < new Date().getTime()\r\n          ? \"mistyrose\"\r\n          : \"\";\r\n    });\r\n\r\n    return (\r\n      <Col className=\"stretch-h flex-col\">\r\n        <div className=\"top-bar\">\r\n          <Row>\r\n            <Col>\r\n              <Button\r\n                className=\"float-down\"\r\n                style={{ backgroundColor: \"#46C88C\", color: \"white\" }}\r\n                href=\"#/\"\r\n              >\r\n                Create New Transaction\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <h1>Transaction History</h1>\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Divider clearing />\r\n        </div>\r\n        <div className=\"page-content stretch-h\">\r\n          <Col className=\"stretch-h flex-col\">\r\n            <Table\r\n              data={transactions}\r\n              columns={this.state.columnSet}\r\n              title={<h2>Transaction History</h2>}\r\n              onRowClick={(event, rowData) =>\r\n                this.handleUserSelectClick(event, rowData)\r\n              }\r\n            />\r\n            <Modal centered show={selectedItemId != null} onHide={this.close}>\r\n              <Modal.Header bsPrefix=\"modal-header\">\r\n                <Modal.Title>Transaction</Modal.Title>\r\n                <IconButton onClick={this.close} size=\"small\" color=\"inherit\">\r\n                  <ClearIcon />\r\n                </IconButton>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <Row>\r\n                  <Col>\r\n                    <Form>\r\n                      <Form.Group widths=\"equal\">\r\n                        <Form.Field>\r\n                          <label>Item Name:</label>\r\n                          <Form.Input\r\n                            name=\"name\"\r\n                            placeholder=\"name\"\r\n                            defaultValue={selectedItem.name}\r\n                            readOnly\r\n                          ></Form.Input>\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                          <label>Category:</label>\r\n                          <Form.Input\r\n                            name=\"category\"\r\n                            placeholder=\"Category\"\r\n                            defaultValue={selectedItem.category}\r\n                            readOnly\r\n                          ></Form.Input>\r\n                        </Form.Field>\r\n                      </Form.Group>\r\n                      <Form.Field>\r\n                        <label>Rented by:</label>\r\n                        <Form.Group widths=\"equal\">\r\n                          <Form.Input\r\n                            name=\"fname\"\r\n                            placeholder=\"First Name\"\r\n                            defaultValue={selectedItem.fname}\r\n                            readOnly\r\n                          ></Form.Input>\r\n                          <Form.Input\r\n                            name=\"lname\"\r\n                            placeholder=\"Last Name\"\r\n                            defaultValue={selectedItem.lname}\r\n                            readOnly\r\n                          ></Form.Input>\r\n                        </Form.Group>\r\n                      </Form.Field>\r\n                      <Form.Field>\r\n                        <label>Item ID:</label>\r\n                        <Form.Input\r\n                          name=\"iid\"\r\n                          placeholder=\"Item ID\"\r\n                          defaultValue={selectedItem.iid}\r\n                          readOnly\r\n                        ></Form.Input>\r\n                      </Form.Field>\r\n                      <Form.Field>\r\n                        <label>Notes:</label>\r\n                        <Form.Input\r\n                          name=\"notes\"\r\n                          placeholder=\"Notes\"\r\n                          defaultValue={selectedItem.notes}\r\n                          readOnly\r\n                        ></Form.Input>\r\n                      </Form.Field>\r\n                      <Form.Group\r\n                        widths={this.state.selectedItem.checkedInDate ? 3 : 2}\r\n                      >\r\n                        <Form.Field>\r\n                          <label>Checked Out:</label>\r\n                          <Form.Input\r\n                            name=\"checkedOut\"\r\n                            placeholder=\"Checked Out\"\r\n                            defaultValue={this.formatDate(\r\n                              selectedItem.checkedOutDate\r\n                            )}\r\n                            readOnly\r\n                          ></Form.Input>\r\n                        </Form.Field>\r\n                        {this.state.selectedItem.checkedInDate && (\r\n                          <Form.Field>\r\n                            <label>Checked In:</label>\r\n                            <Form.Input\r\n                              name=\"checkedIn\"\r\n                              placeholder=\"Checked In\"\r\n                              error={!selectedItem.checkedInDate}\r\n                              defaultValue={this.formatDate(\r\n                                selectedItem.checkedInDate\r\n                              )}\r\n                              readOnly\r\n                            ></Form.Input>\r\n                          </Form.Field>\r\n                        )}\r\n                        <Form.Field>\r\n                          <label>Due Date:</label>\r\n                          <Form.Input\r\n                            name=\"due\"\r\n                            placeholder=\"Due Date\"\r\n                            defaultValue={this.formatDate(selectedItem.dueDate)}\r\n                            readOnly\r\n                          ></Form.Input>\r\n                        </Form.Field>\r\n                      </Form.Group>\r\n                    </Form>\r\n                  </Col>\r\n                </Row>\r\n              </Modal.Body>\r\n            </Modal>\r\n          </Col>\r\n        </div>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Transactions;\r\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from \"./common/Header\";\nimport Sidebar from \"./common/Sidebar\";\nimport Login from \"./pages/Login\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport \"./App.scss\";\nimport CheckInOut from \"./pages/CheckInOut\";\nimport Users from \"./pages/Users\";\nimport Inventory from \"./pages/Inventory\";\nimport Staff from \"./pages/Staff\";\nimport Transactions from \"./pages/Transactions\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.handleDataUpdate = this.handleDataUpdate.bind(this);\n    this.handleActiveUserUpdate = this.handleActiveUserUpdate.bind(this);\n    //this.handleLoginUpdate = this.handleLoginUpdate.bind(this);\n    this.state = {\n      loggedIn: true,\n      visible: true,\n      data: {\n        users: [\n          {\n            fname: \"User\",\n            lname: \"AWhoExists\",\n            uid: \"11111111\",\n            email: \"existing@email.com\",\n            phone: \"123-456-7891\",\n            notes: \"Optional notes for Seamus\",\n            creationDate: new Date().getTime(),\n            courses: [\"PreviousCourse\"],\n          },\n          {\n            fname: \"Seamus\",\n            lname: \"Rioux\",\n            uid: \"54321\",\n            email: \"srioux@email.com\",\n            phone: \"123-456-7891\",\n            notes: \"Optional notes for Seamus\",\n            creationDate: new Date().getTime(),\n            courses: [\"Photography I\"],\n          },\n          {\n            fname: \"Greg\",\n            lname: \"Smelkov\",\n            uid: \"12345\",\n            email: \"greg@email.com\",\n            phone: \"123-456-7891\",\n            notes: \"Optional notes for Greg\",\n            creationDate: new Date().getTime(),\n            courses: [\"Photography I\", \"Photography II\"],\n          },\n        ],\n        items: [\n          {\n            name: \"Canon 5D Mk II\",\n            iid: \"0001\",\n            brand: \"Canon\",\n            serial: \"123456\",\n            category: \"Camera\",\n            notes: \"\",\n            atid: \"3\",\n            courses: [\"Photography II\"],\n            creationDate: new Date().getTime(),\n          },\n          {\n            name: \"Canon 18-55 F4.0\",\n            iid: \"0002\",\n            brand: \"Canon\",\n            serial: \"223456\",\n            category: \"Lens\",\n            notes: \"Missing lens cap\",\n            atid: \"4\",\n            courses: [\"Photography I\", \"Photography II\"],\n            creationDate: new Date().getTime(),\n          },\n          {\n            name: \"Mavic Drone\",\n            iid: \"0003\",\n            brand: \"Mavic\",\n            serial: \"323456\",\n            category: \"Other\",\n            notes: \"Goes whirrr\",\n            atid: \"\",\n            courses: [\"Photography I\", \"Photography II\"],\n            creationDate: new Date().getTime(),\n          },\n          {\n            name: \"Canon 5D Mk II\",\n            iid: \"0004\",\n            brand: \"Canon\",\n            serial: \"423456\",\n            category: \"Camera\",\n            notes: \"\",\n            atid: \"\",\n            courses: [\"Photography II\"],\n            creationDate: new Date().getTime(),\n          },\n          {\n            name: \"Canon 18-55 F4.0\",\n            iid: \"0005\",\n            brand: \"Canon\",\n            serial: \"523456\",\n            category: \"Lens\",\n            notes: \"Missing lens cap\",\n            atid: \"\",\n            courses: [\"Photography I\", \"Photography II\"],\n            creationDate: new Date().getTime(),\n          },\n        ],\n        transactions: [\n          {\n            tid: \"1\",\n            uid: \"54321\",\n            iid: \"0001\",\n            checkedOutDate: new Date(\"7/22/2020\").getTime(),\n            dueDate: new Date(\"7/26/2020\").getTime(),\n            checkedInDate: new Date(\"7/24/2020\").getTime(),\n            notes: \"Example of transaction notes\",\n          },\n          {\n            tid: \"2\",\n            uid: \"54321\",\n            iid: \"0002\",\n            checkedOutDate: new Date(\"7/22/2020\").getTime(),\n            dueDate: new Date(\"7/26/2020\").getTime(),\n            checkedInDate: new Date(\"7/24/2020\").getTime(),\n            notes: \"Example of transaction notes\",\n          },\n          {\n            tid: \"3\",\n            uid: \"12345\",\n            iid: \"0001\",\n            checkedOutDate: new Date(\"7/25/2020\").getTime(),\n            dueDate: new Date(\"7/28/2020\").getTime(),\n            checkedInDate: \"\",\n            notes: \"Example of transaction notes\",\n          },\n          {\n            tid: \"4\",\n            uid: \"12345\",\n            iid: \"0002\",\n            checkedOutDate: new Date(\"7/25/2020\").getTime(),\n            dueDate: new Date(\"7/27/2020\").getTime(),\n            checkedInDate: \"\",\n            notes: \"Example of transaction notes\",\n          },\n        ],\n      },\n      activeUser: {},\n    };\n  }\n\n  handleDataUpdate(data) {\n    this.setState({ data });\n    // console.log(\"Data Updated\", data);\n  }\n\n  handleActiveUserUpdate(activeUser) {\n    console.log(activeUser);\n    this.setState({ activeUser });\n  }\n\n  render() {\n    return (\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <Router>\n          <Switch>\n            <Route exact path=\"/login\">\n              <Login onUpdateActiveUser={this.handleActiveUserUpdate} />\n            </Route>\n            <Container fluid className=\"no-gutters flex-col stretch-hw\">\n              <Header />\n              <Row className=\"flex-grow no-gutters\">\n                <Col md=\"auto\" className=\"no-gutters\">\n                  <Sidebar />\n                </Col>\n                <Col className=\"no-gutters\">\n                  <Switch>\n                    <Route exact path=\"/\">\n                      <CheckInOut\n                        data={this.state.data}\n                        onUpdateData={this.handleDataUpdate}\n                      />\n                    </Route>\n                    <Route path=\"/users\">\n                      <Users\n                        data={this.state.data}\n                        onUpdateData={this.handleDataUpdate}\n                      />\n                    </Route>\n                    <Route path=\"/inventory\">\n                      <Inventory\n                        data={this.state.data}\n                        onUpdateData={this.handleDataUpdate}\n                      />\n                    </Route>\n                    <Route path=\"/staff\">\n                      <Staff onUpdateData={this.handleDataUpdate} />\n                    </Route>\n                    <Route path=\"/transactions\">\n                      <Transactions\n                        data={this.state.data}\n                        onUpdateData={this.handleDataUpdate}\n                      />\n                    </Route>\n                  </Switch>\n                </Col>\n              </Row>\n            </Container>\n          </Switch>\n        </Router>\n      </MuiPickersUtilsProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}