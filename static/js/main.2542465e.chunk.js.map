{"version":3,"sources":["common/Header.js","common/Sidebar.js","common/Table.js","pages/CheckInOut.js","pages/Users.js","pages/Inventory.js","pages/Staff.js","pages/Transactions.js","App.js","serviceWorker.js","index.js"],"names":["trigger","Icon","name","Header","props","state","curTime","Date","toLocaleString","weekday","month","day","hour","minute","hour12","split","join","setInterval","setState","Row","className","style","display","flexDirection","Col","Nav","Link","href","xs","span","offset","this","Dropdown","icon","direction","Menu","Item","text","as","to","Component","Sidebar","Navbar","variant","active","location","pathname","Divider","withRouter","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","color","Search","size","SortArrow","ThirdStateCheck","ViewColumn","Table","flexGrow","components","Toolbar","toolbarComponents","icons","title","columns","data","localization","toolbar","nRowsSelected","itemType","options","search","paging","rowStyle","rowData","backgroundColor","tableData","id","searchFieldStyle","onRowClick","onSelectionChange","CheckInOut","handleSearchResult","bind","handleTransactionsChanges","handleDataChanges","error","userFound","onUpdateData","page","onDoneClick","selectedUser","users","onSuccessfulSearchResult","Container","handleChange","e","searchInput","target","value","handleSearchButtonClick","filter","user","uid","length","handleKeyDown","key","isError","Input","onChange","onKeyPress","fluid","iconPosition","placeholder","Button","positive","basic","animated","onClick","Content","visible","hidden","React","CheckInOutViewUser","getTransactionsToShow","preSetTransactions","transactions","Array","from","item","checkedInDate","forEach","transaction","result","fname","lname","items","iid","category","dueDate","getTime","getItemsToShow","preSetItems","atid","courses","some","course","includes","handleDoneClick","handleOpSelectClick","op","checked","isCheckoutModalOpen","close","selectedItemId","userProp","val","prevState","selectedItem","Object","assign","handleRowItemClick","rowClick","index","indexOf","find","tid","handleReturnSelectedItemsClick","map","handleCheckOutCartButtonClick","itemsToCheckOut","newTransactions","newAtid","Math","max","concat","t","toString","push","checkedOutDate","handleConfirmCheckOutButtonClick","formatDate","dateString","date","getMonth","getDate","getFullYear","selectedItemsToReturn","isCheckoutModalAllDateSelectorOpen","currentlyHeldColumnSet","field","render","itemsColumnSet","cartColumnSet","checkOutColumnSet","autoOk","inputVariant","label","format","InputAdornmentProps","position","handleDateChange","itemPanes","menuItem","event","selection","Set","sort","cartPanes","JSON","parse","stringify","Tab","panes","Modal","centered","selectedUserId","show","onHide","bsPrefix","Title","Body","IconButton","DatePicker","open","onClose","handleAllCheckoutDateChange","Footer","closeButton","Form","Field","nameError","defaultValue","readOnly","categoryError","notesError","notes","serialError","serial","Users","email","phone","creationDate","firstNameError","lastNameError","idError","emailError","editable","submitName","submitIcon","isChangesMadeToModal","showImportExcelModal","importedExcelData","importEmailErrors","handleUserEditClick","handleUserSelectClick","handleAddUserClick","tranactions","handleImportSpreadsheetClick","refs","fileUploader","click","handleClearAllCoursesClick","window","confirm","checkErrorUpdateDataSet","handleSubmitClick","handleSaveImportStudents","every","newUsers","undefined","nuser","handleDropdownChange","formatUserDate","hours","getHours","daynnite","getMinutes","getSeconds","updateImportEmail","test","handleItemClick","activeItem","headerStyleGrey","fontSize","columnSet","defaultSort","headerStyle","reduce","fileObj","files","reader","FileReader","rABS","readAsBinaryString","onload","wb","XLSX","read","type","bookVBA","utils","sheet_to_json","Sheets","SheetNames","repeat","existingUser","readAsArrayBuffer","formTablePanes","courseOptions","apply","importColumns","TextField","helperText","onChangeFile","clearing","multiple","allowAdditions","Group","widths","disabled","toggle","compact","Inventory","isItemIdUnavailable","handleItemIdVerify","handleItemSelectClick","handleItemAddClick","generateInitialNextItemId","expected","handleItemEditClick","iidError","formatDateForSearchBar","formatItemDate","toLocaleDateString","year","handleCourseDropdownChange","handleBrandDropdownChange","brand","handleCategoryDropdownChange","isNaN","fullID","i","ids","parseInt","a","b","newId","customFilterAndSearch","term","inventoryTablePanes","brandOptions","categoryOptions","maxLength","clearable","Staff","dataSet","roles","handleDropdownAdditionRoles","roleOptions","handleDropdownAdditionCourses","handleDropdownChangeCourses","handleDropdownChangeRoles","onAddItem","Transactions","handleDropdownAddition","console","log","App","handleDataUpdate","DateFnsUtils","md","exact","path","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.2542465e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, Nav } from \"react-bootstrap\";\nimport { Dropdown, Icon } from \"semantic-ui-react\";\n\n// const sampleUser = { firstName: \"User\", lastName: \"Name\" };\n\nconst trigger = (\n  <h3>\n    User Name <Icon name=\"chevron down\" />\n  </h3>\n);\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      curTime: new Date()\n        .toLocaleString(\n          [],\n          (\"en-US\",\n          {\n            weekday: \"short\",\n            month: \"short\",\n            day: \"numeric\",\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n        )\n        .split(\",\")\n        .join(\"\\t\"),\n    };\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.setState({\n        curTime: new Date()\n          .toLocaleString(\n            [],\n            (\"en-US\",\n            {\n              weekday: \"short\",\n              month: \"short\",\n              day: \"numeric\",\n              hour: \"2-digit\",\n              minute: \"2-digit\",\n              hour12: true,\n            })\n          )\n          .split(\",\")\n          .join(\"\\t\"),\n      });\n    }, 1000);\n  }\n\n  render() {\n    return (\n      <Row\n        className=\"header align-items-center\"\n        style={{ display: \"flex\", flexDirection: \"row\" }}\n      >\n        <Col>\n          <Nav.Link href=\"#/\">\n            <h2>\n              <Icon name=\"camera\" />\n              CageIMS\n            </h2>\n          </Nav.Link>\n        </Col>\n        <Col xs={{ span: 3, offset: 3 }}>\n          <div>\n            <h5>{this.state.curTime}</h5>\n          </div>\n        </Col>\n        <Col>\n          <Dropdown\n            className=\"header-dropdown\"\n            trigger={trigger}\n            icon={null}\n            direction=\"left\"\n          >\n            <Dropdown.Menu>\n              <Dropdown.Item icon=\"settings\" text=\"Settings\" />\n              <Dropdown.Item\n                icon=\"sign-out\"\n                text=\"Sign Out\"\n                as={Link}\n                to=\"/logout\"\n              />\n            </Dropdown.Menu>\n          </Dropdown>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { Nav, Navbar, Dropdown } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass Sidebar extends Component {\r\n  render() {\r\n    return (\r\n      <Navbar variant=\"light\" className=\"sidebar flex-column\">\r\n        <Nav variant=\"pills\" className=\"flex-column\">\r\n          <Nav.Item>\r\n            <Nav.Link href=\"#/\" active={this.props.location.pathname === \"/\"}>\r\n              <h5>\r\n                <Icon name=\"handshake\" />\r\n                Check In/Out\r\n              </h5>\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link\r\n              href=\"#/users\"\r\n              active={this.props.location.pathname === \"/users\"}\r\n            >\r\n              <h5>\r\n                <Icon name=\"users\" />\r\n                Users\r\n              </h5>\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link\r\n              href=\"#/inventory\"\r\n              active={this.props.location.pathname === \"/inventory\"}\r\n            >\r\n              <h5>\r\n                <Icon name=\"camera\" />\r\n                Inventory\r\n              </h5>\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link\r\n              href=\"#/transactions\"\r\n              active={this.props.location.pathname === \"/transactions\"}\r\n            >\r\n              <h5>\r\n                <Icon name=\"book\" />\r\n                History\r\n              </h5>\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link\r\n              href=\"#/staff\"\r\n              active={this.props.location.pathname === \"/staff\"}\r\n            >\r\n              <h5>\r\n                <Icon name=\"briefcase\" />\r\n                Staff\r\n              </h5>\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Dropdown.Divider />\r\n        </Nav>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Sidebar);\r\n","import React, { Component } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { Icon } from \"semantic-ui-react\";\nimport { forwardRef } from \"react\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => (\n    <Clear style={{ color: \"#12558f\" }} {...props} ref={ref} />\n  )),\n  Search: forwardRef((props, ref) => (\n    <Icon\n      name=\"search\"\n      size=\"large\"\n      style={{ color: \"#12558f\" }}\n      {...props}\n      ref={ref}\n    />\n  )),\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\nclass Table extends Component {\n  render() {\n    return (\n      <MaterialTable\n        style={{ flexGrow: 1 }}\n        components={{\n          Toolbar: (props) => (\n            <div>\n              <div className=\"table-header MuiPaper-rounded MuiPaper-elevation2\">\n                <MTableToolbar {...props} />\n              </div>\n              {this.props.toolbarComponents}\n            </div>\n          ),\n        }}\n        icons={tableIcons}\n        title={this.props.title}\n        columns={this.props.columns}\n        data={this.props.data}\n        localization={{\n          toolbar: {\n            nRowsSelected:\n              \"{0} \" +\n              (this.props.itemType ? this.props.itemType : \"row\") +\n              \"(s) selected\",\n          },\n        }}\n        options={{\n          ...{\n            search: true,\n            paging: false,\n            rowStyle: (rowData) => ({\n              backgroundColor: rowData.backgroundColor\n                ? rowData.backgroundColor\n                : rowData.tableData.id % 2 === 0\n                ? \"#FAFAFA\"\n                : \"#FFFFFF\",\n            }),\n            searchFieldStyle: { backgroundColor: \"white\", color: \"black\" },\n          },\n          ...this.props.options,\n        }}\n        onRowClick={this.props.onRowClick}\n        onSelectionChange={this.props.onSelectionChange}\n      ></MaterialTable>\n    );\n  }\n}\n\nexport default Table;\n","import React, { Component } from \"react\";\r\nimport { Input, Button, Icon, Form, Tab } from \"semantic-ui-react\";\r\nimport { Container, Col, Row, Modal } from \"react-bootstrap\";\r\nimport Table from \"../common/Table\";\r\nimport { KeyboardDatePicker, DatePicker } from \"@material-ui/pickers\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DateRange from \"@material-ui/icons/DateRange\";\r\n\r\nclass CheckInOut extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSearchResult = this.handleSearchResult.bind(this);\r\n    this.handleTransactionsChanges = this.handleDataChanges.bind(this);\r\n    this.state = {\r\n      error: false,\r\n      userFound: \"\",\r\n      // {\r\n      //     fname: \"Greg\",\r\n      //     lname: \"Smelkov\",\r\n      //     uid: \"12345\",\r\n      //     courses: [\"Photography I\", \"Photography II\"],\r\n      // },\r\n    };\r\n  }\r\n\r\n  handleSearchResult(userFound) {\r\n    // console.log(userFound);\r\n    this.setState({ userFound });\r\n  }\r\n\r\n  handleDataChanges(data) {\r\n    this.props.onUpdateData(data);\r\n  }\r\n\r\n  render() {\r\n    const userFound = this.state.userFound;\r\n    let page;\r\n    if (!userFound)\r\n      page = (\r\n        <Search\r\n          users={this.props.data.users}\r\n          onSuccessfulSearchResult={this.handleSearchResult}\r\n        />\r\n      );\r\n    else\r\n      page = (\r\n        <CheckInOutViewUser\r\n          data={this.props.data}\r\n          onDoneClick={this.handleSearchResult}\r\n          selectedUser={this.state.userFound}\r\n          onUpdateData={this.handleTransactionsChanges}\r\n        />\r\n      );\r\n    return <Container className=\"checkinout\">{page}</Container>;\r\n  }\r\n}\r\n\r\nexport default CheckInOut;\r\n\r\nclass Search extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: false,\r\n    };\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ searchInput: e.target.value });\r\n  };\r\n\r\n  handleSearchButtonClick = () => {\r\n    const users = this.props.users.filter(\r\n      (user) => user.uid === this.state.searchInput\r\n    );\r\n    if (users.length > 0) {\r\n      this.props.onSuccessfulSearchResult(users[0]);\r\n    } else {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      this.handleSearchButtonClick();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const isError = this.state.error;\r\n    return (\r\n      <div className=\"checkinout-search\">\r\n        <h1>Check In / Out</h1>\r\n        <Input\r\n          error={this.state.error}\r\n          onChange={this.handleChange}\r\n          onKeyPress={this.handleKeyDown}\r\n          size=\"huge\"\r\n          fluid\r\n          icon=\"users\"\r\n          iconPosition=\"left\"\r\n          placeholder=\"Search by exact ID...\"\r\n          className=\"drop-shadow\"\r\n        />\r\n        {isError && (\r\n          <div className=\"error-text\">\r\n            <p>Error: ID is invalid.</p>\r\n          </div>\r\n        )}\r\n        <Button\r\n          size=\"big\"\r\n          positive\r\n          basic\r\n          animated\r\n          onClick={this.handleSearchButtonClick}\r\n        >\r\n          <Button.Content visible>Search</Button.Content>\r\n          <Button.Content hidden>\r\n            <Icon name=\"search\" />\r\n          </Button.Content>\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass CheckInOutViewUser extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      op: \"\",\r\n\r\n      selectedItemId: null,\r\n      selectedItem: {},\r\n\r\n      selectedItemsToReturn: [],\r\n\r\n      transactions: [],\r\n      items: [],\r\n\r\n      newTransactions: [],\r\n\r\n      isCheckoutModalOpen: false,\r\n      isCheckoutModalAllDateSelectorOpen: false,\r\n    };\r\n  }\r\n\r\n  getTransactionsToShow = (preSetTransactions) => {\r\n    let transactions = Array.from(\r\n      (preSetTransactions\r\n        ? preSetTransactions\r\n        : this.props.data.transactions\r\n      ).filter(\r\n        (item) =>\r\n          item.uid === this.props.selectedUser.uid && !item.checkedInDate\r\n      )\r\n    );\r\n    transactions.forEach((transaction) => {\r\n      let result = this.props.data.users.filter(\r\n        (user) => transaction.uid === user.uid\r\n      );\r\n      transaction.fname = result[0] ? result[0].fname : \"\";\r\n      transaction.lname = result[0] ? result[0].lname : \"\";\r\n      result = this.props.data.items.filter(\r\n        (item) => transaction.iid === item.iid\r\n      );\r\n      transaction.name = result[0] ? result[0].name : \"\";\r\n      transaction.category = result[0] ? result[0].category : \"\";\r\n\r\n      transaction.backgroundColor =\r\n        !transaction.checkedInDate &&\r\n        new Date(transaction.dueDate).getTime() < new Date().getTime()\r\n          ? \"mistyrose\"\r\n          : \"\";\r\n    });\r\n    return transactions;\r\n  };\r\n\r\n  getItemsToShow = (preSetItems) => {\r\n    let items = Array.from(\r\n      (preSetItems ? preSetItems : this.props.data.items).filter(\r\n        (item) =>\r\n          !item.atid &&\r\n          this.props.selectedUser.courses.some((course) =>\r\n            item.courses.includes(course)\r\n          )\r\n      )\r\n    );\r\n    return items;\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      transactions: this.getTransactionsToShow(),\r\n      items: this.getItemsToShow(),\r\n    });\r\n  }\r\n\r\n  handleDoneClick = () => {\r\n    this.props.onDoneClick(\"\");\r\n  };\r\n\r\n  handleOpSelectClick = (e, op) => {\r\n    this.state.transactions.forEach((transaction) => {\r\n      if (transaction.tableData) transaction.tableData.checked = false;\r\n    });\r\n    this.state.items.forEach((item) => {\r\n      if (item.tableData) item.tableData.checked = false;\r\n    });\r\n    this.setState({ op, isCheckoutModalOpen: false });\r\n  };\r\n\r\n  close = () =>\r\n    this.setState({\r\n      selectedItemId: null,\r\n      isCheckoutModalOpen: false,\r\n    });\r\n\r\n  handleChange = (e, userProp) => {\r\n    const val = e.target.value;\r\n    this.setState((prevState) => {\r\n      let selectedItem = Object.assign({}, prevState.selectedItem);\r\n      selectedItem[userProp] = val;\r\n      return { selectedItem };\r\n    });\r\n  };\r\n\r\n  handleRowItemClick = (e, rowData, rowClick = true) => {\r\n    if (this.state.op === \"checkin\") {\r\n      let transactions = this.state.transactions;\r\n      const index = transactions.indexOf(rowData);\r\n      transactions[index].tableData.checked = !transactions[index].tableData\r\n        .checked;\r\n      this.setState({ transactions });\r\n    } else if (this.state.op === \"checkout\") {\r\n      let items = this.state.items;\r\n      const item = items.find((item) => item.iid === rowData.iid);\r\n      if (rowClick) item.tableData.checked = !item.tableData.checked;\r\n      this.setState({ items });\r\n    } else {\r\n      this.setState({\r\n        selectedItemId: rowData.tid,\r\n        selectedItem: rowData,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleReturnSelectedItemsClick = (e) => {\r\n    let data = Object.assign({}, this.props.data);\r\n    const completedTransactionIds = this.state.transactions\r\n      .filter((transaction) => transaction.tableData?.checked)\r\n      .map((transaction) => transaction.tid);\r\n    completedTransactionIds.forEach((id) => {\r\n      let transaction = data.transactions.find(\r\n        (transaction) => transaction.tid === id\r\n      );\r\n      transaction.checkedInDate = new Date().getTime();\r\n      let item = data.items.find((item) => item.iid === transaction.iid);\r\n      item.atid = \"\";\r\n    });\r\n\r\n    this.props.onUpdateData(data);\r\n\r\n    this.setState(\r\n      {\r\n        transactions: this.getTransactionsToShow(),\r\n        items: this.getItemsToShow(),\r\n      },\r\n      this.handleOpSelectClick(e, \"\")\r\n    );\r\n  };\r\n\r\n  handleCheckOutCartButtonClick = (e) => {\r\n    let data = Object.assign({}, this.props.data);\r\n    const itemsToCheckOut = this.state.items.filter(\r\n      (item) => item.tableData?.checked\r\n    );\r\n    let newTransactions = [];\r\n    itemsToCheckOut.forEach((item) => {\r\n      let newAtid = (\r\n        Math.max(\r\n          ...data.transactions.concat(newTransactions).map((t) => t.tid)\r\n        ) + 1\r\n      ).toString();\r\n      newTransactions.push({\r\n        tid: newAtid,\r\n        uid: this.props.selectedUser.uid,\r\n        iid: item.iid,\r\n        checkedOutDate: new Date().getTime(),\r\n        dueDate: null,\r\n        checkedInDate: \"\",\r\n      });\r\n    });\r\n\r\n    this.setState({ newTransactions, isCheckoutModalOpen: true });\r\n  };\r\n\r\n  handleConfirmCheckOutButtonClick = (e) => {\r\n    if (this.state.newTransactions.some((transaction) => !transaction.dueDate))\r\n      return;\r\n\r\n    let data = Object.assign({}, this.props.data);\r\n    data.transactions = data.transactions.concat(this.state.newTransactions);\r\n    this.state.newTransactions.forEach(\r\n      (transaction) =>\r\n        (data.items.find((item) => item.iid === transaction.iid).atid =\r\n          transaction.tid)\r\n    );\r\n\r\n    this.props.onUpdateData(data);\r\n    this.setState(\r\n      {\r\n        transactions: this.getTransactionsToShow(data.transactions),\r\n        items: this.getItemsToShow(),\r\n      },\r\n      this.handleOpSelectClick(e, \"\")\r\n    );\r\n  };\r\n\r\n  formatDate = (dateString) => {\r\n    if (!dateString) return \"\";\r\n    const date = new Date(dateString);\r\n    return (\r\n      date.getMonth() + 1 + \"/\" + date.getDate() + \"/\" + date.getFullYear()\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const selectedItemId = this.state.selectedItemId;\r\n    const selectedItem = this.state.selectedItem;\r\n\r\n    const handleDateChange = (date, iid) => {\r\n      let newTransactions = Array.from(this.state.newTransactions);\r\n      newTransactions.find(\r\n        (transaction) => transaction.iid === iid\r\n      ).dueDate = date.getTime();\r\n      this.setState({ newTransactions });\r\n    };\r\n\r\n    const handleAllCheckoutDateChange = (date) => {\r\n      let newTransactions = Array.from(this.state.newTransactions);\r\n      newTransactions.forEach(\r\n        (transaction) => (transaction.dueDate = date.getTime())\r\n      );\r\n      this.setState({\r\n        newTransactions,\r\n        isCheckoutModalAllDateSelectorOpen: false,\r\n      });\r\n    };\r\n\r\n    const currentlyHeldColumnSet = [\r\n      { title: \"Item Name\", field: \"name\" },\r\n      { title: \"Category\", field: \"category\" },\r\n      { title: \"Transaction Notes\", field: \"notes\" },\r\n      {\r\n        title: \"Checked Out\",\r\n        field: \"checkedOutDate\",\r\n        render: (rowData) => this.formatDate(rowData.checkedOutDate),\r\n      },\r\n      {\r\n        title: \"Due Date\",\r\n        field: \"dueDate\",\r\n        render: (rowData) => this.formatDate(rowData.dueDate),\r\n      },\r\n    ];\r\n\r\n    const itemsColumnSet = [\r\n      { title: \"Item Name\", field: \"name\" },\r\n      { title: \"Category\", field: \"category\" },\r\n      { title: \"Notes\", field: \"notes\" },\r\n    ];\r\n\r\n    const cartColumnSet = [\r\n      { title: \"Item Name\", field: \"name\" },\r\n      { title: \"Category\", field: \"category\" },\r\n    ];\r\n\r\n    const checkOutColumnSet = [\r\n      { title: \"Item Name\", field: \"name\" },\r\n      { title: \"Category\", field: \"category\" },\r\n      {\r\n        title: \"Due Date\",\r\n        field: \"dueDate\",\r\n        render: (rowData) => (\r\n          <KeyboardDatePicker\r\n            autoOk\r\n            error={\r\n              !this.state.newTransactions.find(\r\n                (transaction) => rowData.iid === transaction.iid\r\n              ).dueDate\r\n            }\r\n            variant=\"inline\"\r\n            inputVariant=\"outlined\"\r\n            label=\"Select due date\"\r\n            format=\"MM/dd/yyyy\"\r\n            value={\r\n              this.state.newTransactions.find(\r\n                (transaction) => rowData.iid === transaction.iid\r\n              ).dueDate\r\n                ? new Date(\r\n                    this.state.newTransactions.find(\r\n                      (transaction) => rowData.iid === transaction.iid\r\n                    ).dueDate\r\n                  )\r\n                : null\r\n            }\r\n            InputAdornmentProps={{ position: \"end\" }}\r\n            onChange={(date) => handleDateChange(date, rowData.iid)}\r\n          />\r\n        ),\r\n      },\r\n    ];\r\n\r\n    let itemPanes = [\r\n      {\r\n        menuItem: \"All\",\r\n        render: () => (\r\n          <Table\r\n            data={this.state.items}\r\n            itemType={\"item\"}\r\n            columns={itemsColumnSet}\r\n            title={<h3>All</h3>}\r\n            onRowClick={(event, rowData) =>\r\n              this.handleRowItemClick(event, rowData)\r\n            }\r\n            onSelectionChange={(event, rowData) => {\r\n              this.handleRowItemClick(event, rowData, false);\r\n            }}\r\n            options={{ selection: true }}\r\n          />\r\n        ),\r\n      },\r\n    ];\r\n\r\n    const categories = [\r\n      ...new Set(this.state.items.map((item) => item.category)),\r\n    ].sort();\r\n    categories.forEach((category) => {\r\n      itemPanes.push({\r\n        menuItem: category,\r\n        render: () => (\r\n          <Table\r\n            data={this.state.items.filter((item) => item.category === category)}\r\n            itemType={\"item\"}\r\n            columns={itemsColumnSet}\r\n            title={<h3>{category}</h3>}\r\n            onRowClick={(event, rowData) =>\r\n              this.handleRowItemClick(event, rowData)\r\n            }\r\n            onSelectionChange={(event, rowData) => {\r\n              this.handleRowItemClick(event, rowData, false);\r\n            }}\r\n            options={{ selection: true }}\r\n          />\r\n        ),\r\n      });\r\n    });\r\n\r\n    const cartPanes = [\r\n      {\r\n        menuItem: \"\",\r\n        render: () => (\r\n          <Table\r\n            data={JSON.parse(\r\n              JSON.stringify(\r\n                this.state.items.filter((item) => item.tableData?.checked)\r\n              )\r\n            )}\r\n            itemType={\"item\"}\r\n            columns={cartColumnSet}\r\n            title={<h3>Cart</h3>}\r\n            onRowClick={(event, rowData) =>\r\n              this.handleRowItemClick(event, rowData)\r\n            }\r\n            onSelectionChange={(event, rowData) => {\r\n              this.handleRowItemClick(event, rowData, false);\r\n            }}\r\n            options={{ selection: true, search: false }}\r\n          />\r\n        ),\r\n      },\r\n    ];\r\n\r\n    let pageOp;\r\n    if (this.state.op === \"checkin\") {\r\n      pageOp = (\r\n        <div className=\"checkinout-viewuser\">\r\n          <Row className=\"page-menu\">\r\n            <h1>\r\n              {this.props.selectedUser.fname +\r\n                \" \" +\r\n                this.props.selectedUser.lname}{\" \"}\r\n              -- Check In/Return\r\n            </h1>\r\n            <Button\r\n              onClick={(e) => {\r\n                this.handleOpSelectClick(e, \"\");\r\n              }}\r\n              size=\"big\"\r\n              animated\r\n              color=\"green\"\r\n            >\r\n              <Button.Content visible>Back</Button.Content>\r\n              <Button.Content hidden>\r\n                <Icon name=\"arrow circle left\" />\r\n              </Button.Content>\r\n            </Button>\r\n          </Row>\r\n          <Row>\r\n            <div className=\"current-table-container\">\r\n              <Table\r\n                data={this.state.transactions}\r\n                itemType={\"item\"}\r\n                columns={currentlyHeldColumnSet}\r\n                title={<h3>Currently held items:</h3>}\r\n                onRowClick={(event, rowData) =>\r\n                  this.handleRowItemClick(event, rowData)\r\n                }\r\n                options={{ selection: true }}\r\n              />\r\n            </div>\r\n          </Row>\r\n          <Row className=\"flex-end\">\r\n            <Button\r\n              onClick={(e) => {\r\n                this.handleOpSelectClick(e, \"\");\r\n              }}\r\n              color=\"red\"\r\n              size=\"big\"\r\n            >\r\n              <Button.Content visible>Cancel</Button.Content>\r\n            </Button>\r\n            <Button\r\n              onClick={(e) => {\r\n                this.handleReturnSelectedItemsClick(e);\r\n              }}\r\n              color=\"orange\"\r\n              size=\"big\"\r\n            >\r\n              <Button.Content visible>Return Selected Items</Button.Content>\r\n            </Button>\r\n          </Row>\r\n        </div>\r\n      );\r\n    } else if (this.state.op === \"checkout\") {\r\n      pageOp = (\r\n        <div className=\"checkinout-viewuser\">\r\n          <Row className=\"page-menu\">\r\n            <h1>\r\n              {this.props.selectedUser.fname +\r\n                \" \" +\r\n                this.props.selectedUser.lname}{\" \"}\r\n              -- Check Out/Borrow\r\n            </h1>\r\n            <Button\r\n              onClick={(e) => {\r\n                this.handleOpSelectClick(e, \"\");\r\n              }}\r\n              size=\"big\"\r\n              animated\r\n              color=\"green\"\r\n            >\r\n              <Button.Content visible>Back</Button.Content>\r\n              <Button.Content hidden>\r\n                <Icon name=\"arrow circle left\" />\r\n              </Button.Content>\r\n            </Button>\r\n          </Row>\r\n          <Row>\r\n            <div className=\"checkout-table-wrapper\">\r\n              <Tab className=\"checkout-inv-table\" panes={itemPanes} />\r\n              <Tab className=\"checkout-cart-table\" panes={cartPanes} />\r\n              <Modal\r\n                centered\r\n                size={this.state.selectedUserId >= 0 ? \"xl\" : \"lg\"}\r\n                show={this.state.isCheckoutModalOpen}\r\n                onHide={this.close}\r\n              >\r\n                <Modal.Header bsPrefix=\"modal-header\">\r\n                  <Modal.Title>Check Out</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                  <Row>\r\n                    <Col>\r\n                      <Table\r\n                        data={JSON.parse(\r\n                          JSON.stringify(\r\n                            this.state.items.filter(\r\n                              (item) => item.tableData?.checked\r\n                            )\r\n                          )\r\n                        )}\r\n                        itemType={\"item\"}\r\n                        columns={checkOutColumnSet}\r\n                        title={<h3>Cart</h3>}\r\n                        options={{ selection: false, search: false }}\r\n                        toolbarComponents={\r\n                          <div className=\"toolbarSetAllDate\">\r\n                            <div>\r\n                              Set all due dates:\r\n                              <IconButton\r\n                                onClick={() =>\r\n                                  this.setState({\r\n                                    isCheckoutModalAllDateSelectorOpen: true,\r\n                                  })\r\n                                }\r\n                              >\r\n                                <DateRange />\r\n                              </IconButton>\r\n                              <DatePicker\r\n                                autoOk\r\n                                variant=\"inline\"\r\n                                // ERROR: issue with open not finding correct render location,\r\n                                //   seems like it might be resolved in next datepicker update\r\n                                //   update plugin when possible\r\n                                //   otherwise will work temporarily\r\n                                open={\r\n                                  this.state.isCheckoutModalAllDateSelectorOpen\r\n                                }\r\n                                onClose={() =>\r\n                                  this.setState({\r\n                                    isCheckoutModalAllDateSelectorOpen: false,\r\n                                  })\r\n                                }\r\n                                format=\"MM/dd/yyyy\"\r\n                                onChange={(date) =>\r\n                                  handleAllCheckoutDateChange(date)\r\n                                }\r\n                                value={null}\r\n                                style={{ display: \"none\" }}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        }\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                  <Button\r\n                    onClick={(e) => {\r\n                      this.close();\r\n                    }}\r\n                    color=\"red\"\r\n                    size=\"big\"\r\n                  >\r\n                    <Button.Content visible>Cancel</Button.Content>\r\n                  </Button>\r\n                  <Button\r\n                    onClick={(e) => {\r\n                      this.handleConfirmCheckOutButtonClick(e);\r\n                    }}\r\n                    color=\"blue\"\r\n                    size=\"big\"\r\n                  >\r\n                    <Button.Content visible>Confirm Check Out</Button.Content>\r\n                  </Button>\r\n                </Modal.Footer>\r\n              </Modal>\r\n            </div>\r\n          </Row>\r\n          <Row className=\"flex-end\">\r\n            <Button\r\n              onClick={(e) => {\r\n                this.handleOpSelectClick(e, \"\");\r\n              }}\r\n              color=\"red\"\r\n              size=\"big\"\r\n            >\r\n              <Button.Content visible>Cancel</Button.Content>\r\n            </Button>\r\n            <Button\r\n              onClick={(e) => {\r\n                this.handleCheckOutCartButtonClick(e);\r\n              }}\r\n              color=\"blue\"\r\n              size=\"big\"\r\n            >\r\n              <Button.Content visible>Check Out Selected Items</Button.Content>\r\n            </Button>\r\n          </Row>\r\n        </div>\r\n      );\r\n    } else {\r\n      pageOp = (\r\n        <div className=\"checkinout-viewuser\">\r\n          <Row className=\"page-menu\">\r\n            <h1>\r\n              {this.props.selectedUser.fname +\r\n                \" \" +\r\n                this.props.selectedUser.lname}\r\n            </h1>\r\n            <Button\r\n              onClick={this.handleDoneClick}\r\n              size=\"big\"\r\n              animated\r\n              color=\"green\"\r\n            >\r\n              <Button.Content visible>Complete Transactions</Button.Content>\r\n              <Button.Content hidden>\r\n                <Icon name=\"check\" />\r\n              </Button.Content>\r\n            </Button>\r\n          </Row>\r\n          <Row>\r\n            <div className=\"current-table-container\">\r\n              <Table\r\n                data={this.state.transactions}\r\n                itemType={\"item\"}\r\n                columns={currentlyHeldColumnSet}\r\n                title={<h3>Currently held items:</h3>}\r\n                onRowClick={(event, rowData) =>\r\n                  this.handleRowItemClick(event, rowData)\r\n                }\r\n              />\r\n              <Modal\r\n                centered\r\n                size={this.state.selectedItemId >= 0 ? \"lg\" : \"lg\"}\r\n                show={selectedItemId != null}\r\n                onHide={this.close}\r\n              >\r\n                <Modal.Header closeButton bsPrefix=\"modal-header\">\r\n                  <Modal.Title>Item</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                  <Row>\r\n                    <Col>\r\n                      <Form>\r\n                        <Form.Field>\r\n                          <label>\r\n                            First Name:\r\n                            {this.state.nameError && (\r\n                              <span className=\"error-text modal-label-error-text\">\r\n                                Error: Field cannot be empty.\r\n                              </span>\r\n                            )}\r\n                          </label>\r\n                          <Form.Input\r\n                            error={this.state.nameError}\r\n                            name=\"fname\"\r\n                            placeholder=\"First Name\"\r\n                            defaultValue={selectedItem.fname}\r\n                            readOnly\r\n                          ></Form.Input>\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                          <label>\r\n                            Last Name:\r\n                            {this.state.nameError && (\r\n                              <span className=\"error-text modal-label-error-text\">\r\n                                Error: Field cannot be empty.\r\n                              </span>\r\n                            )}\r\n                          </label>\r\n                          <Form.Input\r\n                            error={this.state.nameError}\r\n                            name=\"lname\"\r\n                            placeholder=\"Last Name\"\r\n                            defaultValue={selectedItem.lname}\r\n                            readOnly\r\n                          ></Form.Input>\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                          <label>\r\n                            Item Name:\r\n                            {this.state.categoryError && (\r\n                              <span className=\"error-text modal-label-error-text\">\r\n                                Error: Field cannot be empty.\r\n                              </span>\r\n                            )}\r\n                          </label>\r\n                          <Form.Input\r\n                            error={this.state.categoryError}\r\n                            name=\"name\"\r\n                            placeholder=\"name\"\r\n                            defaultValue={selectedItem.category}\r\n                            readOnly\r\n                          ></Form.Input>\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                          <label>\r\n                            Category:\r\n                            {this.state.notesError && (\r\n                              <span className=\"error-text modal-label-error-text\">\r\n                                Error: Field cannot be empty.\r\n                              </span>\r\n                            )}\r\n                          </label>\r\n                          <Form.Input\r\n                            name=\"category\"\r\n                            error={this.state.notesError}\r\n                            placeholder=\"Category\"\r\n                            defaultValue={selectedItem.notes}\r\n                            readOnly\r\n                          ></Form.Input>\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                          <label>\r\n                            Serial:\r\n                            {this.state.serialError && (\r\n                              <span className=\"error-text modal-label-error-text\">\r\n                                Error: Field cannot be empty.\r\n                              </span>\r\n                            )}\r\n                          </label>\r\n                          <Form.Input\r\n                            name=\"serial\"\r\n                            error={this.state.serialError}\r\n                            placeholder=\"Serial\"\r\n                            defaultValue={selectedItem.serial}\r\n                            onChange={(e) => {\r\n                              this.handleChange(e, \"serial\");\r\n                            }}\r\n                            readOnly\r\n                          ></Form.Input>\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                          <label>\r\n                            Notes:\r\n                            {this.state.notesError && (\r\n                              <span className=\"error-text modal-label-error-text\">\r\n                                Error: Field cannot be empty.\r\n                              </span>\r\n                            )}\r\n                          </label>\r\n                          <Form.Input\r\n                            name=\"notes\"\r\n                            error={this.state.notesError}\r\n                            placeholder=\"Notes\"\r\n                            defaultValue={selectedItem.notes}\r\n                            onChange={(e) => {\r\n                              this.handleChange(e, \"notes\");\r\n                            }}\r\n                            readOnly\r\n                          ></Form.Input>\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                          <label>Checked Out:</label>\r\n                          <Form.Input\r\n                            name=\"checkedOut\"\r\n                            placeholder=\"Checked Out\"\r\n                            defaultValue={this.formatDate(\r\n                              selectedItem.checkedOutDate\r\n                            )}\r\n                            onChange={(e) => {\r\n                              this.handleChange(e, \"checkedOutDate\");\r\n                            }}\r\n                            readOnly\r\n                          ></Form.Input>\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                          <label>Checked In:</label>\r\n                          <Form.Input\r\n                            name=\"checkedIn\"\r\n                            placeholder=\"Checked In\"\r\n                            error={!selectedItem.checkedInDate}\r\n                            defaultValue={this.formatDate(\r\n                              selectedItem.checkedInDate\r\n                            )}\r\n                            onChange={(e) => {\r\n                              this.handleChange(e, \"checkedInDate\");\r\n                            }}\r\n                            readOnly\r\n                          ></Form.Input>\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                          <label>Due Date:</label>\r\n                          <Form.Input\r\n                            name=\"due\"\r\n                            placeholder=\"Due Date\"\r\n                            defaultValue={this.formatDate(selectedItem.dueDate)}\r\n                            onChange={(e) => {\r\n                              this.handleChange(e, \"dueDate\");\r\n                            }}\r\n                            readOnly\r\n                          ></Form.Input>\r\n                        </Form.Field>\r\n                      </Form>\r\n                    </Col>\r\n                  </Row>\r\n                </Modal.Body>\r\n                <Modal.Footer></Modal.Footer>\r\n              </Modal>\r\n            </div>\r\n          </Row>\r\n          <Row className=\"checkinout-buttons\">\r\n            <Button\r\n              onClick={(e) => {\r\n                this.handleOpSelectClick(e, \"checkin\");\r\n              }}\r\n              color=\"orange\"\r\n              size=\"big\"\r\n            >\r\n              <Button.Content visible>Return Items</Button.Content>\r\n            </Button>\r\n            <Button\r\n              onClick={(e) => {\r\n                this.handleOpSelectClick(e, \"checkout\");\r\n              }}\r\n              color=\"blue\"\r\n              size=\"big\"\r\n            >\r\n              <Button.Content visible>Check Out Items</Button.Content>\r\n            </Button>\r\n          </Row>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return pageOp;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Divider,\r\n  Button,\r\n  Form,\r\n  Dropdown,\r\n  Tab,\r\n  Icon,\r\n  Menu,\r\n} from \"semantic-ui-react\";\r\nimport { Col, Row, Modal } from \"react-bootstrap\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport XLSX from \"xlsx\";\r\nimport Table from \"../common/Table\";\r\n\r\nclass Users extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    const headerStyleGrey = {\r\n      backgroundColor: \"#E2E2E2\",\r\n      color: \"black\",\r\n      fontSize: \"24\",\r\n    };\r\n    this.handleImportSpreadsheetClick = this.handleImportSpreadsheetClick.bind(\r\n      this\r\n    );\r\n    this.state = {\r\n      columnSet: [\r\n        {\r\n          title: \"Last Name\",\r\n          field: \"lname\",\r\n          defaultSort: \"asc\",\r\n          headerStyle: headerStyleGrey,\r\n        },\r\n        { title: \"First Name\", field: \"fname\", headerStyle: headerStyleGrey },\r\n        {\r\n          title: \"Courses\",\r\n          field: \"courses\",\r\n          headerStyle: headerStyleGrey,\r\n          render: (rowData) => {\r\n            return rowData.courses.length > 0\r\n              ? rowData.courses.reduce((result, item) => (\r\n                  <>\r\n                    {result}\r\n                    {\", \"}\r\n                    {item}\r\n                  </>\r\n                ))\r\n              : \"\";\r\n          },\r\n        },\r\n      ],\r\n\r\n      activeItem: \"user\",\r\n      firstNameError: false,\r\n      lastNameError: false,\r\n      idError: false,\r\n      emailError: false,\r\n      editable: true,\r\n      isChangesMadeToModal: false,\r\n\r\n      showImportExcelModal: false,\r\n      importedExcelData: [],\r\n      importEmailErrors: {},\r\n\r\n      selectedUserId: null,\r\n      selectedUser: {\r\n        fname: \"\",\r\n        lname: \"\",\r\n        courses: [],\r\n        uid: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        notes: \"\",\r\n        transactions: [],\r\n        creationDate: \"\",\r\n      },\r\n    };\r\n  }\r\n\r\n  close = () =>\r\n    this.setState({\r\n      selectedUserId: null,\r\n      selectedUser: {\r\n        fname: \"\",\r\n        lname: \"\",\r\n        courses: [],\r\n        uid: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        notes: \"\",\r\n        transactions: [],\r\n        creationDate: \"\",\r\n      },\r\n      firstNameError: false,\r\n      lastNameError: false,\r\n      idError: false,\r\n      emailError: false,\r\n      editable: true,\r\n      submitName: \"Close\",\r\n      submitIcon: null,\r\n      isChangesMadeToModal: false,\r\n      showImportExcelModal: false,\r\n      importedExcelData: [],\r\n      importEmailErrors: {},\r\n    });\r\n\r\n  handleChange = (e, userProp) => {\r\n    const val = e.target.value;\r\n    this.setState((prevState) => {\r\n      let selectedUser = Object.assign({}, prevState.selectedUser);\r\n      selectedUser[userProp] = val;\r\n      return { selectedUser, isChangesMadeToModal: true };\r\n    });\r\n  };\r\n\r\n  handleUserEditClick = () => {\r\n    !this.state.isChangesMadeToModal &&\r\n      this.setState({\r\n        editable: !this.state.editable,\r\n      });\r\n  };\r\n\r\n  handleUserSelectClick = (e, rowData) => {\r\n    this.setState({\r\n      selectedUserId: rowData.tableData.id,\r\n      selectedUser: this.props.data.users[rowData.tableData.id],\r\n    });\r\n    this.setState((prevState) => {\r\n      let selectedUser = Object.assign({}, prevState.selectedUser);\r\n      let transactions = Array.from(\r\n        this.props.data.transactions.filter(\r\n          (name) => name.uid === selectedUser.uid\r\n        )\r\n      );\r\n      transactions.forEach((transaction) => {\r\n        transaction.backgroundColor =\r\n          !transaction.checkedInDate &&\r\n          new Date(transaction.dueDate).getTime() < new Date().getTime()\r\n            ? \"mistyrose\"\r\n            : \"\";\r\n      });\r\n      selectedUser[\"transactions\"] = transactions;\r\n      return { selectedUser };\r\n    });\r\n  };\r\n\r\n  handleAddUserClick = () => {\r\n    this.setState({\r\n      selectedUserId: -1,\r\n      selectedUser: {\r\n        fname: \"\",\r\n        lname: \"\",\r\n        courses: [],\r\n        uid: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        notes: \"\",\r\n        creationDate: new Date().getTime(),\r\n        tranactions: [],\r\n      },\r\n      editable: false,\r\n    });\r\n  };\r\n\r\n  handleImportSpreadsheetClick = () => {\r\n    this.refs.fileUploader.click();\r\n  };\r\n\r\n  handleClearAllCoursesClick = () => {\r\n    if (\r\n      window.confirm(\r\n        \"Are you sure you want to clear every user's courses? This process is irreversible.\"\r\n      )\r\n    ) {\r\n      let data = Object.assign({}, this.props.data);\r\n      data.users.forEach((user) => (user.courses = []));\r\n      this.props.onUpdateData(data);\r\n    }\r\n  };\r\n\r\n  onChangeFile(event) {\r\n    const fileObj = event.target.files[0];\r\n    const reader = new FileReader();\r\n    const rABS = !!reader.readAsBinaryString;\r\n\r\n    reader.onload = (e) => {\r\n      const wb = XLSX.read(e.target.result, {\r\n        type: rABS ? \"binary\" : \"array\",\r\n        bookVBA: true,\r\n      });\r\n      const data = XLSX.utils\r\n        .sheet_to_json(wb.Sheets[wb.SheetNames[0]])\r\n        .map((user) => ({\r\n          fname: user[\"Preferred Name\"].split(/[\\s, ]+/)[1],\r\n          lname: user[\"Preferred Name\"].split(/[\\s, ]+/)[0],\r\n          courses: [],\r\n          uid:\r\n            \"0\".repeat(8 - user[\"ID\"].toString().length) +\r\n            user[\"ID\"].toString(),\r\n          email:\r\n            user[\"Preferred Name\"].split(/[\\s, ]+/)[1] +\r\n            \"_\" +\r\n            user[\"Preferred Name\"].split(/[\\s, ]+/)[0],\r\n          creationDate: new Date().getTime(),\r\n        }))\r\n        .map((nuser) => {\r\n          const existingUser = this.props.data.users.find(\r\n            (user) => user.uid === nuser.uid\r\n          );\r\n          if (existingUser === undefined) return nuser;\r\n          this.setState({\r\n            [\"importEmailValid\" +\r\n            existingUser.uid]: /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(\r\n              existingUser.email\r\n            ),\r\n          });\r\n          return existingUser;\r\n        });\r\n\r\n      //TODO: check ids aren't duplicate\r\n\r\n      this.setState({ importedExcelData: data, showImportExcelModal: true });\r\n    };\r\n\r\n    if (rABS) {\r\n      reader.readAsBinaryString(fileObj);\r\n    } else {\r\n      reader.readAsArrayBuffer(fileObj);\r\n    }\r\n  }\r\n\r\n  checkErrorUpdateDataSet = () => {\r\n    if (\r\n      !this.state.firstNameError &&\r\n      !this.state.lastNameError &&\r\n      !this.state.idError &&\r\n      !this.state.emailError\r\n    ) {\r\n      let data = Object.assign({}, this.props.data);\r\n      if (this.state.selectedUserId >= 0) {\r\n        data.users[this.state.selectedUserId] = this.state.selectedUser;\r\n      } else {\r\n        data.users.push(this.state.selectedUser);\r\n      }\r\n      this.props.onUpdateData(data);\r\n      this.close();\r\n    }\r\n  };\r\n\r\n  handleSubmitClick = () => {\r\n    if (this.state.isChangesMadeToModal) {\r\n      this.setState(\r\n        {\r\n          firstNameError: this.state.selectedUser.fname === \"\",\r\n          lastNameError: this.state.selectedUser.lname === \"\",\r\n          idError: this.state.selectedUser.uid === \"\",\r\n          emailError: this.state.selectedUser.email === \"\",\r\n        },\r\n        this.checkErrorUpdateDataSet\r\n      );\r\n    } else {\r\n      this.close();\r\n    }\r\n  };\r\n\r\n  handleSaveImportStudents = () => {\r\n    if (!this.state.isChangesMadeToModal) {\r\n      this.close();\r\n    }\r\n\r\n    if (\r\n      this.state.importedExcelData.every(\r\n        (user) => this.state[\"importEmailValid\" + user.uid]\r\n      )\r\n    ) {\r\n      let newUsers = Array.from(this.state.importedExcelData);\r\n      newUsers.forEach(\r\n        (user) =>\r\n          (user.courses = user.courses.concat(this.state.selectedUser.courses))\r\n      );\r\n      let users = [\r\n        ...newUsers,\r\n        ...this.props.data.users.filter(\r\n          (user) =>\r\n            this.state.importedExcelData.find(\r\n              (nuser) => nuser.uid === user.uid\r\n            ) === undefined\r\n        ),\r\n      ];\r\n\r\n      let data = Object.assign({}, this.props.data);\r\n      data.users = users;\r\n      this.props.onUpdateData(data);\r\n      this.close();\r\n    }\r\n  };\r\n\r\n  handleDropdownChange = (e, { value }) => {\r\n    const val = value;\r\n    this.setState((prevState) => {\r\n      let selectedUser = Object.assign({}, prevState.selectedUser);\r\n      selectedUser.courses = val;\r\n      return { selectedUser, isChangesMadeToModal: true };\r\n    });\r\n  };\r\n\r\n  formatDate = (dateString) => {\r\n    if (!dateString) return \"\";\r\n    const date = new Date(dateString);\r\n    return (\r\n      date.getMonth() + 1 + \"/\" + date.getDate() + \"/\" + date.getFullYear()\r\n    );\r\n  };\r\n\r\n  formatUserDate = (dateString) => {\r\n    if (!dateString) return \"\";\r\n    const date = new Date(dateString);\r\n    let hours = date.getHours();\r\n    let daynnite = \"\";\r\n    if (hours > 12) {\r\n      hours = hours - 12;\r\n      daynnite = \"PM\";\r\n    } else if (hours === 0) {\r\n      hours = 12;\r\n      daynnite = \"AM\";\r\n    } else if (hours < 12) {\r\n      daynnite = \"AM\";\r\n    }\r\n    return (\r\n      date.getMonth() +\r\n      1 +\r\n      \"/\" +\r\n      date.getDate() +\r\n      \"/\" +\r\n      date.getFullYear() +\r\n      \" \" +\r\n      hours +\r\n      \":\" +\r\n      (date.getMinutes() < 10 ? \"0\" + date.getMinutes() : date.getMinutes()) +\r\n      \":\" +\r\n      (date.getSeconds() < 10 ? \"0\" + date.getSeconds() : date.getSeconds()) +\r\n      \" \" +\r\n      daynnite\r\n    );\r\n  };\r\n\r\n  updateImportEmail = (e, uid) => {\r\n    const val = e.target.value;\r\n    this.setState((prevState) => {\r\n      let importedExcelData = Array.from(prevState.importedExcelData);\r\n      importedExcelData.find((user) => user.uid === uid).email = val;\r\n      return {\r\n        [\"importEmailValid\" +\r\n        uid]: /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(val),\r\n        isChangesMadeToModal: true,\r\n        importedExcelData,\r\n      };\r\n    });\r\n  };\r\n\r\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name });\r\n\r\n  render() {\r\n    const selectedUserId = this.state.selectedUserId;\r\n    const selectedUser = this.state.selectedUser;\r\n    let formTablePanes = [];\r\n    if (this.state.selectedUserId != null && this.state.selectedUserId >= 0) {\r\n      formTablePanes = [\r\n        {\r\n          menuItem: \"Due Items\",\r\n          render: () => (\r\n            <Table\r\n              title={\r\n                this.state.selectedUser.fname +\r\n                \" \" +\r\n                this.state.selectedUser.lname\r\n              }\r\n              columns={[\r\n                { title: \"Item ID\", field: \"iid\" },\r\n                { title: \"Transaction ID\", field: \"tid\" },\r\n                {\r\n                  title: \"Checked Out Date\",\r\n                  field: \"checkedOutDate\",\r\n                  render: (rowData) => this.formatDate(rowData.checkedOutDate),\r\n                },\r\n                {\r\n                  title: \"Due Date\",\r\n                  field: \"dueDate\",\r\n                  render: (rowData) => this.formatDate(rowData.dueDate),\r\n                },\r\n              ]}\r\n              data={Array.from(\r\n                this.state.selectedUser.transactions.filter(\r\n                  (name) => name.checkedInDate === \"\"\r\n                )\r\n              )}\r\n            ></Table>\r\n          ),\r\n        },\r\n        {\r\n          menuItem: \"Completed Transactions\",\r\n          render: () => (\r\n            <Table\r\n              title={\r\n                this.state.selectedUser.fname +\r\n                \" \" +\r\n                this.state.selectedUser.lname\r\n              }\r\n              columns={[\r\n                { title: \"Item ID\", field: \"iid\" },\r\n                { title: \"Transaction ID\", field: \"tid\" },\r\n                {\r\n                  title: \"Checked Out Date\",\r\n                  field: \"checkedOutDate\",\r\n                  render: (rowData) => this.formatDate(rowData.checkedOutDate),\r\n                },\r\n                {\r\n                  title: \"Checked In Date\",\r\n                  field: \"checkedInDate\",\r\n                  render: (rowData) => this.formatDate(rowData.checkedInDate),\r\n                },\r\n              ]}\r\n              data={Array.from(\r\n                this.state.selectedUser.transactions.filter(\r\n                  (name) => !(name.checkedInDate === \"\")\r\n                )\r\n              )}\r\n            ></Table>\r\n          ),\r\n        },\r\n      ];\r\n    }\r\n\r\n    const courseOptions = Array.from(\r\n      new Set(\r\n        [].concat.apply(\r\n          [],\r\n          [\r\n            this.state.selectedUser,\r\n            ...this.props.data.items,\r\n            ...this.props.data.users,\r\n          ]\r\n            .filter((item) => item.courses)\r\n            .map((item) => item.courses)\r\n        )\r\n      )\r\n    )\r\n      .sort()\r\n      .map((item) => ({ text: item, value: item }));\r\n\r\n    const importColumns = [\r\n      { title: \"Last Name\", field: \"lname\", defaultSort: \"asc\" },\r\n      { title: \"First Name\", field: \"fname\" },\r\n      { title: \"Student ID\", field: \"uid\" },\r\n      {\r\n        title: \"Email\",\r\n        field: \"email\",\r\n        render: (rowData) => (\r\n          <TextField\r\n            defaultValue={rowData.email}\r\n            error={!this.state[\"importEmailValid\" + rowData.uid]}\r\n            helperText={\r\n              !this.state[\"importEmailValid\" + rowData.uid]\r\n                ? \"Enter a valid email.\"\r\n                : \"\"\r\n            }\r\n            onChange={(e) => {\r\n              this.updateImportEmail(e, rowData.uid);\r\n            }}\r\n          />\r\n        ),\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <Col className=\"stretch-h flex-col\">\r\n        <div className=\"top-bar\">\r\n          <Row>\r\n            <Col>\r\n              <Button\r\n                className=\"float-down\"\r\n                size=\"medium\"\r\n                style={{ backgroundColor: \"#46C88C\", color: \"white\" }}\r\n                onClick={this.handleAddUserClick}\r\n              >\r\n                Create New User\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <h1>User List</h1>\r\n            </Col>\r\n            <Col>\r\n              <div className=\"float-down right-buttons\">\r\n                <Button\r\n                  basic\r\n                  size=\"medium\"\r\n                  onClick={this.handleImportSpreadsheetClick}\r\n                >\r\n                  Import from Excel\r\n                </Button>\r\n                <input\r\n                  type=\"file\"\r\n                  ref=\"fileUploader\"\r\n                  style={{ display: \"none\" }}\r\n                  onChange={this.onChangeFile.bind(this)}\r\n                />\r\n                <Button\r\n                  basic\r\n                  size=\"medium\"\r\n                  onClick={this.handleClearAllCoursesClick}\r\n                >\r\n                  Clear All Courses\r\n                </Button>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Divider clearing />\r\n        </div>\r\n        <div className=\"page-content stretch-h\">\r\n          <Col className=\"stretch-h flex-col\">\r\n            <Table\r\n              data={Array.from(this.props.data.users)}\r\n              columns={this.state.columnSet}\r\n              title={<h2>Users</h2>}\r\n              onRowClick={(event, rowData) =>\r\n                this.handleUserSelectClick(event, rowData)\r\n              }\r\n            />\r\n            <Modal\r\n              centered\r\n              size={\"xl\"}\r\n              show={this.state.showImportExcelModal}\r\n              onHide={this.close}\r\n            >\r\n              <Modal.Header closeButton bsPrefix=\"modal-header\">\r\n                <Modal.Title>Import from Excel file</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <Row>\r\n                  <Col>\r\n                    <Table\r\n                      data={this.state.importedExcelData}\r\n                      columns={importColumns}\r\n                    />\r\n                    <Form>\r\n                      <Form.Field>\r\n                        <label>Courses:</label>\r\n                        <Dropdown\r\n                          placeholder=\"Courses\"\r\n                          name=\"courses\"\r\n                          fluid\r\n                          multiple\r\n                          search\r\n                          selection\r\n                          allowAdditions\r\n                          options={courseOptions}\r\n                          value={selectedUser.courses}\r\n                          onChange={this.handleDropdownChange}\r\n                        />\r\n                      </Form.Field>\r\n                    </Form>\r\n                  </Col>\r\n                </Row>\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button\r\n                  id=\"add-icon-handler\"\r\n                  variant=\"primary\"\r\n                  onClick={this.handleSaveImportStudents}\r\n                >\r\n                  {this.state.isChangesMadeToModal ? (\r\n                    <Icon name=\"save\"></Icon>\r\n                  ) : null}\r\n                  {this.state.isChangesMadeToModal ? \"Save\" : \"Cancel\"}\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n            <Modal centered show={selectedUserId != null} onHide={this.close}>\r\n              <Modal.Header bsPrefix=\"modal-header\">\r\n                <Modal.Title>User</Modal.Title>\r\n                <IconButton onClick={this.close} size=\"small\" color=\"inherit\">\r\n                  <ClearIcon />\r\n                </IconButton>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                {this.state.activeItem === \"user\" &&\r\n                  this.state.selectedUser !== null && (\r\n                    <Form>\r\n                      <Form.Group widths={2}>\r\n                        <Form.Field>\r\n                          <label>\r\n                            First Name:\r\n                            {this.state.firstNameError && (\r\n                              <span className=\"error-text modal-label-error-text\">\r\n                                Error: Field is empty.\r\n                              </span>\r\n                            )}\r\n                          </label>\r\n                          <Form.Input\r\n                            error={this.state.firstNameError}\r\n                            name=\"fname\"\r\n                            placeholder=\"First Name\"\r\n                            defaultValue={selectedUser.fname}\r\n                            onChange={(e) => {\r\n                              this.handleChange(e, \"fname\");\r\n                            }}\r\n                            readOnly={this.state.editable}\r\n                          ></Form.Input>\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                          <label>\r\n                            Last Name:\r\n                            {this.state.lastNameError && (\r\n                              <span className=\"error-text modal-label-error-text\">\r\n                                Error: Field is empty.\r\n                              </span>\r\n                            )}\r\n                          </label>\r\n                          <Form.Input\r\n                            error={this.state.lastNameError}\r\n                            name=\"lname\"\r\n                            placeholder=\"Last Name\"\r\n                            defaultValue={selectedUser.lname}\r\n                            onChange={(e) => {\r\n                              this.handleChange(e, \"lname\");\r\n                            }}\r\n                            readOnly={this.state.editable}\r\n                          ></Form.Input>\r\n                        </Form.Field>\r\n                      </Form.Group>\r\n                      <Form.Field>\r\n                        <label>Courses:</label>\r\n                        <Dropdown\r\n                          placeholder=\"Courses\"\r\n                          name=\"courses\"\r\n                          fluid\r\n                          multiple\r\n                          search\r\n                          selection\r\n                          allowAdditions\r\n                          options={courseOptions}\r\n                          value={selectedUser.courses}\r\n                          onChange={this.handleDropdownChange}\r\n                          disabled={this.state.editable}\r\n                        />\r\n                      </Form.Field>\r\n                      <Form.Field>\r\n                        <label>\r\n                          UML ID:\r\n                          {this.state.idError && (\r\n                            <span className=\"error-text modal-label-error-text\">\r\n                              Error: Field is empty.\r\n                            </span>\r\n                          )}\r\n                        </label>\r\n                        <Form.Input\r\n                          name=\"id\"\r\n                          error={this.state.idError}\r\n                          placeholder=\"UML ID\"\r\n                          defaultValue={selectedUser.uid}\r\n                          onChange={(e) => {\r\n                            this.handleChange(e, \"uid\");\r\n                          }}\r\n                          readOnly={this.state.editable}\r\n                        ></Form.Input>\r\n                      </Form.Field>\r\n                      <Form.Group widths={2}>\r\n                        <Form.Field>\r\n                          <label>\r\n                            Email:\r\n                            {this.state.emailError && (\r\n                              <span className=\"error-text modal-label-error-text\">\r\n                                Error: Field is empty.\r\n                              </span>\r\n                            )}\r\n                          </label>\r\n                          <Form.Input\r\n                            name=\"email\"\r\n                            error={this.state.emailError}\r\n                            placeholder=\"Email\"\r\n                            defaultValue={selectedUser.email}\r\n                            onChange={(e) => {\r\n                              this.handleChange(e, \"email\");\r\n                            }}\r\n                            readOnly={this.state.editable}\r\n                          ></Form.Input>\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                          <label>Phone Number:</label>\r\n                          <Form.Input\r\n                            name=\"phone\"\r\n                            placeholder=\"Phone Number\"\r\n                            defaultValue={selectedUser.phone}\r\n                            onChange={(e) => {\r\n                              this.handleChange(e, \"phone\");\r\n                            }}\r\n                            readOnly={this.state.editable}\r\n                          ></Form.Input>\r\n                        </Form.Field>\r\n                      </Form.Group>\r\n                      <Form.Field>\r\n                        <label>Notes:</label>\r\n                        <Form.Input\r\n                          name=\"notes\"\r\n                          placeholder=\"Notes\"\r\n                          defaultValue={selectedUser.notes}\r\n                          onChange={(e) => {\r\n                            this.handleChange(e, \"notes\");\r\n                          }}\r\n                          readOnly={this.state.editable}\r\n                        ></Form.Input>\r\n                      </Form.Field>\r\n                      {selectedUserId >= 0 ? (\r\n                        <Form.Field>\r\n                          <label>Date Created:</label>\r\n                          <Form.Input\r\n                            name=\"creationDate\"\r\n                            placeholder=\"creationDate\"\r\n                            defaultValue={this.formatUserDate(\r\n                              selectedUser.creationDate\r\n                            )}\r\n                            readOnly\r\n                          ></Form.Input>\r\n                        </Form.Field>\r\n                      ) : null}\r\n                    </Form>\r\n                  )}\r\n                {this.state.activeItem === \"table\" &&\r\n                  this.state.selectedUserId >= 0 && (\r\n                    <Tab\r\n                      panes={formTablePanes}\r\n                      className=\"stretch-h flex-col\"\r\n                    />\r\n                  )}\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                {this.state.selectedUserId >= 0 ? (\r\n                  <Button\r\n                    className=\"btn btn-primary mr-auto\"\r\n                    toggle\r\n                    active={!this.state.editable}\r\n                    onClick={this.handleUserEditClick}\r\n                  >\r\n                    <Icon name=\"pencil\" />\r\n                    Edit\r\n                  </Button>\r\n                ) : null}\r\n                {this.state.selectedUserId >= 0 && (\r\n                  <Menu compact className=\"mr-auto\">\r\n                    <Menu.Item\r\n                      name=\"user\"\r\n                      active={this.state.activeItem === \"user\"}\r\n                      onClick={this.handleItemClick}\r\n                    >\r\n                      <Icon name=\"clipboard list\" />\r\n                      User Form\r\n                    </Menu.Item>\r\n                    <Menu.Item\r\n                      name=\"table\"\r\n                      active={this.state.activeItem === \"table\"}\r\n                      onClick={this.handleItemClick}\r\n                    >\r\n                      <Icon name=\"book\" />\r\n                      Transactions\r\n                    </Menu.Item>\r\n                  </Menu>\r\n                )}\r\n                <Button\r\n                  id=\"add-icon-handler\"\r\n                  variant=\"primary\"\r\n                  onClick={this.handleSubmitClick}\r\n                >\r\n                  {this.state.isChangesMadeToModal ? (\r\n                    <Icon name=\"save\"></Icon>\r\n                  ) : null}\r\n                  {this.state.isChangesMadeToModal ? \"Save\" : \"Close\"}\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n          </Col>\r\n        </div>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Users;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Divider,\r\n  Button,\r\n  Form,\r\n  Dropdown,\r\n  Icon,\r\n  Tab,\r\n  Menu,\r\n} from \"semantic-ui-react\";\r\nimport { Col, Modal, Row } from \"react-bootstrap\";\r\nimport Table from \"../common/Table\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\n\r\nclass Inventory extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    const headerStyleGrey = {\r\n      backgroundColor: \"#E2E2E2\",\r\n      color: \"black\",\r\n      fontSize: \"24\",\r\n    };\r\n    this.state = {\r\n      columnSet: [\r\n        {\r\n          title: \"Item Name\",\r\n          field: \"name\",\r\n          headerStyle: headerStyleGrey,\r\n        },\r\n        {\r\n          title: \"Brand\",\r\n          field: \"brand\",\r\n          headerStyle: headerStyleGrey,\r\n        },\r\n        {\r\n          title: \"Category\",\r\n          field: \"category\",\r\n          headerStyle: headerStyleGrey,\r\n        },\r\n        {\r\n          title: \"Item ID\",\r\n          field: \"iid\",\r\n          defaultSort: \"asc\",\r\n          headerStyle: headerStyleGrey,\r\n        },\r\n        {\r\n          title: \"Serial\",\r\n          field: \"serial\",\r\n          headerStyle: headerStyleGrey,\r\n        },\r\n        {\r\n          title: \"Notes\",\r\n          field: \"notes\",\r\n          headerStyle: headerStyleGrey,\r\n          render: (rowData) => {\r\n            return rowData.notes ? (\r\n              <Icon\r\n                size=\"large\"\r\n                name=\"check circle\"\r\n                className=\"notes-icon\"\r\n              ></Icon>\r\n            ) : null;\r\n          },\r\n        },\r\n        {\r\n          title: \"Courses\",\r\n          field: \"courses\",\r\n          headerStyle: headerStyleGrey,\r\n          render: (rowData) => {\r\n            return rowData.courses.length > 0\r\n              ? rowData.courses.reduce((result, item) => (\r\n                  <>\r\n                    {result}\r\n                    {\", \"}\r\n                    {item}\r\n                  </>\r\n                ))\r\n              : \"\";\r\n          },\r\n        },\r\n        {\r\n          title: \"Expected Return Date\",\r\n          field: \"expected\",\r\n          headerStyle: headerStyleGrey,\r\n          render: (rowData) =>\r\n            rowData.expected ? this.formatDate(rowData.expected) : \"Available\",\r\n          customFilterAndSearch: (term, rowData) =>\r\n            this.formatDateForSearchBar(rowData.expected).indexOf(term) !==\r\n              -1 || this.formatDate(rowData.expected).indexOf(term) !== -1,\r\n        },\r\n      ],\r\n\r\n      activeItem: \"item\",\r\n      open: false,\r\n\r\n      nameError: false,\r\n      categoryError: false,\r\n      iidError: false,\r\n      serialError: false,\r\n      editable: true,\r\n      isChangesMadeToModal: false,\r\n      isItemIdUnavailable: false,\r\n\r\n      selectedItemId: null,\r\n      selectedItem: {\r\n        name: \"\",\r\n        iid: \"\",\r\n        serial: \"\",\r\n        category: \"\",\r\n        notes: \"\",\r\n        atid: \"\",\r\n        courses: [],\r\n        expected: \"\",\r\n        creationDate: \"\",\r\n        transactions: [],\r\n      },\r\n    };\r\n  }\r\n\r\n  close = () =>\r\n    this.setState({\r\n      selectedItemId: null,\r\n      nameError: false,\r\n      categoryError: false,\r\n      serialError: false,\r\n      editable: true,\r\n      submitName: \"Close\",\r\n      submitIcon: null,\r\n      isChangesMadeToModal: false,\r\n      isItemIdUnavailable: false,\r\n    });\r\n\r\n  handleChange = (e, userProp) => {\r\n    let val = e.target.value;\r\n    if (userProp === \"iid\") {\r\n      val = this.handleItemIdVerify(val);\r\n    }\r\n    this.setState((prevState) => {\r\n      let selectedItem = Object.assign({}, prevState.selectedItem);\r\n      selectedItem[userProp] = val;\r\n      return { selectedItem, isChangesMadeToModal: true };\r\n    });\r\n  };\r\n\r\n  handleItemSelectClick = (e, rowData) => {\r\n    let selectedItemId = rowData.tableData.id;\r\n    let selectedItem = Object.assign(\r\n      {},\r\n      this.props.data.items.find((item) => item.iid === rowData.iid)\r\n    );\r\n    let transactions = Array.from(\r\n      this.props.data.transactions.filter(\r\n        (transaction) => transaction.iid === selectedItem.iid\r\n      )\r\n    );\r\n    transactions.forEach((transaction) => {\r\n      transaction.backgroundColor =\r\n        !transaction.checkedInDate &&\r\n        new Date(transaction.dueDate).getTime() < new Date().getTime()\r\n          ? \"mistyrose\"\r\n          : \"\";\r\n    });\r\n    selectedItem[\"transactions\"] = transactions;\r\n    this.setState({\r\n      selectedItemId,\r\n      selectedItem,\r\n    });\r\n  };\r\n\r\n  handleItemAddClick = () => {\r\n    this.setState({\r\n      selectedItemId: -1,\r\n      selectedItem: {\r\n        name: \"\",\r\n        iid: this.generateInitialNextItemId(),\r\n        serial: \"\",\r\n        category: \"\",\r\n        notes: \"\",\r\n        atid: \"\",\r\n        courses: [],\r\n        creationDate: new Date().getTime(),\r\n        expected: \"\",\r\n        transactions: [],\r\n      },\r\n      editable: false,\r\n      isChangesMadeToModal: false,\r\n    });\r\n  };\r\n\r\n  handleItemEditClick = () => {\r\n    !this.state.isChangesMadeToModal &&\r\n      this.setState({\r\n        editable: !this.state.editable,\r\n      });\r\n  };\r\n\r\n  checkErrorUpdateDataSet = () => {\r\n    if (\r\n      !this.state.nameError &&\r\n      !this.state.categoryError &&\r\n      !this.state.serialError &&\r\n      !this.state.isItemIdUnavailable &&\r\n      !this.state.iidError\r\n    ) {\r\n      let data = Object.assign({}, this.props.data);\r\n      if (this.state.selectedItemId >= 0) {\r\n        data.items[this.state.selectedItemId] = this.state.selectedItem;\r\n      } else {\r\n        data.items.push(this.state.selectedItem);\r\n      }\r\n      this.props.onUpdateData(data);\r\n      this.close();\r\n    }\r\n  };\r\n\r\n  handleSubmitClick = () => {\r\n    if (this.state.isChangesMadeToModal) {\r\n      this.setState(\r\n        {\r\n          nameError: this.state.selectedItem.name === \"\",\r\n          categoryError: this.state.selectedItem.category === \"\",\r\n          iidError: this.state.selectedItem.iid === \"\",\r\n          serialError: this.state.selectedItem.serial === \"\",\r\n        },\r\n        this.checkErrorUpdateDataSet\r\n      );\r\n    } else {\r\n      this.close();\r\n    }\r\n  };\r\n\r\n  formatDate = (dateString) => {\r\n    if (!dateString) return \"\";\r\n    const date = new Date(dateString);\r\n    return (\r\n      date.getMonth() + 1 + \"/\" + date.getDate() + \"/\" + date.getFullYear()\r\n    );\r\n  };\r\n\r\n  formatDateForSearchBar = (dateString) => {\r\n    let monthNames = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n    if (!dateString) return \"\";\r\n    const date = new Date(dateString);\r\n    return (\r\n      monthNames[date.getMonth()] +\r\n      \" \" +\r\n      date.getDate() +\r\n      \" \" +\r\n      date.getFullYear()\r\n    );\r\n  };\r\n\r\n  formatItemDate = (dateString) => {\r\n    if (!dateString) return \"\";\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString(\r\n      [],\r\n      (\"en-US\",\r\n      {\r\n        month: \"short\",\r\n        day: \"numeric\",\r\n        year: \"numeric\",\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\",\r\n        hour12: true,\r\n      })\r\n    );\r\n  };\r\n\r\n  handleCourseDropdownChange = (e, { value }) => {\r\n    const val = value;\r\n    this.setState((prevState) => {\r\n      let selectedItem = Object.assign({}, prevState.selectedItem);\r\n      selectedItem.courses = val;\r\n      return { selectedItem, isChangesMadeToModal: true };\r\n    });\r\n  };\r\n\r\n  handleBrandDropdownChange = (e, { value }) => {\r\n    const val = value;\r\n    this.setState((prevState) => {\r\n      let selectedItem = Object.assign({}, prevState.selectedItem);\r\n      selectedItem.brand = val;\r\n      return { selectedItem, isChangesMadeToModal: true };\r\n    });\r\n  };\r\n\r\n  handleCategoryDropdownChange = (e, { value }) => {\r\n    const val = value;\r\n    this.setState((prevState) => {\r\n      let selectedItem = Object.assign({}, prevState.selectedItem);\r\n      selectedItem.category = val;\r\n      return { selectedItem, isChangesMadeToModal: true };\r\n    });\r\n  };\r\n\r\n  handleItemIdVerify = (iid) => {\r\n    if (iid === \"\") return \"\";\r\n    if (isNaN(iid)) {\r\n      this.setState({ isItemIdUnavailable: true });\r\n      return iid;\r\n    }\r\n    let fullID = \"0\".repeat(4 - iid.length) + iid;\r\n    this.setState({\r\n      isItemIdUnavailable: this.props.data.items.some(\r\n        (item, i) => item.iid === fullID && this.state.selectedItemId !== i\r\n      ),\r\n    });\r\n    return fullID;\r\n  };\r\n\r\n  generateInitialNextItemId = () => {\r\n    if (this.props.data.items.length === 0) return \"0001\";\r\n    const ids = this.props.data.items\r\n      .map((item) => parseInt(item.iid))\r\n      .sort((a, b) => a - b);\r\n    const newId = (ids.find((id) => !ids.includes(id + 1)) + 1).toString();\r\n    return \"0\".repeat(4 - newId.length) + newId;\r\n  };\r\n\r\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name });\r\n\r\n  render() {\r\n    const selectedItemId = this.state.selectedItemId;\r\n    const selectedItem = this.state.selectedItem;\r\n    let formTablePanes = [];\r\n\r\n    let items = Array.from(this.props.data.items);\r\n    items.forEach((items) => {\r\n      let result = this.props.data.transactions.filter(\r\n        (transaction) => items.atid === transaction.tid\r\n      );\r\n      items.expected = !(items.atid === \"\") ? result[0].dueDate : \"\";\r\n      items.backgroundColor = !(items.atid === \"\") ? \"mistyrose\" : \"\";\r\n    });\r\n\r\n    if (this.state.selectedItem != null && this.state.selectedItemId >= 0) {\r\n      formTablePanes = [\r\n        {\r\n          menuItem: \"Active\",\r\n          render: () => (\r\n            <Table\r\n              title={<h5>{this.state.selectedItem.name}</h5>}\r\n              columns={[\r\n                { title: \"User ID\", field: \"uid\" },\r\n                { title: \"Transaction ID\", field: \"tid\" },\r\n                {\r\n                  title: \"Checked Out Date\",\r\n                  field: \"checkedOutDate\",\r\n                  render: (rowData) => this.formatDate(rowData.checkedOutDate),\r\n                },\r\n                {\r\n                  title: \"Due Date\",\r\n                  field: \"dueDate\",\r\n                  render: (rowData) => this.formatDate(rowData.dueDate),\r\n                },\r\n              ]}\r\n              data={Array.from(\r\n                this.state.selectedItem.transactions.filter(\r\n                  (name) => name.checkedInDate === \"\"\r\n                )\r\n              )}\r\n            ></Table>\r\n          ),\r\n        },\r\n        {\r\n          menuItem: \"Completed\",\r\n          render: () => (\r\n            <Table\r\n              title={<h5>{this.state.selectedItem.name}</h5>}\r\n              columns={[\r\n                { title: \"User ID\", field: \"uid\" },\r\n                { title: \"Transaction ID\", field: \"tid\" },\r\n                {\r\n                  title: \"Checked Out Date\",\r\n                  field: \"checkedOutDate\",\r\n                  render: (rowData) => this.formatDate(rowData.checkedOutDate),\r\n                },\r\n                {\r\n                  title: \"Checked In Date\",\r\n                  field: \"checkedInDate\",\r\n                  render: (rowData) => this.formatDate(rowData.checkedInDate),\r\n                },\r\n              ]}\r\n              data={Array.from(\r\n                this.state.selectedItem.transactions.filter(\r\n                  (name) => !(name.checkedInDate === \"\")\r\n                )\r\n              )}\r\n            ></Table>\r\n          ),\r\n        },\r\n      ];\r\n    }\r\n    const inventoryTablePanes = [\r\n      {\r\n        menuItem: \"All\",\r\n        render: () => (\r\n          <Table\r\n            data={Array.from(this.props.data.items)}\r\n            columns={this.state.columnSet}\r\n            title={<h2>Inventory</h2>}\r\n            onRowClick={(event, rowData) =>\r\n              this.handleItemSelectClick(event, rowData)\r\n            }\r\n          />\r\n        ),\r\n      },\r\n      {\r\n        menuItem: \"Available\",\r\n        render: () => (\r\n          <Table\r\n            data={Array.from(\r\n              this.props.data.items.filter(\r\n                (name) => name.backgroundColor !== \"mistyrose\"\r\n              )\r\n            )}\r\n            columns={this.state.columnSet}\r\n            title={<h2>Inventory</h2>}\r\n            onRowClick={(event, rowData) =>\r\n              this.handleItemSelectClick(event, rowData)\r\n            }\r\n          />\r\n        ),\r\n      },\r\n      {\r\n        menuItem: \"Unavailable\",\r\n        render: () => (\r\n          <Table\r\n            data={Array.from(\r\n              this.props.data.items.filter(\r\n                (name) => name.backgroundColor === \"mistyrose\"\r\n              )\r\n            )}\r\n            columns={this.state.columnSet}\r\n            title={<h2>Inventory</h2>}\r\n            onRowClick={(event, rowData) =>\r\n              this.handleItemSelectClick(event, rowData)\r\n            }\r\n          />\r\n        ),\r\n      },\r\n    ];\r\n\r\n    const courseOptions = Array.from(\r\n      new Set(\r\n        [].concat.apply(\r\n          [],\r\n          [\r\n            this.state.selectedItem,\r\n            ...this.props.data.items,\r\n            ...this.props.data.users,\r\n          ]\r\n            .filter((item) => item.courses)\r\n            .map((item) => item.courses)\r\n        )\r\n      )\r\n    )\r\n      .sort()\r\n      .map((item) => ({ text: item, value: item }));\r\n    const brandOptions = Array.from(\r\n      new Set(\r\n        [this.state.selectedItem, ...this.props.data.items]\r\n          .filter((item) => item.brand)\r\n          .map((item) => item.brand)\r\n      )\r\n    )\r\n      .sort()\r\n      .map((item) => ({ text: item, value: item }));\r\n    const categoryOptions = Array.from(\r\n      new Set(\r\n        [this.state.selectedItem, ...this.props.data.items]\r\n          .filter((item) => item.category)\r\n          .map((item) => item.category)\r\n      )\r\n    )\r\n      .sort()\r\n      .map((item) => ({ text: item, value: item }));\r\n\r\n    return (\r\n      <Col className=\"stretch-h flex-col\">\r\n        <div className=\"top-bar\">\r\n          <Row>\r\n            <Col>\r\n              <Button\r\n                className=\"float-down\"\r\n                style={{ backgroundColor: \"#46C88C\", color: \"white\" }}\r\n                onClick={this.handleItemAddClick}\r\n              >\r\n                Create New Item\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <h1>Inventory</h1>\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Divider clearing />\r\n        </div>\r\n        <div className=\"page-content stretch-h\">\r\n          <Col className=\"stretch-h flex-shrink flex-col\">\r\n            <Tab panes={inventoryTablePanes} className=\"stretch-h flex-col\" />\r\n            <Modal centered show={selectedItemId != null} onHide={this.close}>\r\n              <Modal.Header bsPrefix=\"modal-header\">\r\n                <Modal.Title>Item</Modal.Title>\r\n                <IconButton onClick={this.close} size=\"small\" color=\"inherit\">\r\n                  <ClearIcon />\r\n                </IconButton>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                {this.state.activeItem === \"item\" && (\r\n                  <Form>\r\n                    <Form.Field>\r\n                      <label>\r\n                        Name:\r\n                        {this.state.nameError && (\r\n                          <span className=\"error-text modal-label-error-text\">\r\n                            Error: Field is empty.\r\n                          </span>\r\n                        )}\r\n                      </label>\r\n                      <Form.Input\r\n                        error={this.state.nameError}\r\n                        name=\"name\"\r\n                        placeholder=\"Name\"\r\n                        defaultValue={selectedItem.name}\r\n                        onChange={(e) => {\r\n                          this.handleChange(e, \"name\");\r\n                        }}\r\n                        readOnly={this.state.editable}\r\n                      ></Form.Input>\r\n                    </Form.Field>\r\n                    <Form.Group widths=\"equal\">\r\n                      <Form.Field>\r\n                        <label>\r\n                          Item ID:\r\n                          {(this.state.iidError && (\r\n                            <span className=\"error-text modal-label-error-text\">\r\n                              Error: Field is empty.\r\n                            </span>\r\n                          )) ||\r\n                            (this.state.isItemIdUnavailable && (\r\n                              <span className=\"error-text modal-label-error-text\">\r\n                                Error: Item ID is Taken\r\n                              </span>\r\n                            ))}\r\n                          {}\r\n                        </label>\r\n                        <Form.Input\r\n                          name=\"iid\"\r\n                          error={\r\n                            this.state.iidError ||\r\n                            this.state.isItemIdUnavailable\r\n                          }\r\n                          maxLength=\"4\"\r\n                          placeholder=\"Item ID\"\r\n                          defaultValue={selectedItem.iid}\r\n                          onChange={(e) => {\r\n                            this.handleChange(e, \"iid\");\r\n                          }}\r\n                          readOnly={this.state.editable}\r\n                        ></Form.Input>\r\n                      </Form.Field>\r\n                      <Form.Field>\r\n                        <label>\r\n                          Serial ID:\r\n                          {this.state.serialError && (\r\n                            <span className=\"error-text modal-label-error-text\">\r\n                              Error: Field is empty.\r\n                            </span>\r\n                          )}\r\n                        </label>\r\n                        <Form.Input\r\n                          name=\"serial\"\r\n                          error={this.state.serialError}\r\n                          placeholder=\"Serial\"\r\n                          defaultValue={selectedItem.serial}\r\n                          onChange={(e) => {\r\n                            this.handleChange(e, \"serial\");\r\n                          }}\r\n                          readOnly={this.state.editable}\r\n                        ></Form.Input>\r\n                      </Form.Field>\r\n                    </Form.Group>\r\n                    <Form.Group widths=\"equal\">\r\n                      <Form.Field>\r\n                        <label>Brand:</label>\r\n                        <Dropdown\r\n                          placeholder=\"Brand\"\r\n                          name=\"brand\"\r\n                          fluid\r\n                          search\r\n                          selection\r\n                          allowAdditions\r\n                          clearable\r\n                          options={brandOptions}\r\n                          value={selectedItem.brand}\r\n                          onChange={this.handleBrandDropdownChange}\r\n                          disabled={this.state.editable}\r\n                        />\r\n                      </Form.Field>\r\n                      <Form.Field>\r\n                        <label>\r\n                          Category:\r\n                          {this.state.categoryError && (\r\n                            <span className=\"error-text modal-label-error-text\">\r\n                              Error: Field cannot be empty.\r\n                            </span>\r\n                          )}\r\n                        </label>\r\n                        <Dropdown\r\n                          placeholder=\"Category\"\r\n                          name=\"category\"\r\n                          fluid\r\n                          error={this.state.categoryError}\r\n                          search\r\n                          selection\r\n                          allowAdditions\r\n                          options={categoryOptions}\r\n                          value={selectedItem.category}\r\n                          onChange={this.handleCategoryDropdownChange}\r\n                          disabled={this.state.editable}\r\n                        />\r\n                      </Form.Field>\r\n                    </Form.Group>\r\n                    <Form.Field>\r\n                      <label>Courses:</label>\r\n                      <Dropdown\r\n                        placeholder=\"Courses\"\r\n                        name=\"courses\"\r\n                        fluid\r\n                        multiple\r\n                        search\r\n                        selection\r\n                        allowAdditions\r\n                        options={courseOptions}\r\n                        value={selectedItem.courses}\r\n                        onChange={this.handleCourseDropdownChange}\r\n                        disabled={this.state.editable}\r\n                      />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                      <label>Notes:</label>\r\n                      <Form.Input\r\n                        name=\"notes\"\r\n                        error={this.state.notesError}\r\n                        placeholder=\"Notes\"\r\n                        defaultValue={selectedItem.notes}\r\n                        onChange={(e) => {\r\n                          this.handleChange(e, \"notes\");\r\n                        }}\r\n                        readOnly={this.state.editable}\r\n                      ></Form.Input>\r\n                    </Form.Field>\r\n                    <Form.Group widths=\"equal\">\r\n                      {this.state.selectedItemId >= 0 ? (\r\n                        <Form.Field>\r\n                          <label>Date Created:</label>\r\n                          <Form.Input\r\n                            name=\"creationDate\"\r\n                            placeholder=\"creationDate\"\r\n                            defaultValue={this.formatItemDate(\r\n                              selectedItem.creationDate\r\n                            )}\r\n                            readOnly\r\n                          ></Form.Input>\r\n                        </Form.Field>\r\n                      ) : null}\r\n                      {this.state.selectedItem.expected && (\r\n                        <Form.Field>\r\n                          <label>Expected Return Date:</label>\r\n                          <Form.Input\r\n                            name=\"expected\"\r\n                            placeholder=\"Expected\"\r\n                            defaultValue={this.formatDate(\r\n                              selectedItem.expected\r\n                            )}\r\n                            readOnly\r\n                          ></Form.Input>\r\n                        </Form.Field>\r\n                      )}\r\n                    </Form.Group>\r\n                  </Form>\r\n                )}\r\n                {this.state.activeItem === \"table\" &&\r\n                  this.state.selectedItemId >= 0 && (\r\n                    <Tab\r\n                      panes={formTablePanes}\r\n                      className=\"stretch-h flex-col\"\r\n                    />\r\n                  )}\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                {this.state.selectedItemId >= 0 ? (\r\n                  <Button\r\n                    className=\"btn btn-primary mr-auto\"\r\n                    toggle\r\n                    active={!this.state.editable}\r\n                    onClick={this.handleItemEditClick}\r\n                  >\r\n                    <Icon name=\"pencil\" />\r\n                    Edit\r\n                  </Button>\r\n                ) : null}\r\n                {this.state.selectedItemId >= 0 && (\r\n                  <Menu compact className=\"mr-auto\">\r\n                    <Menu.Item\r\n                      name=\"item\"\r\n                      active={this.state.activeItem === \"item\"}\r\n                      onClick={this.handleItemClick}\r\n                    >\r\n                      <Icon name=\"clipboard list\" />\r\n                      Item Form\r\n                    </Menu.Item>\r\n                    <Menu.Item\r\n                      name=\"table\"\r\n                      active={this.state.activeItem === \"table\"}\r\n                      onClick={this.handleItemClick}\r\n                    >\r\n                      <Icon name=\"book\" />\r\n                      Transactions\r\n                    </Menu.Item>\r\n                  </Menu>\r\n                )}\r\n                <Button\r\n                  id=\"add-icon-handler ml-auto\"\r\n                  variant=\"primary\"\r\n                  onClick={this.handleSubmitClick}\r\n                >\r\n                  {this.state.isChangesMadeToModal ? (\r\n                    <Icon name=\"save\"></Icon>\r\n                  ) : null}\r\n                  {this.state.isChangesMadeToModal ? \"Save\" : \"Close\"}\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n          </Col>\r\n        </div>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Inventory;\r\n","import React, { Component } from \"react\";\nimport { Divider, Button, Form, Dropdown } from \"semantic-ui-react\";\nimport { Col, Row, Modal } from \"react-bootstrap\";\nimport Table from \"../common/Table\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\n\nclass Staff extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      dataSet: [\n        {\n          fname: \"Seamus\",\n          lname: \"Rioux\",\n          courses: [\"Photography I\", \"Photography II\"],\n          roles: [\"Admin\", \"Staff\"],\n          id: \"54321\",\n          email: \"seamus.rioux3@gmail.com\",\n          phone: \"123-456-7890\",\n        },\n        {\n          fname: \"Greg\",\n          lname: \"Smelkov\",\n          courses: [\"Photography I\"],\n          roles: [\"Admin\"],\n          id: \"12345\",\n          email: \"greg@gmail.com\",\n          phone: \"123-456-7890\",\n        },\n      ],\n      columnSet: [\n        { title: \"First Name\", field: \"fname\" },\n        { title: \"Last Name\", field: \"lname\" },\n        {\n          title: \"Courses\",\n          field: \"courses\",\n          render: (rowData) => {\n            return rowData.courses.length > 0\n              ? rowData.courses.reduce((result, item) => (\n                  <>\n                    {result}\n                    {\", \"}\n                    {item}\n                  </>\n                ))\n              : \"\";\n          },\n        },\n        {\n          title: \"Roles\",\n          field: \"roles\",\n          render: (rowData) => {\n            return rowData.roles.length > 0\n              ? rowData.roles.reduce((result, item) => (\n                  <>\n                    {result}\n                    {\", \"}\n                    {item}\n                  </>\n                ))\n              : \"\";\n          },\n        },\n      ],\n      open: false,\n\n      firstNameError: false,\n      lastNameError: false,\n      idError: false,\n      emailError: false,\n\n      selectedUserId: null,\n      selectedUser: {\n        fname: \"\",\n        lname: \"\",\n        courses: [],\n        roles: [],\n        id: \"\",\n        email: \"\",\n        phone: \"\",\n      },\n      courseOptions: [\n        { text: \"Photography I\", value: \"Photography I\" },\n        { text: \"Photography II\", value: \"Photography II\" },\n        { text: \"Documentary Image\", value: \"Documentary Image\" },\n      ],\n      roleOptions: [\n        { text: \"Admin\", value: \"Admin\" },\n        { text: \"Staff\", value: \"Staff\" },\n      ],\n    };\n  }\n\n  close = () =>\n    this.setState({\n      selectedUserId: null,\n      firstNameError: false,\n      lastNameError: false,\n      idError: false,\n      emailError: false,\n    });\n\n  handleChange = (e, userProp) => {\n    const val = e.target.value;\n    this.setState((prevState) => {\n      let selectedUser = Object.assign({}, prevState.selectedUser);\n      selectedUser[userProp] = val;\n      return { selectedUser };\n    });\n  };\n\n  handleUserSelectClick = (e, rowData) => {\n    this.setState({\n      selectedUserId: rowData.tableData.id,\n      selectedUser: this.state.dataSet[rowData.tableData.id],\n    });\n  };\n\n  handleAddUserClick = () => {\n    this.setState({\n      selectedUserId: -1,\n      selectedUser: {\n        fname: \"\",\n        lname: \"\",\n        courses: [],\n        roles: [],\n        id: \"\",\n        email: \"\",\n        phone: \"\",\n      },\n    });\n  };\n\n  checkErrorUpdateDataSet = () => {\n    if (\n      !this.state.firstNameError &&\n      !this.state.lastNameError &&\n      !this.state.idError &&\n      !this.state.emailError\n    ) {\n      this.setState((prevState) => {\n        let dataSet = Array.from(prevState.dataSet);\n        if (this.state.selectedUserId >= 0) {\n          dataSet[this.state.selectedUserId] = this.state.selectedUser;\n        } else {\n          dataSet.push(this.state.selectedUser);\n        }\n        return { dataSet };\n      }, this.close);\n    }\n  };\n\n  handleSubmitClick = () => {\n    this.setState(\n      {\n        firstNameError: this.state.selectedUser.fname === \"\",\n        lastNameError: this.state.selectedUser.lname === \"\",\n        idError: this.state.selectedUser.id === \"\",\n        emailError: this.state.selectedUser.email === \"\",\n      },\n      this.checkErrorUpdateDataSet\n    );\n  };\n\n  handleDropdownAdditionRoles = (e, { value }) => {\n    this.setState((prevState) => ({\n      roleOptions: [{ text: value, value }, ...prevState.roleOptions],\n    }));\n  };\n\n  handleDropdownAdditionCourses = (e, { value }) => {\n    this.setState((prevState) => ({\n      courseOptions: [{ text: value, value }, ...prevState.courseOptions],\n    }));\n  };\n\n  handleDropdownChangeCourses = (e, { value }) => {\n    const val = value;\n    this.setState((prevState) => {\n      let selectedUser = Object.assign({}, prevState.selectedUser);\n      selectedUser.courses = val;\n      return { selectedUser };\n    });\n  };\n\n  handleDropdownChangeRoles = (e, { value }) => {\n    const val = value;\n    this.setState((prevState) => {\n      let selectedUser = Object.assign({}, prevState.selectedUser);\n      selectedUser.roles = val;\n      return { selectedUser };\n    });\n  };\n\n  render() {\n    const selectedUserId = this.state.selectedUserId;\n    const selectedUser = this.state.selectedUser;\n    const courseOptions = this.state.courseOptions;\n    const roleOptions = this.state.roleOptions;\n    return (\n      <Col className=\"stretch-h flex-col\">\n        <div className=\"top-bar\">\n          <Button basic onClick={this.handleAddUserClick}>\n            Create New Staff\n          </Button>\n          <Divider clearing />\n        </div>\n        <div className=\"page-content stretch-h\">\n          <Col className=\"stretch-h flex-col\">\n            <Table\n              data={Array.from(this.state.dataSet)}\n              columns={this.state.columnSet}\n              title={<h2>Staff</h2>}\n              onRowClick={(event, rowData) =>\n                this.handleUserSelectClick(event, rowData)\n              }\n            />\n            <Modal\n              centered\n              size={\"lg\"}\n              show={selectedUserId != null}\n              onHide={this.close}\n            >\n              <Modal.Header bsPrefix=\"modal-header\">\n                <Modal.Title>Staff</Modal.Title>\n                <IconButton onClick={this.close} size=\"small\" color=\"inherit\">\n                  <ClearIcon />\n                </IconButton>\n              </Modal.Header>\n              <Modal.Body>\n                <Row>\n                  <Col>\n                    <Form>\n                      <Form.Field>\n                        <label>\n                          First Name:\n                          {this.state.firstNameError && (\n                            <span className=\"error-text modal-label-error-text\">\n                              Error: Field cannot be empty.\n                            </span>\n                          )}\n                        </label>\n                        <Form.Input\n                          error={this.state.firstNameError}\n                          name=\"fname\"\n                          placeholder=\"First Name\"\n                          defaultValue={selectedUser.fname}\n                          onChange={(e) => {\n                            this.handleChange(e, \"fname\");\n                          }}\n                        ></Form.Input>\n                      </Form.Field>\n                      <Form.Field>\n                        <label>\n                          Last Name:\n                          {this.state.lastNameError && (\n                            <span className=\"error-text modal-label-error-text\">\n                              Error: Field cannot be empty.\n                            </span>\n                          )}\n                        </label>\n                        <Form.Input\n                          error={this.state.lastNameError}\n                          name=\"lname\"\n                          placeholder=\"Last Name\"\n                          defaultValue={selectedUser.lname}\n                          onChange={(e) => {\n                            this.handleChange(e, \"lname\");\n                          }}\n                        ></Form.Input>\n                      </Form.Field>\n                      <Form.Field>\n                        <label>Courses:</label>\n                        <Dropdown\n                          placeholder=\"Courses\"\n                          name=\"courses\"\n                          fluid\n                          multiple\n                          search\n                          selection\n                          allowAdditions\n                          options={courseOptions}\n                          value={selectedUser.courses}\n                          onAddItem={this.handleDropdownAdditionCourses}\n                          onChange={this.handleDropdownChangeCourses}\n                        />\n                      </Form.Field>\n                      <Form.Field>\n                        <label>Roles:</label>\n                        <Dropdown\n                          placeholder=\"Roles\"\n                          name=\"roles\"\n                          fluid\n                          multiple\n                          search\n                          selection\n                          allowAdditions\n                          options={roleOptions}\n                          value={selectedUser.roles}\n                          onAddItem={this.handleDropdownAdditionRoles}\n                          onChange={this.handleDropdownChangeRoles}\n                        />\n                      </Form.Field>\n                      <Form.Field>\n                        <label>\n                          UML ID:\n                          {this.state.idError && (\n                            <span className=\"error-text modal-label-error-text\">\n                              Error: Field cannot be empty.\n                            </span>\n                          )}\n                        </label>\n                        <Form.Input\n                          name=\"id\"\n                          error={this.state.idError}\n                          placeholder=\"UML ID\"\n                          defaultValue={selectedUser.id}\n                          onChange={(e) => {\n                            this.handleChange(e, \"id\");\n                          }}\n                        ></Form.Input>\n                      </Form.Field>\n                      <Form.Field>\n                        <label>\n                          Email:\n                          {this.state.emailError && (\n                            <span className=\"error-text modal-label-error-text\">\n                              Error: Field cannot be empty.\n                            </span>\n                          )}\n                        </label>\n                        <Form.Input\n                          name=\"email\"\n                          error={this.state.emailError}\n                          placeholder=\"Email\"\n                          defaultValue={selectedUser.email}\n                          onChange={(e) => {\n                            this.handleChange(e, \"email\");\n                          }}\n                        ></Form.Input>\n                      </Form.Field>\n                      <Form.Field>\n                        <label>Phone Number:</label>\n                        <Form.Input\n                          type=\"phone\"\n                          placeholder=\"Phone Number\"\n                          defaultValue={selectedUser.phone}\n                          onChange={(e) => {\n                            this.handleChange(e, \"phone\");\n                          }}\n                        ></Form.Input>\n                      </Form.Field>\n                    </Form>\n                  </Col>\n                </Row>\n              </Modal.Body>\n              <Modal.Footer>\n                <Button\n                  id=\"add-icon-handler\"\n                  variant=\"primary\"\n                  onClick={this.handleSubmitClick}\n                >\n                  Submit\n                </Button>\n              </Modal.Footer>\n            </Modal>\n          </Col>\n        </div>\n      </Col>\n    );\n  }\n}\n\nexport default Staff;\n","import React, { Component } from \"react\";\r\nimport { Form, Divider, Button, Icon } from \"semantic-ui-react\";\r\nimport { Col, Row, Modal } from \"react-bootstrap\";\r\nimport Table from \"../common/Table\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\n\r\nclass Transactions extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    const headerStyleGrey = {\r\n      backgroundColor: \"#E2E2E2\",\r\n      color: \"black\",\r\n      fontSize: \"24\",\r\n    };\r\n    this.state = {\r\n      columnSet: [\r\n        { title: \"First Name\", field: \"fname\", headerStyle: headerStyleGrey },\r\n        { title: \"Last Name\", field: \"lname\", headerStyle: headerStyleGrey },\r\n        { title: \"Item Name\", field: \"name\", headerStyle: headerStyleGrey },\r\n        { title: \"Item ID\", field: \"iid\", headerStyle: headerStyleGrey },\r\n        { title: \"Category\", field: \"category\", headerStyle: headerStyleGrey },\r\n        {\r\n          title: \"Notes\",\r\n          field: \"notes\",\r\n          headerStyle: headerStyleGrey,\r\n          render: (rowData) => {\r\n            return (\r\n              rowData.notes && (\r\n                <Icon size=\"large\" className=\"notes-icon\" name=\"check circle\" />\r\n              )\r\n            );\r\n          },\r\n        },\r\n        {\r\n          title: \"Checked Out\",\r\n          field: \"checkedOutDate\",\r\n          defaultSort: \"desc\",\r\n          headerStyle: headerStyleGrey,\r\n          render: (rowData) => this.formatDate(rowData.checkedOutDate),\r\n          customFilterAndSearch: (term, rowData) =>\r\n            this.formatDateForSearchBar(rowData.checkedOutDate).indexOf(\r\n              term\r\n            ) !== -1 ||\r\n            this.formatDate(rowData.checkedOutDate).indexOf(term) !== -1,\r\n        },\r\n        {\r\n          title: \"Due Date\",\r\n          field: \"dueDate\",\r\n          headerStyle: headerStyleGrey,\r\n          render: (rowData) => this.formatDate(rowData.dueDate),\r\n          customFilterAndSearch: (term, rowData) =>\r\n            this.formatDateForSearchBar(rowData.dueDate).indexOf(term) !== -1 ||\r\n            this.formatDate(rowData.dueDate).indexOf(term) !== -1,\r\n        },\r\n        {\r\n          title: \"Checked In\",\r\n          field: \"checkedInDate\",\r\n          headerStyle: headerStyleGrey,\r\n          render: (rowData) => this.formatDate(rowData.checkedInDate),\r\n          customFilterAndSearch: (term, rowData) =>\r\n            this.formatDateForSearchBar(rowData.checkedInDate).indexOf(term) !==\r\n              -1 || this.formatDate(rowData.checkedInDate).indexOf(term) !== -1,\r\n        },\r\n      ],\r\n      selectedItemId: null,\r\n      selectedItem: {\r\n        fname: \"\",\r\n        lname: \"\",\r\n        name: \"\",\r\n        iid: \"\",\r\n        category: \"\",\r\n        notes: \"\",\r\n        checkedOutDate: \"\",\r\n        checkedInDate: \"\",\r\n        dueDate: \"\",\r\n      },\r\n    };\r\n  }\r\n\r\n  close = () =>\r\n    this.setState({\r\n      selectedItemId: null,\r\n    });\r\n\r\n  handleChange = (e, userProp) => {\r\n    const val = e.target.value;\r\n    this.setState((prevState) => {\r\n      let selectedItem = Object.assign({}, prevState.selectedItem);\r\n      selectedItem[userProp] = val;\r\n      return { selectedItem };\r\n    });\r\n  };\r\n\r\n  handleUserSelectClick = (e, rowData) => {\r\n    this.setState({\r\n      selectedItemId: rowData.tid,\r\n      selectedItem: rowData,\r\n    });\r\n  };\r\n\r\n  handleDropdownAddition = (e, { value }) => {\r\n    this.setState((prevState) => ({\r\n      courseOptions: [{ text: value, value }, ...prevState.courseOptions],\r\n    }));\r\n  };\r\n\r\n  handleDropdownChange = (e, { value }) => {\r\n    const val = value;\r\n    this.setState((prevState) => {\r\n      let selectedItem = Object.assign({}, prevState.selectedItem);\r\n      selectedItem.courses = val;\r\n      return { selectedItem };\r\n    });\r\n  };\r\n\r\n  formatDate = (dateString) => {\r\n    if (!dateString) return \"\";\r\n    const date = new Date(dateString);\r\n    return (\r\n      date.getMonth() + 1 + \"/\" + date.getDate() + \"/\" + date.getFullYear()\r\n    );\r\n  };\r\n\r\n  formatDateForSearchBar = (dateString) => {\r\n    let monthNames = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n    if (!dateString) return \"\";\r\n    const date = new Date(dateString);\r\n    console.log(date.getMonth());\r\n    return (\r\n      monthNames[date.getMonth()] +\r\n      \" \" +\r\n      date.getDate() +\r\n      \" \" +\r\n      date.getFullYear()\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const selectedItemId = this.state.selectedItemId;\r\n    const selectedItem = this.state.selectedItem;\r\n\r\n    let transactions = Array.from(this.props.data.transactions);\r\n    transactions.forEach((transaction) => {\r\n      let result = this.props.data.users.filter(\r\n        (user) => transaction.uid === user.uid\r\n      );\r\n      transaction.fname = result[0] ? result[0].fname : \"\";\r\n      transaction.lname = result[0] ? result[0].lname : \"\";\r\n      result = this.props.data.items.filter(\r\n        (item) => transaction.iid === item.iid\r\n      );\r\n      transaction.name = result[0] ? result[0].name : \"\";\r\n      transaction.iid = result[0] ? result[0].iid : \"\";\r\n      transaction.category = result[0] ? result[0].category : \"\";\r\n\r\n      transaction.backgroundColor =\r\n        !transaction.checkedInDate &&\r\n        new Date(transaction.dueDate).getTime() < new Date().getTime()\r\n          ? \"mistyrose\"\r\n          : \"\";\r\n    });\r\n\r\n    return (\r\n      <Col className=\"stretch-h flex-col\">\r\n        <div className=\"top-bar\">\r\n          <Row>\r\n            <Col>\r\n              <Button\r\n                className=\"float-down\"\r\n                style={{ backgroundColor: \"#46C88C\", color: \"white\" }}\r\n                href=\"#/\"\r\n              >\r\n                Create New Transaction\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <h1>Transaction History</h1>\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Divider clearing />\r\n        </div>\r\n        <div className=\"page-content stretch-h\">\r\n          <Col className=\"stretch-h flex-col\">\r\n            <Table\r\n              data={transactions}\r\n              columns={this.state.columnSet}\r\n              title={<h2>Transaction History</h2>}\r\n              onRowClick={(event, rowData) =>\r\n                this.handleUserSelectClick(event, rowData)\r\n              }\r\n            />\r\n            <Modal centered show={selectedItemId != null} onHide={this.close}>\r\n              <Modal.Header bsPrefix=\"modal-header\">\r\n                <Modal.Title>Transaction</Modal.Title>\r\n                <IconButton onClick={this.close} size=\"small\" color=\"inherit\">\r\n                  <ClearIcon />\r\n                </IconButton>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <Row>\r\n                  <Col>\r\n                    <Form>\r\n                      <Form.Group widths=\"equal\">\r\n                        <Form.Field>\r\n                          <label>Item Name:</label>\r\n                          <Form.Input\r\n                            name=\"name\"\r\n                            placeholder=\"name\"\r\n                            defaultValue={selectedItem.name}\r\n                            readOnly\r\n                          ></Form.Input>\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                          <label>Category:</label>\r\n                          <Form.Input\r\n                            name=\"category\"\r\n                            placeholder=\"Category\"\r\n                            defaultValue={selectedItem.category}\r\n                            readOnly\r\n                          ></Form.Input>\r\n                        </Form.Field>\r\n                      </Form.Group>\r\n                      <Form.Field>\r\n                        <label>Rented by:</label>\r\n                        <Form.Group widths=\"equal\">\r\n                          <Form.Input\r\n                            name=\"fname\"\r\n                            placeholder=\"First Name\"\r\n                            defaultValue={selectedItem.fname}\r\n                            readOnly\r\n                          ></Form.Input>\r\n                          <Form.Input\r\n                            name=\"lname\"\r\n                            placeholder=\"Last Name\"\r\n                            defaultValue={selectedItem.lname}\r\n                            readOnly\r\n                          ></Form.Input>\r\n                        </Form.Group>\r\n                      </Form.Field>\r\n                      <Form.Field>\r\n                        <label>Item ID:</label>\r\n                        <Form.Input\r\n                          name=\"iid\"\r\n                          placeholder=\"Item ID\"\r\n                          defaultValue={selectedItem.iid}\r\n                          readOnly\r\n                        ></Form.Input>\r\n                      </Form.Field>\r\n                      <Form.Field>\r\n                        <label>Notes:</label>\r\n                        <Form.Input\r\n                          name=\"notes\"\r\n                          placeholder=\"Notes\"\r\n                          defaultValue={selectedItem.notes}\r\n                          readOnly\r\n                        ></Form.Input>\r\n                      </Form.Field>\r\n                      <Form.Group\r\n                        widths={this.state.selectedItem.checkedInDate ? 3 : 2}\r\n                      >\r\n                        <Form.Field>\r\n                          <label>Checked Out:</label>\r\n                          <Form.Input\r\n                            name=\"checkedOut\"\r\n                            placeholder=\"Checked Out\"\r\n                            defaultValue={this.formatDate(\r\n                              selectedItem.checkedOutDate\r\n                            )}\r\n                            readOnly\r\n                          ></Form.Input>\r\n                        </Form.Field>\r\n                        {this.state.selectedItem.checkedInDate && (\r\n                          <Form.Field>\r\n                            <label>Checked In:</label>\r\n                            <Form.Input\r\n                              name=\"checkedIn\"\r\n                              placeholder=\"Checked In\"\r\n                              error={!selectedItem.checkedInDate}\r\n                              defaultValue={this.formatDate(\r\n                                selectedItem.checkedInDate\r\n                              )}\r\n                              readOnly\r\n                            ></Form.Input>\r\n                          </Form.Field>\r\n                        )}\r\n                        <Form.Field>\r\n                          <label>Due Date:</label>\r\n                          <Form.Input\r\n                            name=\"due\"\r\n                            placeholder=\"Due Date\"\r\n                            defaultValue={this.formatDate(selectedItem.dueDate)}\r\n                            readOnly\r\n                          ></Form.Input>\r\n                        </Form.Field>\r\n                      </Form.Group>\r\n                    </Form>\r\n                  </Col>\r\n                </Row>\r\n              </Modal.Body>\r\n            </Modal>\r\n          </Col>\r\n        </div>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Transactions;\r\n","import React, { Component } from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Header from \"./common/Header\";\r\nimport Sidebar from \"./common/Sidebar\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport \"./App.scss\";\r\nimport CheckInOut from \"./pages/CheckInOut\";\r\nimport Users from \"./pages/Users\";\r\nimport Inventory from \"./pages/Inventory\";\r\nimport Staff from \"./pages/Staff\";\r\nimport Transactions from \"./pages/Transactions\";\r\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleDataUpdate = this.handleDataUpdate.bind(this);\r\n    this.state = {\r\n      data: {\r\n        users: [\r\n          {\r\n            fname: \"User\",\r\n            lname: \"AWhoExists\",\r\n            uid: \"11111111\",\r\n            email: \"existing@email.com\",\r\n            phone: \"123-456-7891\",\r\n            notes: \"Optional notes for Seamus\",\r\n            creationDate: new Date().getTime(),\r\n            courses: [\"PreviousCourse\"],\r\n          },\r\n          {\r\n            fname: \"Seamus\",\r\n            lname: \"Rioux\",\r\n            uid: \"54321\",\r\n            email: \"srioux@email.com\",\r\n            phone: \"123-456-7891\",\r\n            notes: \"Optional notes for Seamus\",\r\n            creationDate: new Date().getTime(),\r\n            courses: [\"Photography I\"],\r\n          },\r\n          {\r\n            fname: \"Greg\",\r\n            lname: \"Smelkov\",\r\n            uid: \"12345\",\r\n            email: \"greg@email.com\",\r\n            phone: \"123-456-7891\",\r\n            notes: \"Optional notes for Greg\",\r\n            creationDate: new Date().getTime(),\r\n            courses: [\"Photography I\", \"Photography II\"],\r\n          },\r\n        ],\r\n        items: [\r\n          {\r\n            name: \"Canon 5D Mk II\",\r\n            iid: \"0001\",\r\n            brand: \"Canon\",\r\n            serial: \"123456\",\r\n            category: \"Camera\",\r\n            notes: \"\",\r\n            atid: \"3\",\r\n            courses: [\"Photography II\"],\r\n            creationDate: new Date().getTime(),\r\n          },\r\n          {\r\n            name: \"Canon 18-55 F4.0\",\r\n            iid: \"0002\",\r\n            brand: \"Canon\",\r\n            serial: \"223456\",\r\n            category: \"Lens\",\r\n            notes: \"Missing lens cap\",\r\n            atid: \"4\",\r\n            courses: [\"Photography I\", \"Photography II\"],\r\n            creationDate: new Date().getTime(),\r\n          },\r\n          {\r\n            name: \"Mavic Drone\",\r\n            iid: \"0003\",\r\n            brand: \"Mavic\",\r\n            serial: \"323456\",\r\n            category: \"Other\",\r\n            notes: \"Goes whirrr\",\r\n            atid: \"\",\r\n            courses: [\"Photography I\", \"Photography II\"],\r\n            creationDate: new Date().getTime(),\r\n          },\r\n          {\r\n            name: \"Canon 5D Mk II\",\r\n            iid: \"0004\",\r\n            brand: \"Canon\",\r\n            serial: \"423456\",\r\n            category: \"Camera\",\r\n            notes: \"\",\r\n            atid: \"\",\r\n            courses: [\"Photography II\"],\r\n            creationDate: new Date().getTime(),\r\n          },\r\n          {\r\n            name: \"Canon 18-55 F4.0\",\r\n            iid: \"0005\",\r\n            brand: \"Canon\",\r\n            serial: \"523456\",\r\n            category: \"Lens\",\r\n            notes: \"Missing lens cap\",\r\n            atid: \"\",\r\n            courses: [\"Photography I\", \"Photography II\"],\r\n            creationDate: new Date().getTime(),\r\n          },\r\n        ],\r\n        transactions: [\r\n          {\r\n            tid: \"1\",\r\n            uid: \"54321\",\r\n            iid: \"0001\",\r\n            checkedOutDate: new Date(\"7/22/2020\").getTime(),\r\n            dueDate: new Date(\"7/26/2020\").getTime(),\r\n            checkedInDate: new Date(\"7/24/2020\").getTime(),\r\n            notes: \"Example of transaction notes\",\r\n          },\r\n          {\r\n            tid: \"2\",\r\n            uid: \"54321\",\r\n            iid: \"0002\",\r\n            checkedOutDate: new Date(\"7/22/2020\").getTime(),\r\n            dueDate: new Date(\"7/26/2020\").getTime(),\r\n            checkedInDate: new Date(\"7/24/2020\").getTime(),\r\n            notes: \"Example of transaction notes\",\r\n          },\r\n          {\r\n            tid: \"3\",\r\n            uid: \"12345\",\r\n            iid: \"0001\",\r\n            checkedOutDate: new Date(\"7/25/2020\").getTime(),\r\n            dueDate: new Date(\"7/28/2020\").getTime(),\r\n            checkedInDate: \"\",\r\n            notes: \"Example of transaction notes\",\r\n          },\r\n          {\r\n            tid: \"4\",\r\n            uid: \"12345\",\r\n            iid: \"0002\",\r\n            checkedOutDate: new Date(\"7/25/2020\").getTime(),\r\n            dueDate: new Date(\"7/27/2020\").getTime(),\r\n            checkedInDate: \"\",\r\n            notes: \"Example of transaction notes\",\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  }\r\n\r\n  handleDataUpdate(data) {\r\n    this.setState({ data });\r\n    // console.log(\"Data Updated\", data);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <Router>\r\n          <Container fluid className=\"no-gutters flex-col stretch-hw\">\r\n            <Header />\r\n            <Row className=\"flex-grow no-gutters\">\r\n              <Col md=\"auto\" className=\"no-gutters\">\r\n                <Sidebar />\r\n              </Col>\r\n              <Col className=\"no-gutters\">\r\n                <Switch>\r\n                  <Route exact path=\"/\">\r\n                    <CheckInOut\r\n                      data={this.state.data}\r\n                      onUpdateData={this.handleDataUpdate}\r\n                    />\r\n                  </Route>\r\n                  {/* <Route path=\"/checkinout\">\r\n                    <CheckInOut\r\n                      data={this.state.data}\r\n                      onUpdateData={this.handleDataUpdate}\r\n                    /> */}\r\n\r\n                  <Route path=\"/users\">\r\n                    <Users\r\n                      data={this.state.data}\r\n                      onUpdateData={this.handleDataUpdate}\r\n                    />\r\n                  </Route>\r\n                  <Route path=\"/inventory\">\r\n                    <Inventory\r\n                      data={this.state.data}\r\n                      onUpdateData={this.handleDataUpdate}\r\n                    />\r\n                  </Route>\r\n                  <Route path=\"/staff\">\r\n                    <Staff onUpdateData={this.handleDataUpdate} />\r\n                  </Route>\r\n                  <Route path=\"/transactions\">\r\n                    <Transactions\r\n                      data={this.state.data}\r\n                      onUpdateData={this.handleDataUpdate}\r\n                    />\r\n                  </Route>\r\n                </Switch>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Router>\r\n      </MuiPickersUtilsProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}